[MISSING_PAGE_EMPTY:1]

## Preface

GEANT-4 [1] is the successor of the famous GEANT simulation package. While GEANT up to 3.21 was written in FORTRAN 77, the new simulation package GEANT-4 is a C++ class library. It was completely rewritten and the physics simulation, especially for low-energy processes, was improved [1]. Until the year 2000 the entire ATLAS detector simulation was based on GEANT 3.21. In 1999 the ATLAS collaboration decided to develop a new simulation programme using GEANT-4. To get experience with this new package it was decided to spend the year 2000 with writing the test-beam and test-stand simulation programmes in C++ with GEANT-4. MTGEANT-4 - the Munich test-stand and test-beam simulation programme - is the contribution of the University of Munich to this programme.

## 1 Installation of MIGeant-4

The MTGEANT-4 source code is available via mail to

Oliver.Kortner@cern.ch.

In order to compile MTGEANT-4 properly, the GEANT-4 library must be installed on your system. If this is done, on LINUX systems the user has to follow these installation steps:

1. Move the file "mtegant-4.1.0.tar" to the directory where you want to store the MTGEANT-4 source code.
2. Change to this directory and type in

tar -xvf mtgeant-4.1.0.tar [ENTER]

to untar the file.
3. Type in

cd mtegant-4 [ENTER]

make [ENTER]

to compile the programme and to complete the installation procedure. The executable will be stored in your GEANT-4 bin working directory.

For the installation on other systems, the user has to change the link to the curses library in the mtakefile in the mtgeant-4 working directory

## 2 Defining Your Geometry in Mtgeant-4

Once MTGEANT-4 has been installed, the first step is to create a geometry. To do so one can start an interactive MTGEANT-4 session by typing

mtgeant-4 [ENTER].

The following menu pops up:

With the keys on the keypad one must move the dark selection bar to the option "CHANGE TEST SET-UP GEOMETRY" and hit the [ENTER]-key on the keypad to enter the test set-up geometry menu. Another window pops up (see figure 1). In the upper half of the screen you see the current settings. The experimental hall is a rectangular box with the half-axes 20\(\times\)20\(\times\)20 m\({}^{3}\). If the experimental hall is too small for the set-up the user can enlarge it via the option "CHANGE SIZE OF THE EXPERIMENTAL HALL". If the size is all right, the user can start to place the detector volumes inside the experimental hall. The origin of the hall coordinate frame is the center of the experimental hall.

The first step to position a volume inside the experimental hall is to create a certain number of components by selecting the option "CHANGE NUMBER OF COMPONENTS". There are five kinds of components,1. insensitive react angular _boxes_,
2. sensitive reactangular boxes, so-called _debug planes_, which record the position, three-momentum, energy and type of each particle hitting the debug plane,
3. _scintillator layers_ which are treated as active detectors,
4. _barrel MDT chambers_, also treated as active detectors,
5. _streamer tube layers_ which are Iarocci tube detectors used in the cosmic ray test-stand in Munich.

The second step is to set the characteristics of the selected components. To do so, one selects the option "CHANGE INDIVIDUAL SETTINGS OF COMPONENTS" in the test-set-up set-up menu. The details of the submenu structure of this part of the user interface are described in appendix A. An overview of the functionality is given in the following subsections. It is common to all detectors

Figure 1: The geometry-settings menu of MTGEANT-4.

that there position and orientation in the experimental hall is given by a position vector and local coordinate axes.

### Geometrical Parameters of Boxes

A _box_ in MTGEANT-4 is described by the position of its center-of-gravity in the experimental hall, its coordinate axes whose magnitudes are the half-lengths of the tubes, and its material. MTGEANT-4 uses a modified version of Andrea Dell'Acqua's material manager [2] with 13 materials, aluminium, iron, copper, silicon, lead, scintillator material, air, CO\({}_{2}\), ArCO\({}_{2}\) at 3 bars pressure, RPC gas, RPVC, bakelite and tungsten. If the user needs additional materials he has to add them to the MaterialManager and recompile MTGEANT-4. MTGEANT-4 will recognize the new materials.

### Geometrical Parameters of Debug Planes

The geometrical parameters of _debug planes_ are the same as for boxes.

### Geometrical Parameters of Scintillator Layer

The geometry of a _scintillator layer_ is given by the number of scintillators in the layer, the position of the center-of-gravity of the layer, the coordinate axes along which the scintillators are placed, and the geometry of the scintillators. A scintillator is a rectangular box consisting of a sensitive (active) material painted in red in figure 2 and a protective cover painted in black in figure 2. The signal speed is assumed to be constant in the scintillator and can be set by the user as well as the size of the active and the dead part of the scintillator. Finally, the scintillator can be read out on either one or two sides. These sides are assumed to be the ends along the local y-axis. The read-out is ADC and, or TDC read-out.

### Geometrical Parameters of Barrel Mdt Chambers

Barrel MDT chambers are build out of two multilayers of drift tubes. The number of tube layers per multilayer can be set by the user as well as the number of tubes in one layer. The distance of multilayers is the tickness of the crossbar. The tubes are glued onto a frame whose material is aluminium by default, but can be changed by the user. The position of the chamber is the position of the center-of-gravity of the middle crossbar, the local coordinate axes are defined as in figure 3, the x-axis along the wires, the y-axis along a layer, and the z-axis perpendicular to the chamber. By default no background hits which are not correlated with the event are produced inside a drift tube. However, the probability of these accidental hits can be set greater than 0 by the user.

Figure 3: The geometry of a barrel MDT chamber in MTGEANT-4.

Figure 2: The scintillator geometry in MTGEANT-4; in red the sensitive scintillator material, in black the protective, insensitive cover.

### Geometrical Parameters of Streamer Tube Layers

Streamer tube layers are layers built out of a user-defined number of limited streamer tubes as depicted in figure 4. In MTGEANT-4, the gas is assumed to be essentially CO\({}_{2}\). The user can change the position of the center of gravity of the streamer tube layer and its orientation; the x-axis of the layer is defined along the anode wires, the y-axis perpendicular to the wires, but inside the layer plane, and the z-axis perpendicular to the layer plane. If a charged particle crosses the gas volume of a tube, the signal is detected at the end of pick-up strips which are put on top of the streamer tubes. The user can change the orientation of the pick-up strips, either parallel or perpendicular to the signal wires, their width and the speed of the signal in the strips.

### How to Save the Generated Geometry

The geometry settings of each component can be saved in separate geometry files. The user can fill in a list of geometry files which can be saved and reread. That way the entire geometry is saved in a granular form.

Figure 4: The geometry of a layer of three limited streamer tubes in MTGEANT-4.

## 3 Adjusting the Read-Out

### Digitization Scheme

Inside MTGEANT-4 the digitization is based on digitizer modules described below and signal pulses. There are two signal pulses, analog pulses and logical pulses.

An analog pulse is given by two quantities, the pulse height and the time of the pulse.

A logical pulse has a start and a stop time. Between the start and stop time it describes a logical 1, outside this interval a logical 0.

Analog and logical pulse are used as input or output signal by the different digitizer modules.

### Digitizer Modules

All sensitive components in MTGEANT-4 are read out via digitizer modules. Depending on the detector type the following digitizer units are used:

1. discriminators,
2. time-to-digital converters (TDC's),
3. an analog-to-digital converters (ADC's).

A discriminator gives a logical pulse if the analog input signal is above a user-defined threshold. The logical pulse has a variable width and is produced after a user-defined delay-time after which the input signal has been detected.

TDC's can be used in COMMON STOP OR COMMON START mode. In the COMMON STOP mode the TDC clock is started by the trigger pulse (trigger description, see below) and stopped by the detector component itself, while in COMMON START MODE it is the opposite: the clock is started by the detector signal and stopped by the trigger.

ADC's convert analog signals arriving within the trigger gate into an integer number.

The operation parameters of the digitizer modules can be changed via set-up menus. It is foreseen to write the settings to a file.

### Adjusting the Trigger

MTGEANT-4 provides a simple trigger simulation. MTGEANT-4 describes the trigger as a cascade of coincidence units. Each coincidence unit compares two logical input signals. A coincidence unit can run in disjunction or conjuction mode.

The trigger is installed after the geometry of the set-up has been defined. The trigger is configured in the following way:

1. Set the number of coincidence units used in the trigger.
2. Select one of these units, so-called output unit, to give the trigger signal.
3. Change the individual settings of the coincidence units. 1. [label=()]
2. Configure each coincidence unit, i.e. set the mode - OR or AND -, set the delay time, set the pulse width of the output pulse. 2. Change the cabling of the units by selecting the two input signals of each unit.
3. Save the trigger settings. As in case of the geometry of the set-up, the trigger settings are stored in a granular form.

The coincidence units trigger on the leading edge of the input signals.

Remark. The trigger settings file should always been read after the test set-up geometry has been defined. Changing this order can cause problems, as pointers to digitizer modules will be set inside the programme.

#### 3.3.1 Numbering Convention for Digitizer Units

The digitizer units of the different detectors types are labelled by a number which appears in the name of the unit.

Numbering of the discriminators in a scintillator layer. Let k be the number of the k-th scintillator in the row of scintillators inside a layer. If the scintillator is read out on both ends, the corresponding discriminators have the numbers 2k-1 and 2k. If the scintillator is read out on one end only, the number of the corresponding discriminator is k.

Numbering of the discriminators in a streamer tube layer. Let k be the number of the k-th pick-up strip in the row of pick-up strips. The discriminator connected to this strip has the number k.

## 4 Changing the Settings of the Event Generators

MTGEANT-4 provides two single-particle event generators: a test-beam generator and a cosmic ray generator. The test-beam generator produces mono-energetic particles, the cosmic ray generator particles with an 1/E\({}^{2}\) energy spectrum. The primary particle is generated inside a vertex plane (figure 5) in the direction of the z axis of the vertex plane.

The distribution of the vertex of the primary particle is flat by default; in case of the test-beam generator it can be changed to Gaussian where the \(\sigma\) of the distribution in x and y is the half-length of the vertex plane in x and y vice versa. In test-beam mode the direction of the primary particle can be smeared out around the mean direction. The mean smearing in the xz- and zy-plane can be changed by the user (see figure 6).

In the cosmic ray mode the flight direction of the primary particle is uniformely distributed in the azimuthal angle in a user-defined interval; a \(\cos^{2}\theta\) distribution is used in the polar angle \(\theta\) in a user-defined interval. In both modes the type of the primary particle can be changed, and the settings can be written to a file.

Figure 5: The meaning of the vertex-plane axes.

Figure 6: Explanation of the smearing of the flight direction of the primary particle.

Final adjustments

At the stage where the set-up, the trigger, and the event generator have been configured one can finish the preparation for a Monte-Carlo run. First one can specify the file where the initial random seeds are stored and the final seeds of the Monte-Carlo run are saved. The number of events one wants to generate and the name of the data file have to be set by the user.

As for the test set-up geometry the user can fill in a set-up file table containing all the set-up files and store it. That way a generated set-up can be reused in another session.

## 6 Interactive and Batch Geant-4 Sessions

MTGEANT-4 is able to work in the interactive and the batch mode of GEANT-4. The user can quit to one of these modes in the set-up menu.

So far, only one way of invocing MTGEANT-4 has been described. If the user has already saved a full set-up, MTGEANT-4 can be started in two other ways, either via

mtgeant-4 -setup_file <name of the set-up file> -menu

to read the set-up from the specified file and invoke the set-up menu, or via

mtgeant-4 -setup_file <name of the set-up file> -no_menu

to start a batch Monte-Carlo run with the settings given in the set-up file.

## 7 Mtgeant-4 Data File Format

The data generated by MTGEANT-4 is stored in an MTGEANT-4 ntuple file. This ntuple can be read via the classes Mt_tuple_manager and Mt_tuple. The usage of these class is explained in the header files of these classes.

## 8 Detector Responses Simulation

### Response of Debug Planes

Debug planes are boxes which are treated as sensitive detectors. If GEANT-4 is inside such a box in a tracking step, the debug plane will store the type of the particle inside the box, its type, position in world coordinates, energy in MeV, and three-momentum direction. Therefore, in order to avoid multiple counting of one particle inside a debug plane, the debug plane has to be chosen sufficiently thin so that only one track point inside the plane is generated by GEANT-4.

### Response of Scintillators

Assume a scintillator has been hit n times in an event; in the k-th hit, the energy \(E_{k}>0\) has been deposited; the distance of the k-th hit from the read-out point be \(r_{k}\) (see figure 7). At the end of the event, MTGEANT-4 generates an "analog pulse" at the read-out side. The analog pulse's height is \(0.1(E_{1}[MeV]+...+E_{n}\,[MeV])\). The arrival time of the pulse is the smallest value of \(r_{i}/c+(hit\,time)_{i}\) where c is the time of flight of the signal in the scintillator. Obviously, no light attenuation and time slewing effects are taken into account.

### Response of monitored Drift Tubes

To describe the simulation of the response of an MDT we first consider the case that one particle track traverses an MDT as depicted in figure 8. In the GEANT-4 track point a straight line in direction of the particle's three-momentum is created. The distance r of this line from the wire is calculated. This distance r is transformed into a drift time according to the drift-time distribution \(p(t|r)\) given in M. Deile's work [3][4]; this distribution function contains non-gaussian tails in the drift-time distribution for small r. If the tube was hit at the time \(t_{\mu}\) and the GEANT-4 track point is at distance \(l\) from the tube end where the read-out

Figure 8: Schematic of and MDT hit in one event.

Figure 7: Schematic of scintillator hits in one event.

electronics is mounted, the TDC gets an MDT signal at the time \(t_{m}u+l/c+t(r)\), where c is the speed of light (= signal speed in the drift tube). MTGEANT-4 only considers GEANT-4 track points if the particle connected to the track is entering or exiting the gas volume of the MDT.

If the tube is hit more than once, only the hit with the shortest time \(t_{m}u+l/c+t(r)\) is registered because we have single-hit TDC's in ATLAS.

The MDT's are only sensitive to hits of charged particles. The efficiency of an MDT drops to zero at the tube walls. Let dr be what is called efficiency drop radius in MTGEANT-4 and R be the inner tube radius. For radii \(0\leq r\leq R-dr\) MTGEANT-4 assumes 100% efficiency of the MDT. From r=R-dr to r=R the efficiency linearity falls down from 1 to 0.

### Response of Limited Streamer Tubes

Limited streamer tubes are sensitive to charged particles. If a charged particle hits a streamer tube, a signal of pulse height p is generated. The pulse height p is determined by a Gaussian random number generator. The mean and the width of the Gaussian distribution is user-defined. The pulse height is distributed to the pick-up strips according to the fraction of influence charge they would get if a negative charge sat on the HV wire. The signal of the pick-up strips arrives the time \(l/c\) after the hit time, where l is the distance of the hit from the read-out side and c the speed of light in the pick-up strip. No drift time is accounted for.

## 9 Acknowledgements

I have to thank Domizia Orestano and Fabrizio Petruzzi for their detailed bug reports which allowed me to provide a stable version of MTGEANT-4.

## References

* [1] Geant4 Collaboration, Geant4 User's Guide, Geneva 1999.
* [2] A. Dell'Acqua, private communications.
* [3] M. Deile, N. Hessey, A. Staude, MDT Track Fitting with the Maximum Likelihood Method, ATLAS Internal Note MUON-NO-240.
* [4] M. Deile, Optimization and Calibration of the Drift-Tube Chambers for the ATLAS Muon Spectrometer, PhD thesis, Munich 2000.

[MISSING_PAGE_FAIL:14]
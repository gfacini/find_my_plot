# Vertex Reconstruction in the ATLAS Experiment at the LHC

E. Bouhova-Thacker, V. Kostyukhin, T. Koffas, W. Liebig, M. Limper, G. Piacquadio, K. Prokofiev,

C. Weiser, A. Wildauer, on behalf of the ATLAS Collaboration.

Manuscript sent to IEEE/NSS as conference proceedings on November 14, 2008. V. Liebig has been supported by the Netherlands Organization for Scientific Research (NWO), research grant VID 680.47.218.E. Bouhova-Thacker is with Lancaster University, Lancaster LA1 4YB, UK. V. Kostyukhin is with Physikalisches Institut der Universitat Bonn, Nussallee 12, 53118 Bonn, Germany.W. Liebig, M. Limper are with Nikhef, Science Park 105, 1098 XG Amsterdam, Netherlands.G. Piacquadio, C. Weiser are with Physikalisches Institut, Albert-Ludwig-Universitat Freiburg, Hermann-Herder-Str. 3, 79104 Freiburg, Germany.T. Koffas, K. Prokofiev are with CERN, 1211 Geneve 23, Switzerland.A. Wildauer is with IFIC, Apartado de Correos 22085, 46071 Valencia, Spain.

###### Abstract

In the harsh environment of the Large Hadron Collider at CERN (design luminosity of \(10^{34}\) cm\({}^{-2}\) s\({}^{-1}\)) efficient reconstruction of vertices is crucial for many physics analyses. Described in this paper are the strategies for vertex reconstruction used in the ATLAS experiment and their implementation in the software framework Athena. The algorithms for the reconstruction of primary and secondary vertices as well as for finding of photon conversions and vertex reconstruction in jets are described. A special emphasis is made on the vertex fitting with application of additional constraints. The implementation of mentioned algorithms follows a very modular design based on object-oriented C++ and use of abstract interfaces. The user-friendly concept allows event reconstruction and physics analyses to compare and optimize their choice among different vertex reconstruction strategies. The performance of implemented algorithms has been studied on a variety of Monte Carlo samples and results are presented.

## I Introduction

This paper describes vertex reconstruction in the ATLAS Experiment at the Large Hadron Collider (LHC) at the European Organization for Nuclear Research (CERN), Geneva, Switzerland. It presents the modular design of the software for vertex reconstruction and properties of its concrete applications. The performance is demonstrated on several vertex topologies such as primary vertex finding, reconstruction of conversions and long-lived particles, constrained vertex fitting and vertex finding in jets.

## II The ATLAS Detector

The ATLAS Detector [1] is a particle detector in operation at the LHC at CERN. It is a multi-purpose detector designed to cover a wide range of physics analyses. For vertex reconstruction, the Inner Detector (ID) is of most importance. The ATLAS ID consists of three subsystems which, from inside to outside, are:

* three barrel and 2\(\times\)3 end-cap silicon pixel layers with an R\(\phi\) resolution of 10 \(\mu\)m;
* four barrel and 2\(\times\)9 end-cap silicon microstrip layers with an R\(\phi\) resolution of 17 \(\mu\)m;
* transition radiation tracker with e\({}^{\pm}\) identification and an R\(\phi\) resolution of approximately 130 \(\mu\)m.

The sensitive areas of the barrel detectors range from 50.5 mm to 122.5 mm for the pixel detector, from 299 mm to 514 mm for the silicon microstrip detector and from 563 mm to 1066 mm for the transition radiation tracker. The inner detector provides on average 3+4+36 measurements per charged particle trajectory, thus allowing for efficient reconstruction of tracks and vertices.

## III Vertex Topologies

The collision of the two proton bunches in the LHC with a center-of-mass energy of 14 TeV leads to several different vertex topologies as shown in Fig. (1). In a typical collision event, several primary vertices along the beam as well as decays of long-lived particles, photon conversions, vertices in jets and vertices from decay chains, are produced. The reconstruction of vertices from these processes, distinguished by their different topologies, forms a vital part of the data analysis.

The reconstruction of primary vertices is important for many physics studies, including searches for new particles, tagging of \(b\)- and \(\tau\)-jets, reconstruction of exclusive \(b\)-decays and similar applications. The correct identification of _the_ primary vertex which stems from the hard inelastic collision among many low-p\({}_{\rm T}\) proton-proton interactions (so called minimum bias events) is of particular importance in the LHC conditions.

The high accuracy of the silicon tracker will allow ATLAS to select jets from \(b\)-quarks by searching for tracks originating

Fig. 1: Vertex topologies important for physics analyses in ATLAS: primary and pile up vertices, vertices from conversions and long-lived particles, vertices in jets and vertices from decay chains.

from a separate \(b\)-hadron decay vertex in the vicinity of the primary vertex. The efficient detection and reconstruction of such displaced vertices is actually essential to achieve a good \(b\)-tagging performance. However, the fragmentation of a \(b\)-quark results in a decay chain composed of a secondary vertex from the weakly decaying \(b\)-hadron and typically one or more tertiary vertices from \(c\)-hadron decays. The limited experimental resolution and high track density inside a jet therefore demand a dedicated vertex reconstruction, for which several approaches exist in ATLAS.

Particle decays in flight and even full decay chains are reconstructed using dedicated vertex finders. They exploit the assumed properties of the virtual particle and the conservation laws governing its decay, and use them to apply additional kinematic constraints in the vertex fit.

About 40% of all photons produced in \(pp\) collisions in ATLAS will convert in the material of the ID into e\({}^{+}\)e\({}^{-}\)pairs [1]. Hence, reconstruction of conversions is important for many physics analyses with photons in their final states. Reconstruction of conversions is also important to study the distribution of material in the detector (e.g. detector description in simulation, calibration of calorimeters).

Finally the decays of long-lived neutral particles (V\({}^{0}\)'s) are determined. This is useful for instance for \(b\)-tagging where tracks from V\({}^{0}\)'s degrade the \(b\)-tagging performance due to their relatively large impact parameters. As in the case of secondary vertex reconstruction, these applications employ constrained vertex fitting.

## IV Software Framework

The aim of the vertex reconstruction software in ATLAS is to provide a common and modular infrastructure to reconstruct different vertex topologies discussed in the previous section. This is achieved by using a common Event Data Model and common abstract interfaces based on object oriented C++. The software for vertex reconstruction is fully integrated into the general ATLAS computing environment [2].

### _Event Data Model_

The Event Data Model (EDM) defines the data classes in which information relevant for vertex reconstruction is stored. It is also used to transfer information between algorithms and to store final results on disk. The EDM consists of classes representing reconstructed vertices and their relation to other objects used during a vertex reconstruction process (tracks, jets, etc.). Different vertex topologies also require different levels of detail concerning the data which needs to be stored in the various EDM classes. This is achieved by using inheritance throughout the data model. This approach has two important advantages:

1. Quantities which are common to all vertex topologies are stored and retrieved the same way (common look and feel for users). This includes e.g. the vertex position and the vertex-track relations.
2. Only the required amount of detail for a given vertex topology is stored in the objects and hence on disk.

The EDM for vertex reconstruction also uses data classes of the general EDM for reconstruction of tracks whenever it has to deal with tracking quantities like track parameters or error matrices. End users and developers alike profit from this sharing of data classes.

### _Interfaces_

Next to a common event data model, abstract interfaces are defined for all vertex reconstruction and related helper tasks. Algorithms for vertex reconstruction such as primary vertex finding or reconstruction of conversions make use of these interfaces to complete different steps of their reconstruction chain. Each interface can have several concrete implementations. The implementation used at each step is defined during run time by a steering file.

An excerpt of various interfaces for vertex reconstruction is presented as follows:

* _IVertexFinder_: An interface for the implementation of vertex finders. Concrete implementations analyze a track collection and return a set of reconstructed vertices (i.e. a vector of primary and minimum bias vertices).
* _IVertexFinder_: An interface for the implementation of vertex fitters. The fit method operates on a set of reconstructed tracks and, optionally, on a starting point for the fit. An additional vertex constraint (typically the beam spot) can also be used. The interface returns a single reconstructed vertex.
* _IVertexSeedFinder_: An interface for the algorithms estimating the starting point of the vertex fit, given a set of tracks.
* _IVertexLinearizedTrackFactory_: An interface for storing the parameters of the linearized measurement equation, representing the dependence of the track parameters on the vertex position and on the track momentum at the vertex.
* _IVertexUpdator_: An interface for tools which are called iteratively to update the vertex estimate with one track at a time. Concrete implementations allow the addition or removal of a single track to or from a vertex candidate.

Fig. 2: Example sequence diagram showing the usage of abstract interfaces to define the reconstruction of conversions (\(\gamma\rightarrow\)e\({}^{+}\)e\({}^{-}\)).

* _IvertexSmoother_: An interface for the implementation of algorithms which update the parameters of all tracks fitted to a vertex with the knowledge of the vertex position.
* _IsecVertexInJetFinder_: An interface for the reconstruction of secondary vertices in jets. As an input, the reconstructed primary vertex, the tracks associated to a jet and the jet direction as reconstructed in the calorimeter are provided, while the expected output is a set of one or more reconstructed displaced vertices.
* _IvertexKinematicFilter_: An interface for fitting a set of identified particles, i.e. tracks with associated particle masses, to a common vertex using a variable list of constraints.
* _IKinematicConstraint_: An interface for providing vertex fitters with additional constraint equations. When invoked, each implementation supplies values and derivatives for a set of identified particles.

A simple use-case of these interfaces to define for example the reconstruction of conversions is given in Fig. (2). The so called _ConversionFinder_ algorithm uses (amongst others) concrete implementations of the _IvertexFinder_ and _IvertexFilter_ interfaces. The former object is responsible to find conversion candidates. It applies pre-selection cuts to a set of input tracks and retains pairs of oppositely charged tracks which are likely to originate from photon conversions. The latter object performs the actual vertex fit of conversion candidates and returns the fitted vertex. This procedure is often done in a loop where the actual fit gives feedback to the finder concerning the "quality" of the vertex fit. The finder then decides to go on or to accept the fitted vertex.

This structure of abstract interfaces, in conjunction with an event data model for vertex reconstruction, provides a common look and feel to the end-user who, regardless of the vertex topology, always works with the same EDM classes and interfaces. This design also allows for a high level of modularity and flexibility. Concrete implementations can be exchanged or added easily by modifying the external steering, without the need to update client software. In addition, many different approaches can be applied and tested in parallel to achieve the best result for a certain vertex topology.

In the following sections, several vertex reconstruction chains which are based on these interfaces and event data model are presented and preliminary results are shown.

## V Reconstruction of Primary Vertices

The Large Hadron Collider is designed to provide a luminosity of \(10^{34}\)\(\mathrm{cm}^{-2}\mathrm{s}^{-1}\), resulting in - on average - \(24\) proton-proton interactions per bunch crossing. Each signal event reconstructed in the ATLAS detector will thus be superimposed with several minimum bias events. Compared to the signal events, the minimum bias collisions usually have lower track multiplicity and lower transverse momentum.

The identification of the signal primary vertex as well as precise reconstruction of its position is crucial for investigations of physics processes such as \(H\to 4l\), \(H\to\gamma\gamma\), identification of \(b\)- and \(\tau\)-jets, reconstruction of exclusive \(b\)-decays and similar studies. The reconstruction of primary vertices can generally be subdivided in two stages: primary vertex finding, dealing with the association of tracks to a particular vertex candidate and vertex fitting, responsible for the reconstruction of the vertex position and corresponding covariance matrix. It is evident that since often these two processes are not easily distinguishable from each other, the "finding-throughputing" and "fitting-after-finding" approaches are possible. The creation of separate base classes for algorithms responsible for vertex finding and fitting (Sec. IV-B) allow for modular implementation of both approaches in ATLAS. In addition, this modular approach allows for an easy exchange of tools between algorithms, adopting them to the properties of physics processes under study and using the best combination to yield the best result.

The _AdaptiveMultiVertexFinder_ (AMVF) is currently the default strategy for primary vertex finding in ATLAS. It is an example of the "finding-through-fitting" approach. The reconstruction starts with selection of tracks which are likely to originate from the interaction region. A single primary vertex candidate including all selected tracks is then formed and fitted with an adaptive multi-vertex fitter. The tracks which are considered to be outliers during the first iteration of the fit are used to create a new vertex seed. The simultaneous adaptive fit of two vertices is then performed. The number of vertex candidates grows in each iteration and these candidates compete with each other in order to gain more tracks. The annealing procedure prevents the finding procedure from falling into local minima.

An example of the "fitting-after-finding" approach in ATLAS is the _InDetPriVxFinder_ algorithm. Here the reconstructed tracks compatible with the interaction region are pre-selected and the primary vertex candidates are formed by searching for clusters of tracks in the longitudinal projection. These clusters are then iteratively fitted with one available vertex fitter, rejecting the outliers at every iteration. The maximal number of reconstructed vertices is thus fully determined at the seeding stage. Once a track is rejected from a vertex candidate, it is never used for any other cluster.

The variety of vertex fitters which can be used with _InDetPriVxFinder_ includes the fast and full versions of the fitter proposed by P. Billoir [3], denoted hereafter as _Fast_ and _Full_ fitters and a similar approach implemented in the VKalVrtpackage [4].

Presented in Table I are the efficiencies of reconstruction of signal primary vertices in the \(WH,H(M_{H}=120GeV)\to b\bar{b}\) channel obtained by using different approaches currently implemented in ATLAS.

The statistical errors are below \(1\)% in all the cases. It can be noted that the highest efficiencies are provided by the Adaptive Multi Vertex Finder and VKalVrt algorithms. Indeed, comparing to the other finders, these methods provide more robust approaches allowing the number of vertex candidates to be changed during the finding process and to deal efficiently with outlying tracks

Presented in Table II are the resolutions on the x-coordinate of signal primary vertices reconstructed with different approaches. The study is performed on a set of Monte Carlo samples, simulating the \(WH,H(120)\to b\bar{b}\), the \(WH,H(120)\to u\bar{u}\), the \(H\to 4l\) and the \(t\bar{t}\) channels in the low luminosity conditions. It can be noted that all the resolutions on transverse positions of reconstructed vertices are similar in all approaches: approximately \(10~{}\mu\)m to \(12~{}\mu\)m, depending on the approach and the kinematics of the channel. The calculated errors on the resolution values are typically smaller than \(1\mu\)m.

The resolutions on the longitudinal positions on primary vertices are typically of the order of \(35~{}\mu\)m to \(55~{}\mu\)m, depending on the approach and the kinematics of the channel. Presented in Fig. (3) and Fig. (4) are the distributions of residuals and pulls of the transverse and longitudinal components of the primary vertex position of \(t\bar{t}\) events reconstructed with the Adaptive Multi Vertex Finder. It can be noted that the distributions are reasonably well approximated by a Gaussian and that the errors on the reconstructed vertex positions are correctly estimated.

## VI Vertex Reconstruction with Kinematic Constraints

The reconstruction of vertices which stem from a heavy flavor decay, a converted photon or the decay of a long-lived hadron, usually involves the application of kinematic constraints in the vertex fit. Constrained vertex fitting is therefore used in several packages in the ATLAS software framework. Most commonly it is implemented under an "all-in-one" fitting approach that carries specific applications of constraint vertex fitting out, such as the secondary vertex and decay chain fitting in the VKalVrt package [4]. The most useful type of constraint forces the mass of the decaying particle to the value corresponding to the particle hypothesis. In the case of a converted photon, the massless nature of the decaying particle allows the mass constraint to be applied directly as a collinearity constraint on the track parameters, leading to improved robustness of the fit convergence.

Recently, a new tool for constrained vertex fitting has been developed under the modular concept described in Section (IV). This new tool, _VertexKinematicFitter_, is based on \(\chi^{2}\) minimization with Lagrange multipliers [6], to simultaneously satisfy a vertex-constraint and any other kinematic constraint requested by the user. The Lagrange formalism allows each different constraint to be implemented as a separate class with a common abstract interface. An example of the use of the _VertexKinematicFitter_ is given in Fig. (5), showing how the use of a mass-constraint in simulated \(J/\psi\rightarrow\mu^{-}\mu^{+}\) events improves the resolution of the momentum measurement (curvature) of the two emerging muon tracks.

## VII Reconstruction of Converted Photons and Long-lived Neutral Particles

The reconstruction of the decay of a long-lived particle or a converted photon vertex involves the application of a mass or angular constraint. The basic structure to reconstruct the vertex and apply a constraint is similar in both cases. Fig. (2) illustrates the case of reconstructing the photon conversion.

Fig. 4: Distribution of pulls of the transverse position of primary vertices in \(t\bar{t}\) events reconstructed with the Adaptive Multi Vertex Finder.

Fig. 5: Momentum resolution of the muon track parameters at the vertex reconstructed with the default vertex fiter and the VertexKinematicFitter with mass constraint, using simulated \(J/\psi\rightarrow\mu^{+}\mu^{-}\) events.

Fig. 3: Distribution of residuals of the transverse position of primary vertices in \(t\bar{t}\) events reconstructed with the Adaptive Multi Vertex Finder.

Here the basic components are: the track selection and subsequent track classification, the formation of pairs of tracks with opposite charge, the vertex fitting and reconstruction of photon conversion vertex candidates, and the final post-fit selection of the conversion candidates. Constrained vertex fitting can be very CPU-time consuming, therefore a careful pre-selection of track and pair candidates is necessary. In the case of converted photons, for instance, electron tracks are selected using the particle identification capabilities provided by the ATLAS Transition Radiation Tracker (TRT). Track pairs are also pre-selected by requiring the two tracks of a converted photon to have small initial polar angle differences. In the case of both, converted photons and massive decaying particles, the distance of minimum approach between the two tracks in question has to be sufficiently small. In order to facilitate the convergence of the constrained fit, an initial estimate of the vertex position is also provided. The above pre-selection results in a significant reduction of the combinatorial background before the actual constrained vertex fit is performed. Additional reduction is achieved by exploiting the vertex fit results themselves. In the case of long-lived decaying particles an additional step involving an un-constrained vertex fit is needed in order to determine the appropriate mass constraint to be applied.

Only tracks originating from a radial distance from the beam axis of up to approximately 800 mm can be efficiently reconstructed by the tracking algorithm. However, the efficiency for reconstructing track pairs is significantly reduced at radial distances above 400 mm. This is due to the missing measurements from the pixel detector and the reduced number of measurements in the silicon strip detector. The situation becomes even more pronounced in the case of high \(\rm p_{T}\) decaying particles. In addition, due to ATLAS tracker geometrical constraints, the track reconstruction efficiency is severely curtailed for pseudorapidity values of \(|\eta|>\) 2, although tracks are still reconstructed for up to \(|\eta|\) = 2.5. This can be clearly seen in Fig. (6), where the reconstruction efficiencies for converted photons originating from a 120 GeV \(H\rightarrow\gamma\gamma\) decay are shown.

The resolution of the reconstructed radial position of the vertex for the case of converted photons originating from 120 GeV Higgs boson decays is shown in Fig. (7). The constrained vertex fit, requiring tracks to have the same direction at the vertex, has been used. The long tail to the right is due to bremsstrahlung losses of the two produced electron tracks, which reduce the individual track parameter reconstruction quality, hence severely affecting also the vertex fit results. To illustrate this particular point, the radial position resolution, with/without significant (\(>20\%\)) losses due to bremsstrahlung, is also plotted separately. Clearly the tail is reduced when both contributing electrons have lost \(<20\%\) of their energy due to bremsstrahlung effects. For the moment no bremsstrahlung energy loss corrections are applied, although work is progressing well towards achieving that.

An overall radial position resolution of approximately 7 mm has been achieved. The fact that the photon is a massless particle, resulting in an extremely small angular opening of the emitted tracks, makes it more difficult to reconstruct accurately the position of the conversion vertex. Position resolution is of the highest importance, since the reconstructed converted photons can offer the means to accurately map the ATLAS tracker material using minimum bias data. For more details on the conversion reconstruction and their applications, one can look in [5].

Bremsstrahlung losses on the other hand are not present in the case of the \(K_{S}\rightarrow\pi^{+}\pi^{-}\) decay. This, as well as the non-zero opening angle, provide a better test scenario for the constrained vertex fitting. As mentioned above, instead of the angular constraint used in the case of the photon conversions, a direct mass constraint is implemented. Fig. (8) shows the resolution of the reconstructed radial position for \(K_{S}\) decays in \(B_{d}\to J/\psi K_{S}\) events. The absence of a bremsstrahlung related tail compared to that in Fig. (7) is evident. The overall radial position resolution is approximately 0.3 mm. The variation of the radial position resolution with the distance from the beam axis is shown in Fig. (9) for the case of \(K_{S}\) decays. The overall resolution degrades at higher radial distances where measurements of the high precision pixel and

Fig. 6: Track, track-pair and vertex reconstruction efficiency for converted photons originating from 120 GeV \(H\rightarrow\gamma\gamma\) decays, as a function of distance from the beam axis.

Fig. 7: Reconstructed vertex radial position resolution (in mm) for converted photons from a 120 GeV \(H\rightarrow\gamma\gamma\) decay. For comparison the two cases where the participating tracks have lost \(>20\%\) (\(<20\%\)) of their energy due to bremsstrahlung are also shown separately.

silicon-strip tracker components are fewer or missing. The large increase at approximately 115 mm is due to the 200 mm gap between the Pixel and the Silicon Strip Trackers. Similar behavior is exhibited by the conversion radial position resolution, albeit with a certain amount of deterioration due to the bremsstrahlung losses, as discussed above.

## VIII Reconstruction of Vertices in Jets

The most basic \(b\)-tagging algorithms in ATLAS rely directly on the impact parameter significance of the charged particles associated to the jet. These impact parameters are computed with respect to the reconstructed primary vertex (PV). The detection and reconstruction of one or more secondary vertices in a \(b\)-jet can considerably improve the \(b\)-tagging performance, in two main aspects:

* Tracks originating from the decay of long-lived particles (\(K_{s}\), \(\Lambda\), photon conversions) can be efficiently rejected.
* The kinematic properties of the \(b\) decay and \(b\to c\)-decay vertices can be used as an additional handle against badly reconstructed tracks in light-quark jets.

Two main vertex finding algorithms for \(b\)-tagging are implemented in ATLAS. The first one relies on the assignment of all displaced tracks to a common geometrical vertex (_inclusive_ vertex finder). The second one relies on the identification of the \(PV\to b\to c\) decay chain topology (_topological_ vertex finder). The _inclusive_ vertex finder is based on a vertex fitting method proposed by _P. Billoir_[3] and is implemented in the _VkalVrt_ package [4]. The _topological_ vertex finder uses an extension of the Kalman Filter formalism for vertex reconstruction developed in ATLAS and is implemented in the _JetFilter_ package [7].

The initial finding strategy is common for both finders:

* Selection of displaced tracks;
* Reconstruction of all 2-track vertices;
* Removal of vertices which are compatible with \(\gamma\), \(K_{S}\) and \(\Lambda\) decay hypotheses.

The _inclusive_ vertex finder then tries to reconstruct a common geometrical vertex out of the surviving tracks. Tracks with a bad \(\chi^{2}\) contribution are removed iteratively from the fit, until the overall \(\chi^{2}\) is below a predefined threshold. The vertex \(\chi^{2}\) probability is not expected to follow a flat distribution, because of the assumption of a single geometrical vertex. A tuning of this threshold to achieve the best efficiency to purity ratio is thus required.

The _topological_ vertex finder solves the pattern recognition problem by relying on the assumption that all tracks intersect a common PV\(\to b\)-hadron\(\to c\)-hadron flight axis, thus reducing a three-dimensional clustering problem to a one-dimensional one:

* A first fit is performed, initializing the \(b\)-flight axis with the calorimetric jet direction and assuming that all tracks form single vertices. This determines the \(b\)-flight axis direction and its intersections with the single tracks.
* An iterative clustering procedure is then performed. Compatible vertices (with the primary vertex being one of them) are clustered in pairs, in decreasing order of compatibility, resulting in the end in a well defined topology.

In Tables III and IV the performance of the two different strategies on jets selected from a sample of \(WH,H(120)\to b\bar{b}\), \(c\bar{c}\) or \(l\bar{l}\) Monte Carlo events are presented. In the first Table the vertex reconstruction efficiency for jets of transverse momenta between 50 and 80 GeV is shown. In \(b\)-jets both algorithms reconstruct one or more vertices in \(70-75\) % cases. In case that a vertex is found, the _inclusive_ vertex finder correctly associates to it 69% of all well-reconstructed tracks

Fig. 8: Reconstructed vertex radial position resolution (in mm) of \(K_{S}\to\pi^{+}\pi^{-}\) decays.

Fig. 9: Reconstructed vertex radial position resolution (in mm) of \(K_{S}\to\pi^{+}\pi^{-}\) decays as a function of the radial distance from the beam axis.

from a heavy flavour decay, keeping at the same time a very high purity: \(92\)% of the tracks at vertex come from \(b\)- or \(b\to c\) decays. The _topological_ vertex finder correctly associates to the fitted decay chain a larger fraction of the reconstructed tracks produced in \(b\)- or \(c\)-hadron decay. This is particularly true when a complex topology beyond the single vertex is allowed, however at the cost of slightly reduced purity.

Shown in Fig. (10) is the resolution achieved on the inclusive \(b\)-hadron decay vertex with respect to the true \(b\)-hadron position in the transverse plane (in the direction of flight of the \(b\)-hadron). The core resolution is about \(400\mu m\), with a big tail due to the contribution of tracks from \(c\)-hadron decays.

The vertices reconstructed by the vertex finder are then used to compute the variables important to the secondary vertex-based \(b\)-tagging algorithm:

* The fraction of energy from charged particles at the decay vertex (vertices);
* The invariant mass;
* The number of tracks fitted to a vertex (vertices);
* The presence of a reconstructed secondary vertex topology.

The information above is combined into a likelihood function. The correlation terms are normally not taken into account. In the case of the _inclusive_ finder however, the correlations between the invariant mass and the fraction of energy from charged particles at the decay vertex are used via a two-dimensional probability density function _PDF_. The templates for the _PDFs_ in the likelihood function are obtained from a very large number of Monte Carlo events, including \(t\bar{t}\), \(t\bar{t}jj\) and \(WH\) events. Both secondary vertex-based algorithms are then combined with the impact parameter-based tagging method, under the assumption that the two likelihood functions are uncorrelated.

The \(b\)-tagging performance achieved on \(t\bar{t}t\) and \(t\bar{t}jj\) Monte Carlo events by the two secondary vertex-based algorithms is illustrated in Fig. (11). A comparison with the impact parameter-based algorithm is also presented. The rejection of light-quark jets is defined as the inverse of the probability to (mis)identify a light-jet as a \(b\)-jet. It can be noted that the use of the secondary vertex-based algorithms results in an improvement of the light-quark rejection.

## IX Summary

Presented in this paper is the software framework for vertex reconstruction in the ATLAS Experiment at the Large Hadron Collider at CERN. An overview of primary vertex reconstruction, reconstruction of photon conversions and long-lived particle decays, constrained vertex fitting and vertex finding in jets for \(b\)-tagging is given. All these vertex topologies are handled by a single modular software environment. It defines a common Event Data Model and common abstract interfaces which are shared by all vertex reconstruction algorithms.

This vertex reconstruction software has been tested extensively under as real as possible conditions using the latest Monte Carlo datasets. The simulation of these data

Fig. 11: Light quark rejection as a function of \(b\)-tagging efficiency for various algorithms: the _inclusive_ vertex finder (green triangles), the _topological_ vertex finder (full red circles) and, for comparison, the impact parameter only based algorithm (blue empty circles).

Fig. 10: Radial position resolution (in mm) of the secondary vertex, for the _inclusive_ vertex finder (_BTigVrSec_ in the figure) and for the _topological_ vertex finder (_JetFilter_ in the figure). In the latter case, only the first vertex in the decay chain is considered if more than one displaced vertex is found.

sets includes overlaid minimum bias vertices to account for the presence of pile up, a displaced proton-proton collision point, detector misalignment and more. The vertex algorithms perform well under these conditions and the ATLAS vertex community is eagerly waiting to analyze real data from proton-proton collision in the LHC.

## Acknowledgment

The authors would like to thank the ATLAS Inner Detector community who helped developing and testing the vertex reconstruction software. In particular we would like to thank K. Grybel (Universitaet Siegen, Germany) for his help in producing some of the simulation data sets and H. Zhu (University of Sheffield, UK) for his contribution to Fig. (7).

## References

* [1] The ATLAS Collaboration, G. Aad et al., _The ATLAS Experiment at the CERN Large Hadron Collider_, JINST 3 (2008) S08003.
* [2] The ATLAS Collaboration, _ATLAS Computing Technical Design Report_, ATLAS TDR-017, CERN-LHCC-2005-022.
* [3] P. Billoir and S. Qian, Nucl. Instr. and Meth. A311 (1992) 139-150.
* A package for vertex reconstruction in ATLAS_, ATL-PHYS-2003-031 (2003).
* [5] The ATLAS Collaboration, _Expected Performance of the ATLAS Experiment, Detector, Trigger and Physics_, CERN-OPEN-2008-020, Geneva, 2008.
* [6] P. Avery, [http://www.phys.ufl.edu/~avery/fitting.html](http://www.phys.ufl.edu/~avery/fitting.html).
* [7] G. Piacquadio, C. Weiser, _A new inclusive secondary vertex algorithm for \(b\)-jet tagging in ATLAS_, CHEP 2007, Journal of Physics: Conference Series 119 (2008) 032032.
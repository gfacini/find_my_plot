ATLAS Internal Note

INDET-No-173

LUNFD6/(NFFL-7143)1997

July 24, 1997

**A modular simulation of prototypes**

**in the H8 testbeam**

**Ulrik Egede**

_Lund University, Sweden_

**Maya Stavrianakou**

_CERN_

**Abstract**

A Monte Carlo simulation of the H8 testbeam setup for the TRT sector prototype studies is presented. The detector geometry and digitisation are highly modular in order to facilitate modifications of the setup and inclusion of other subdetector modules. Data analysis is done in the same framework, thus allowing direct comparison between testbeam data and simulation and extrapolation to the full ATLAS setup.

Introduction

The original motivation for this simulation effort was the need for a user-friendly Monte Carlo description of the TRT testbeam setups that would allow relatively straightforward comparison with the data and possibly, extrapolation to the final detector setup.

One of the main goals has been to provide for the changeability of testbeam setups. Consequently, a framework was developed aiming at allowing the simulation of different detector setups in the H8 beam-line, re-using as much of the current ATLAS dice implementation as possible, in a largely modular manner, based on the ATLAS atlas package1. The re-use of the ATLAS detector description is essential in order to facilitate extrapolations from the testbeam setups to the full ATLAS detector. The modularity, meaning the ability to include and position one or more _instances_ of a subdetector without changing the subdetector implementation in terms of geometry and digitisation, allows the simulation of different testbeam setups.

Footnote 1: It should be pointed out, that this is not claimed to be an object-oriented approach, despite the use of terms that may suggest the opposite.

## 2 Geometry implementation

### The global geometry

The various subdetectors (TRT prototype, SCT modules etc) are positioned inside a'mother' volume that represents the beam area. The coordinate system simulated is that of the H8 beam-line, with \(z\) parallel to the Jura mountains to the direction of Divonne, \(x\) towards the Jura mountains and \(y\) upwards. The number and positions of the various subdetector instances and the magnetic field configuration are defined in individual AGE structures in a separate steering module. The creation and positioning of the instances is done inside the main subdetector geometry module (the xxxxgeo.g file in AGE) using the structures from the steering module. This allows a fairly straightforward implementation of different setups as well as the inclusion of new subsystems. Minor changes, for example the magnetic field strength and orientation, can also be made via datacards, following the ATLAS dice rules. An example of a setup file can be found in appendix A.

### The TRT sector prototype

The geometry of the TRT sector prototype is very similar to the implementation of the endcap wheels in the ATLAS simulation. The major difference is that the ATLAS wheels are replaced by azimuthal sectors of wheels2.

Footnote 2: The geant shape TUBE is replaced by the shape TUBS.

The implementation of the TRT geometry as in the testbeam is outlined below:

* Five 16\({}^{\rm o}\) azimuthal wheel sectors are positioned consecutively at distances of 0.4 cm along the cylinder (wheel) axis. Each sector is 16 cm thick with an inner (outer) radius of 32.5 cm (66.5 cm).
* Each sector consists of 16 planes of cylindrical drift tubes (straws) interleaved with 0.48 cm thick radiator layers.
* Each layer of straws consists of 16 radial straws with one degree separation. The straw internal diameter is 4 mm. The straw wall is made of 85 \(\mu\)m kapton (C\({}_{5}\)H\({}_{4}\)O\({}_{2}\)). The straws are equipped with 50 \(\mu\)m copper wires and filled with 70% Xe, 20% CF\({}_{4}\) and 10% CO\({}_{2}\). In total the prototype in the simulation has 1280 straws.
* The radiator layer is an approximately regular stack of 17 polypropylene 15\(\mu\)m thick foils spaced by \(\simeq 260\)\(\mu\)m.

The ionisation losses, the transition radiation production, transport and absorption, and the signal processing are extracted from the standard ATLAS dice package[1]. The major differences are summarised below:

* The radiator is simulated as sets of regular stacks of foils, rather than a substance filling the whole space around the straws. This change is to be implemented in the ATLAS simulation of the endcap TRT as well.
* The possibility of using special tracking cuts for geant inside the straws, when space charge effects need to be taken into account, has been implemented via a flag available at the digitisation level.

The TRT geometry and TR simulation routines can be found in the AGE file xrtrgeo.g; the digitisation routines are in the AGE file xrtrdig.g.

### The Silicon beam telescope

The Silicon beam telescope consists of several individual Silicon modules (the exact number for each particular implementation can be changed in the setup file). The actual module simulation is rather simplified in terms of geometry and digitisation. However, as mentioned above, a more realistic simulation can be readily implemented. Each module consists of two sensitive planes of 300 \(\mu\)m thick silicon with a 50 \(\mu\)m mylar window placed on each side of the double plane. The modules are \(3.2\times 3.2\) cm\({}^{2}\) and are assumed to be divided into parallel \(x\) or \(y\) strips of 50 \(\mu\)m pitch.

### Beam chambers

A very rudimentary simulation of the H8 beam chambers has been implemented, mainly to account for the 1% radiation length of material introduced by each chamber. Therefore, each chamber is for the moment just a 10\(\times\)10 cm\({}^{2}\) 2 cm thick slab of air with a 890 \(\mu\)m Al plate in the middle serving as the sensitive area. For flexibility (no digitisation is foreseen at this stage), hits are stored with 100 \(\mu\)m precision in \(x\) and \(y\) (instead of the 300 \(\mu\)m actual beam chamber precision). This could allow the reconstruction of beam chamber space points from hits, should it be required for track reconstruction.

### Counters

A typical testbeam setup includes several scintillator counters, mainly for triggering. While these counters are rarely used after the very preliminary event selection, their presence contributes to the overall material before the detector in study. At present, there are two thicknesses of scintillator counters provided for, 1 cm (for the so called S1, S3 etc counters) and 0.5 cm (for the so called S0 counter). The transverse dimensions (changeable with datacards) are assumed to be 4 cm in \(x\) and 10 cm in \(y\) for both. Hits are stored with 100 \(\mu\)m precision in \(x\) and \(y\); no digitisation has been implemented.

### Other detectors

Other detectors can be described with separate geometry modules and instantiated and positioned in the overall setup using an appropriate structure in the steering module, as described above.

### Magnetic field

The magnetic field simulation is done using an mfldgeo module as in ATLAS dice, modified to create a magnetic field of user specified (in the steering module) strength and orientation (in \(xyz\)).

## 3 Running the simulation

Particle generation and simulation are done in the ATLAS atlasframework. A steering file written in the kuip language (kumac file) is provided and executed inside atlasim. Simulation and digitisation can be done in either one or two steps. Examples are provided in appendix B.

One of the non-trivial points is to obtain a beam profile matching the profile in the testbeam. In the example provided, 20 GeV electrons are simulated with \(y=0\) and a flat profile in \(x\). A geant drawing of the setup with a single electron simulated can be seen in fig. 1 for the full setup and for a single TRT sector module in fig. 2.

When stored in a zebra file, the geometry of the present layout occupies \(\simeq 300\) kbytes and each simulated event takes \(\simeq 3\) kbytes without digits. On an HP-780, it takes less than 1 second to simulate an event, the exact time depending on the geant tracking cuts used. Around 10 events can be digitised in 1 second.

Figure 1: The testbeam setup in July 1996 as seen by geant. The transverse scale is highly exaggerated. A single 20 GeV electron coming downstream is also seen.

## 4 GEANT tracking parameters

In the example file provided, all steering parameters for tracking in geant are set to the values used in the ATLAS simulation. To get a perfect agreement with data it may however be necessary to lower some of the tracking cuts. This can be done using the interactive geant command GEANT/PHYSICS/CUTS.

The best agreement with the TRT sector prototype data is obtained by lowering the cuts for production and transport of electrons and photons to 10 keV (CUTGAM, CUTELE, BCUTE, BCUTM, DCUTE DCUTM) in all volumes but the sensitive Xe gas. While the global parameters can be changed from atlas appropriate calls to the geant subroutine GSTPAR are necessary in the geometry files in order to have individual cuts in individual detector volumes.

## 5 Getting access to the GEANT digits

The geant digits for the subdetectors (wherever provided) are accessed and prepared for further analysis, using dedicated interface modules. This allows

Figure 2: The first sector of the TRT prototype.

the presentation of the digits produced by the simulation in the same format as the testbeam data such that the same analysis program can be used for data and simulation.

For the TRT analysis the chosen format is zebra banks filled using AGE structures. The current implementation fills /recb/unpk/xtrt/trts in the module xtrtrec for the TRT digits and /recb/unpk/xtrt/sili in the module zsctrec for digits from the silicon planes.

A column-wise N-tuple is also implemented for the digitised data. The N-tuple is identical to the N-tuple 'DSTs' of the testbeam data.

## 6 Results and comparison to data

The analysis of the various TRT sector prototype studies will be reported elsewhere but a few results are provided to demonstrate the use of the simulation.

The amount of material in the testbeam setup has been verified by sending Geantinos through the detector. A hook in the atlasim version of the geant subroutine GUSTEP allows the filling of a series of histograms with the material traversed when Geantinos are simulated. The facility is implemented in ATLAS and calculates values in a \((\varphi,\eta)\) coordinate system which is rather inconvenient for use in the testbeam setup; an average value can nevertheless still be extracted. Results from the July 1996 TRT setup are shown in table 1.

The electron identification performance of the TRT depends on the individual straw alignment. A measure of this alignment is the distance from the centre of all straws with a hit to the track defined by the silicon detectors. With perfect alignment this will be a step function with radius \(2\,\mathrm{mm}\) allowing for a small tail from \(\delta\)-rays. Fig. 3 shows how the simulated profile can be made to match the profile from the data by smearing the original straw

\begin{table}
\begin{tabular}{|l|l|r|r|} \hline Testbeam part & geant name & X\({}_{0}\) (\%) & \(\lambda\) (\%) \\ \hline
5 TRT sectors & XTRT & 8.67 & 3.73 \\
3 Silicon detectors & ZSCT & 2.03 & 0.43 \\
2 Beam chambers & BCHA & 2.00 & 0.48 \\
3 scintillators & SCOU & 4.87 & 2.30 \\ Air & INNE & 2.10 & 0.86 \\ \hline Total & & 19.70 & 7.80 \\ \hline \end{tabular}
\end{table}
Table 1: The amount of material in the testbeam setup in July 1996.

positions and applying a similar alignment algorithm to simulated and real data.

The response of the TRT to electrons and pions can now be tested and used to calibrate the simulation of the ATLAS TRT. Fig. 4 shows how pion rejection using transition radiation is almost independent of the external magnetic field. Good agreement between the testbeam results and the Monte Carlo predictions is observed.

## 7 Access to software

All files necessary to run a simulation in the H8 testbeam are provided in the directory /afs/cern.ch/user/r/rd6/public/h8sim. The files provided are:

**README**: Reference to this note.
**beamgeo.g**: Module defining the mother volume for the beam-line.
**setupm.g**: The numbers and positions of individual detectors.
**mfldgeo.g**: The field map. Very simple description at the moment.
**xtrtgeo.g**: Geometry of the TRT sector prototype.
**zsctgeo.g**: Silicon detector as in the testbeam telescope.

Figure 3: The distance from hits in the TRT to the track defined by silicon detectors. The solid histogram is the simulation while the crosses are data. It can be seen how a perfect match can be reached by smearing the original straw positions in the simulation.

**scougeo.g**: Material description of scintillators.
**b chageo.g**: Simple description of beam chambers.
**xtrtdig.g**: Digitisation module for the TRT prototype.
**zsctdig.g**: Digitisation module for silicon detectors in beam telescope.
**xtrtrec.g**: Interface between geant digits in the TRT and zebra banks using AGE structures.
**zscrtrec.g**: Interface to silicon digits as for TRT.
**simulate.kumac**: An example of simulating single electrons in the testbeam.
**digitise.kumac**: An example of how to digitise already simulated data.

A few files more specific to the TRT analysis are also provided. With minor modifications they can also be used in analysis of other types of data.
**mcreg.g**: A module for writing a few banks to make the format of the simulated data compatible with the testbeam data.

Figure 4: Pion efficiency at 90% electron efficiency as a function of the magnetic field strength for data and simulation.

**writedst.g**: A module for writing digitised simulations or data from the TRT prototype to a DST.
**readdst.g**: A module to read the DST.
**writedst.kumac**: An example of writing data to a DST.
**readdst.kumac**: An example of reading data from a DST and performing some additional analysis.

Besides these files, links to the official versions of atlasim, geant3, geant3.def and the Makefile are required.

## 8 Current status and plans for the future

As mentioned above, all files necessary to run a simulation in the H8 testbeam using the current versions of the ATLAS software are provided in the directory /afs/cern.ch/user/r/rd6/public/h8sim. They should provide the basis for most testbeam simulations until the end of 1997. The files will be adapted to use the packages and facilities that will be provided in the context of the ATLAS software consolidation project such that the close connection between the ATLAS simulation and the testbeam simulation can be kept.

## Acknowledgements

We wish to thank the TRT community for providing the framework that made this work possible. In particular we are grateful to A. Romaniouk for providing us with all the necessary details of the testbeam setup and P. Nevski and F. Luehring for providing the original ATLAS TRT simulation and their valuable support and feedback.

## References

* [1] ATLAS collaboration. ATLAS Inner Detector Tecnical Design Report volume 1. _CERN_, (CERN/LHCC/97-16), 1997.
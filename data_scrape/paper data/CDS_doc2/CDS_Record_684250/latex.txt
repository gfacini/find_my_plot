Pulse Propagation along close Conductors

_Numerical solution of the telegraph equations using Mathematica_

_Andreas Dieckmann_

_Physikalisches Institut der Uni Bonn_

_Elektronik Abteilung_

_Oktober 2000 - September 2001_

Abstract

The propagation and reflection of arbitrarily shaped pulses on non-dispersive parallel conductors of finite length with user defined cross section is simulated employing the discretized telegraph equation. The geometry of the system of conductors and the presence of dielectric material determine the capacities and inductances that enter the calculation. The values of these parameters are found using an iterative Laplace equation solving procedure and confirmed for certain calculable geometries including the line charge inside a box. The evolving pulses and the resulting crosstalk can be plotted at any instant and - in the _Mathematica_ notebook version of this report ([http://www.physik.uni-bonn.de/~dieckman/](http://www.physik.uni-bonn.de/~dieckman/)) - be looked at in an animation. As an example a differential pair of microstrips as used in the ATLAS vertex detector is analysed.

Contents

Introduction

Integration of the Telegraph Equations

Numerical Calculation of Capacities and Inductances

The Pigtail

Conclusion

[MISSING_PAGE_FAIL:2]

[MISSING_PAGE_FAIL:3]

[MISSING_PAGE_FAIL:4]

## Discretization of the Telegraph Equations

The state vector \(\Psi\)(x,t) is represented on a discrete time and space grid as

\[\Psi(x_{j}\,\ t_{n}\ )=\Psi(\ \mathrm{j}\Delta x,\ n\Delta t\ )=\Psi_{j}^{n}\,\ \ \ \ \ \ \ \ \ \ \mathrm{j}=0,\ldots,\ \mathrm{M},\ \ \ \ \ \mathrm{n}=0,\ldots,\ \mathrm{N}, \tag{5}\]

where \(\ \mathrm{n}\ (\mathrm{time})\) and \(\mathrm{j}\ (\mathrm{space})\) label the coordinates of the grid and \(\Delta x\), \(\Delta t\ \ \mathrm{stand}\) for the grid spacing. The differential operators will be replaced by finite differences, then the state at the time n+1 and at the place \(\mathrm{j}\) may be expressed by a linear combination of some points at the previous time \(\mathrm{n}\). In this way the calculation proceeds in time one \(\Delta t\) after the other. For stability \(\Delta t\) has to be \(\leq\Delta x\)(speed of light).

In case the differencing scheme valid for each \(\angle_{i}\)_alone_ in (4) is known and results in a prescription \(\cup_{i}\) to update \(\Psi_{j}^{n}\) (in the next two subsections this condition is shown to be fulfilled) :

\[\begin{array}{l}\angle_{1}\ :\ \Psi_{j}^{n+1}=\cup_{1}\ (\Psi_{k}^{n}\,\ \Delta t)\ \ \ \ \ \ (\mathrm{Damping\ Term})\\ \angle_{2}\ :\ \Psi_{j}^{n+1}=\cup_{2}\ (\Psi_{k}^{n}\,\ \Delta t)\ \ \ \ \ \ \ (\mathrm{Wave\ Equation})\,\end{array} \tag{6}\]

then the discrete telegraph equations follow with the method of operator splitting (**Ref. 3**, p.847) from (6) by applying the updates one after the other:

\[\Psi_{j}^{n+1}=\cup_{1}\ (\cup_{2}\ (\Psi_{k}^{n}\,\ \Delta t)\,\ \Delta t) \tag{7}\]

## 4 **differencing \(\mathcal{L}_{2}\)**

The differencing scheme of \(\angle_{2}\) is presented in some detail. The time derivative is written as

\[\partial_{\mathrm{c}}\ \ \Psi=\frac{\left(\Psi_{j}^{n+1}-\Psi_{j}^{n}\right)}{ \triangle t}\, \tag{8}\]

so that with (4)

\[\Psi_{j}^{n+1}\ =\ \left[\ \mathbb{I}-\Delta t\ \partial_{\mathrm{x}}\ \left(\begin{array}{cc}0&[\ \mathrm{C\ }^{-1}\ ]\\ &[\ \mathbb{L}\ ^{-1}\ ]&0\end{array}\right)\ \right]\ \Psi_{j}^{n}\ =\ [\ \mathbb{I}-\Delta t\ \partial_{\mathrm{x}}\ [\ \mathbb{B}\ ]\ ]\ \Psi_{j}^{n}\ \, \tag{9}\]

where \(\mathbb{I}\) denotes the identity matrix and \([\mathbb{B}]\) is a shorthand for the LC matrix. Next the Lax-Wendroff two-step scheme, which is second order in time, quite accurate and has little distortion if the step size chosen is small enough, will be applied. First the space derivative is written as

\[\partial_{\mathrm{x}}\ \ \Psi=\frac{(\Psi_{j+1}^{n}-\Psi_{j}^{n})}{\triangle x}\, \tag{10}\]

where \([\mathbb{B}]\) is considered independent of \(x\), and temporary "half step grid points" are constructed, which (Fig. 2) we put into (9)

\[\frac{\Psi_{j+\frac{1}{2}}^{n+\frac{1}{2}}-\Psi_{j+\frac{1}{2}}^{n }}{\frac{\Delta t}{2}}\ =\ -\ [\mathbb{B}]\ \ \frac{(\Psi_{j+1}^{n}-\Psi_{j}^{n})}{ \triangle x} \tag{11}\] \[\rightarrow\ \Psi_{j+\frac{1}{2}}^{n+\frac{1}{2}}=\Psi_{j+\frac{1}{2}}^{n }-\frac{\Delta t}{2\ \Delta x}\ [\ \mathbb{B}]\ \ (\Psi_{j+1}^{n}-\Psi_{j}^{n})\]

and in the same way

\[\Psi_{j-\frac{1}{2}}^{n+\frac{1}{2}}=\Psi_{j-\frac{1}{2}}^{n}-\frac{\Delta t}{ 2\ \Delta x}\ [\ \mathbb{B}]\ \ (\Psi_{j}^{n}-\Psi_{j-1}^{n}). \tag{12}\]The j\(\pm\frac{1}{2}\) points on the right of (11) and (12) are now replaced by the averages of their left and right neighbors (Lax replacement)

\[\vec{\nu}_{j,\frac{1}{2}}^{n}\rightarrow\frac{1}{2}\ \ (\vec{\nu}_{j, \frac{1}{2}}^{n}+\ \vec{\nu}_{j}^{n})\ \ \mbox{and}\ \ \vec{\nu}_{j-\frac{1}{2}}^{n}\rightarrow\frac{1}{2}\ \ (\vec{\nu}_{j}^{n}+\vec{\nu}_{j \to 1}^{n}). \tag{13}\]

In a second step we use the four points connected by the cross in Fig. 3 to calculate \(\vec{\nu}_{j}^{n+1}\) (**Ref. 3**, p.835):

\[\frac{\vec{\nu}_{j}^{n+1}-\vec{\nu}_{j}^{n}}{\triangle t}=-[\mbox{B}]\ \frac{\left(\vec{\nu}_{j,\frac{1}{2}}^{n+\frac{1}{2}}-\vec{\nu}_{j -\frac{1}{2}}^{n+\frac{1}{2}}\right)}{\triangle x}\]

Figure 3: The new point on top is calculated using the staggered leapfrog scheme, it contains information from the three black ones

Figure 2: Location of temporary half step points in the Lax-Wendroff Scheme

[MISSING_PAGE_EMPTY:7]

- to understand this look at Fig. 4. As computational molecule there is now a rectangular box
- (**Ref. 4**, p.107): These calculations are called implicit, because the term to be solved for shows up on the right and the left hand side in the equations (18). \[\begin{array}{l}\frac{\tau_{M}^{n+1}-\tau_{M}^{n}+\tau_{M-1}^{n+1}-\tau_{M
- 1}^{n}}{2\Delta}=-[B]\frac{\tau_{M}^{n+1}-\tau_{M-1}^{n+1}+\tau_{M-1}^{n}-\tau _{M-1}^{n}}{2\Delta}=-[B]\frac{\tau_{M}^{n+1}-\tau_{M-1}^{n+1}+\tau_{M-1}^{n}}{2 \Delta}\\ \quad\quad\rightarrow\psi_{M}^{n+1}=\psi_{M-1}^{n}+[\mathbb{I}+\frac{\Delta t }{\Delta x}[B]]^{-1}[\mathbb{I}-\frac{\Delta t}{\Delta x}[B]]\left(\psi_{M}^{n }-\psi_{M-1}^{n+1}\right)\\ \frac{\tau_{M}^{n+1}-\tau_{M+1}^{n}+\tau_{M-1}^{n}-\tau_{M-1}^{n}}{2\Delta}=-[ B]\frac{\tau_{M}^{n+1}-\tau_{M-1}^{n+1}+\tau_{M-1}^{n}}{2\Delta}\\ \quad\quad\rightarrow\psi_{1}^{n+1}=\psi_{2}^{n}+[\mathbb{I}-\frac{\Delta t }{\Delta x}[B]]^{-1}[\mathbb{I}+\frac{\Delta t}{\Delta x}[B]]\left(\psi_{1}^{ n}-\psi_{2}^{n+1}\right)\end{array}\] (18) After formation of the inverse matrix and multiplication with [A] we get these expressions: right side: \[\begin{array}{l}\pi_{M}^{n+1}=\pi_{M-1}^{n}+\left[\mathbb{I}-(\frac{ \Delta t}{\Delta x})^{2}[C^{-1}][L^{-1}]\right]^{-1}\left[\mathbb{I}+(\frac{ \Delta t}{\Delta x})^{2}[C^{-1}][L^{-1}]\right]\left(\pi_{M}^{n}-\pi_{M-1}^{n +1}\right)-\\ 2\frac{\Delta t}{\Delta x}\left[\mathbb{I}-(\frac{\Delta t}{\Delta x})^{2}[C^ {-1}][L^{-1}]\right]^{-1}[C^{-1}]\left(\pi_{M}^{n}-\pi_{M-1}^{n+1}\right),\\ \end{array}\] (19) \[\begin{array}{l}\widetilde{\tau}_{M}^{n+1}=[\mathbb{I}-\Delta[L^{-1} \ R]]\left(\widetilde{\tau}_{M-1}^{n}-2\frac{\Delta t}{\Delta x}\left[ \mathbb{I}-(\frac{\Delta t}{\Delta x})^{2}[L^{-1}][C^{-1}]\right]^{-1}[L^{-1} ]\left(\pi_{M}^{n}-\pi_{M-1}^{n+1}\right)+\\ \left[\mathbb{I}-(\frac{\Delta t}{\Delta x})^{2}[L^{-1}]C^{-1}]\right]^{-1}[ \mathbb{I}+(\frac{\Delta t}{\Delta x})^{2}[L^{-1}][C^{-1}]\left(\widetilde{ \tau}_{M}^{n}-\widetilde{\tau}_{M-1}^{n+1}\right)\end{array}\] and left side: \[\begin{array}{l}\pi_{1}^{n+1}=\pi_{2}^{n}+\left[\mathbb{I}-(\frac{ \Delta t}{\Delta x})^{2}[C^{-1}][L^{-1}]\right]^{-1}\left[\mathbb{I}+(\frac{ \Delta t}{\Delta x})^{2}[C^{-1}][L^{-1}]\right]\left(\pi_{1}^{n}-\pi_{2}^{n+1 }\right)+\\ 2\frac{\Delta t}{\Delta x}\left[\mathbb{I}-(\frac{\Delta t}{\Delta x})^{2}[C^ {-1}][L^{-1}]\right]^{-1}[C^{-1}]\left(\widetilde{\tau}_{1}^{n}-\pi_{2}^{n+1 }\right)\end{array}\] (20) \[\begin{array}{l}\widetilde{\tau}_{1}^{n+1}=[\mathbb{I}-\Delta[L^{-1} \ R]]\left(\widetilde{\tau}_{1}^{n}+2\frac{\Delta t}{\Delta x}[\mathbb{I}-( \frac{\Delta t}{\Delta x})^{2}[L^{-1}]\mathbb{I}[C^{-1}]\right]^{-1}[L^{-1}] \left(\pi_{1}^{n}-\pi_{2}^{n+1}\right)+\\ \left[\mathbb{I}-(\frac{\Delta t}{\Delta x})^{2}[L^{-1}]\mathbb{I}[C^{-1}] \right]^{-1}[\mathbb{I}+(\frac{\Delta t}{\Delta x})^{2}[L^{-1}]\mathbb{I}[C^{-1 }]\right]\left(\pi_{1}^{n}-\pi_{2}^{n+1}\right)\end{array}\] (21)

Figure 4: The unknown point in the upper right edge is calculated from the three black ones by relating average differences in time and space via the matrices [A] and [B].

* **explicit boundary conditions*
* Now the boundary conditions may be specified in the following ways: open \(\rightarrow\) set i = 0, leave u as in (19) or (20); short \(\rightarrow\) set u = 0, leave i as in (19) or (20); termination with z right/left \(\rightarrow\) set u = i
* (+/- z), leave i as in (19) / (20).

\(\blacksquare\)_Mathematica_ Code (Gaussian Pulse with Reflections) RAM requirements: Front End 40 MB, Kernel 10 MB. As an example the propagation of gaussian pulses placed in the middle of each of two wires is presented. In order to demonstrate clearly the propagation and reflection properties the mutual coupling, which disturbs the shape of the pulses, is set to zero.

* npl = 100;(
* number of plots, may be set to smaller number if memory is tight *) dt = l.*10-12; (
* l psec *) dx = 0.004; (
* 4 mm *) (
* speed of propagation for stability, trade-off with computational speed *) \(\mu_{0}=4.\pi*10^{-7}\); \(\epsilon_{0}=10^{-9}\) / (35.95%); m = 250; (
* array dimension \(\rightarrow\) space distance m*dx = l m *) nmax = 4000; (
* simulation time steps, time considered: nmax
* dt *) pl = Round[nmax/npl]; (
* snapshot after every pl timesteps *) k = 2;(
* 2 wires \(\rightarrow\) dimension of matrices *)
* Parameters per Unit Length res = 2.; (* resistance in Q per meter *) rm = ( res 0 0 res); cap = \(\epsilon_{0}*\pi/2\); (* capacitance in F per meter *) cm = ( cap 0 0 cap); (* no mutual coupling *) ci = Inverse[cm]; ind = 2*\(\mu_{0}\) / \(\pi_{1}\) (* inductance in H per meter *) lm = ( ind 0 0 ind); (* no mutual coupling *) li = Inverse[lm]; zl = 0.5\(\sqrt{\mathrm{ind}\,/\,\mathrm{cap}}\); (* too low Termination left *) zr = 2.0\(\sqrt{\mathrm{ind}\,/\,\mathrm{cap}}\); (* too high Termination right *)

[MISSING_PAGE_FAIL:10]

* **Calculate Evolution in Time and produce Plots** The output of the next cell shows the pulses at progressing time intervals. If their enclosing cell bracket is selected and the Menu Command "Animate selected Graphics" is chosen, they display an animation.

(* this cell produces npl plots, view as animation *) Timing[ Do[ {(* main loop, calculate line n+1 in u and i grid *) Do[{jpl = j+1; jml = j-1;  u1[[j]] = ml.u0[[j]] +  m2.(u0[[jpl]] + u0[[jml]]) +m3.(i0[[jpl]] -i0[[jml]]);  i1[[j]] = m4.i0[[j]] + m5.(i0[[jpl]] +i0[[jml]]) +  m6.(u0[[jpl]] -u0[[jml]]), {j, 2, m-1}]; (* edges *) u1[[m]] = u0[[m-1]] +  m8.(u0[[m]] -u1[[m-1]]) = m9.(i0[[m]] -u1[[m-1]]);  i1[[m]] = m10.i0[[m-1]]-ml.(u0[[m]] -u1[[m-1]]) +  m12.(i0[[m]]-i1[[m-1]]);  u1[[1]] = u0[[2]]+m8.(u0[[1]] -u1[[2]]) +  m9.(i0[[1]] -i1[[2]]);  i1[[1]] = m10.i0[[2]] +m1.(u0[[1]] -u1[[2]]) +  m12.(i0[[1]] -i1[[2]]);  (* static boundary conditions open: set i=0,  short: set u=0 *) u1[[m, 2]] = zr i1[[m, 2]]; (* termination right with z *) u1[[1, 2]] = -zl i1[[1, 2]]; (* termination left with -z *) u1[[1, 1]] = 0.; (* wire lleft short circuit *) i1[[m, 1]] = 0.; (* wire lright open end *) u0 = u1;i0 = i1; (* advance one step in time *) (* do a snapshot of the voltages *) If[Mod[n, pl] = 0,  {(* plot voltage wire 1 *)  pl = ListPlot[  Transpose[u1][[1]], PlotRange -> {(0,m), (-0.6, l)},  PlotJoined -> True, DisplayFunction -> Identity];  (* plot current wire 1 *)  p2 = ListPlot[250 Transpose[i1][[1]],  PlotRange -> {(0,m), (-0.8, 0.6)},  PlotJoined -> True, DisplayFunction -> Identity];  (* plot voltage wire 2 *)  p3 = ListPlot[  Transpose[u1][[2]], PlotRange -> {(0,m), (-0.6, l)},  PlotJoined -> True, DisplayFunction -> Identity];  Show[GraphicsArray[{(p1), (p2), (p3)}],  DisplayFunction -> DisplayFunction];  (* get rid of small numbers to  accelerate calculation *)  u0 = Chop[u0]; i0 = Chop[i0]; Print[n]]]), {n, nmax}] ] Print["Fertig!"]

## 3 selected Plots from the Animation

Two wires without coupling are simulated, each of which is carrying a left and right travelling component of the initial pulse; the first two diagrams show u and i of the same, namely the first wire, the third diagram displays the voltage of the second wire. The current is scaled up by a factor that it numerically gets roughly the same size as the voltage. The pulses have broken up in two parts that run apart. Edges of pulses with gradients of voltages and currents of equal sign move right, those with gradients of opposite sign move left.

The upper wire has a short at the left and is open at the right end, the second wire (diagram at the bottom) is terminated left with \(Z_{t}=Z_{0}/2\) and right with \(Z_{\tau}=2\,Z_{0}\), where \(Z_{0}\) is the impedance \(\sqrt{L/C}\) of the wire. These boundary conditions cause reflection and transmission at either end of the wires.

Now the reflected pulses have changed direction, the amplitude of the pulses on the second wire is reduced to \(\left(Z_{x}\ -Z_{0}\right)/\left(Z_{x}\ +Z_{0}\right)\) of the original.

The simulated pulses demonstrate the expected behaviour including reflection at the wire boundaries. To understand any real situation the parameters entering the telegraph equation, specifically the capacities and inductances of the configuration of conductors should be known precisely (the calculations of the next sections reach an accuracy of a few % - tested with coax and other geometries -).

[MISSING_PAGE_FAIL:15]

[MISSING_PAGE_FAIL:16]

_Mathematica_ Code (Parallel Plate Capacitor)

RAM requirements: Front End 10 MB, Kernel 10 MB

A grid of 80 x 40 points is set up. In all of the following we have to keep in mind, how a grid matrix is mapped onto a rectangular coordinate system: the column index j marks the x-axis, increasing row numbers i proceed in negative y-direction.

Two conducting planes forming a capacitor are placed within a grounded rectangle, between the planes a dielectric area is defined.
* **set up matrix:** m defines a matrix of operators that tell, how the point i,j on the grid is to be updated (32), v1 and v2 define the fixed potential on conductor 1and 2 (the warnings on Part specification are harmless...).

```
v1=1,yv2=0.;(*potentialoftheelectrodes1and2*) nz=40;(*#ofrowsofthegrid,divisibleby2*) ns=80;(*#ofcolumnsofthegrid,divisibleby2*) u=,jm=.;m=Array[u,{nz,ns}];a=Array[u,{nz,ns}];mb=Table[0,{nz},{ns}]; e=Table[1,{i,1,nz},{j,1,ns}]; eps=4; ex1=20;exr=39;eyd=20;eyu=28;(*dielectricarea*) Do[Do[e[i,j]]=eps,{i,eyd,eyu}],{j,exl,exr}]; Do[Do[a[i,j]]=u[1,j],{j,1,ns}],{i,1,nz}] Do[Do[Do[ m[i,j]]]:=Evaluate[0.25(a[[i-1,j]]+a[i,j-1]]+a[[i+1,j]]+a[[i,j+1]]+0.0625/e[[i,j]](e[[i,j+1]]-e[[i,j-1]])(a[[i,j+1]]-a[[i,j+1]]-e[[i+1,j]]-e[[i-1,j]])(a[[i+1,j]]-a[[i-1,j]]))], {j,2,ns-1}],{i,2,nz-1}]
```

- FurtheroutputofPart::partdwillbesuppressedduringthiscalculation. ```
**boundary conditions:**
``` Do[m[[1,j]]:=0.,{j,1,ns}] Do[m[[nz,j]]:=0.,{j,1,ns}] Do[m[[i,1]]:=0.,{i,1,nz}] Do[m[[i,ns]]:=0.,{i,1,nz}] ```
Set location of the conductors in the operator matrix, also stored in mask mb :
``` x1=20;xr1=39;ydl=16;yul=17;x1l=20;xr2=39;yd2=30;yyu2=31; Do[Do[{m[i,j]]:=v1;mb[[i,j]]=1;},{j,x1l,xr1}],{i,ydl,yul}] Do[Do[{m[i,j]]:=v2;mb[[i,j]1=1;},{j,x1l2,xr2}],{i,yd2,yu2}]* **calculate potential** To accelerate the calculation we obtain a rough guess u1 (without dielectrics) on a coarser grid (# points/4 -> faster ) as initial matrix. u1 has already some similarity to the true distribution: **nzl=nz/2**;**nsl=ns/2**;**ml=.; **ml=Array[u1,{nzl,nsl}]**;**al=Array[u1,{nzl,nsl}]**;**Do[Do[a1[[i,j]]=ul[[i,j]],{j,1,nsl}],{i,l,nzl}]** Do[Do[  ml[i,j]]:=Evaluate[0.25(a1[[i-1,j]]+a1[[i+1,j]]+a1[[i,j-1]]+a1[[i,j+1]])], **a1[[i,j+1]]**)], **{j,2,nsl-1}]**,{i,2,nzl-1}]**;**Do[m1[[1,j]]:=0.,{j,1,nsl}]**;**Do[m1[[nzl,j]]:=0.,{j,1,nsl}]**;**Do[m1[[i,1]]:=0.,{i,1,nzl}]**;**Do[m1[[i,nsl]]:=0.,{i,1,nzl}]**;**(* guess for coordinatesold/2;**mb is used to identify location of conductors*)** Do[Do[If[mb[[2i,2j]]==1,m1[[i,j]]=m[[2i,2j]]],{i,nzl}], **{j,nsl}]** **- Part::partd : Part specification u1[[1, 1] is longer than depth of object.** **- Part::partd : Part specification u1[[1, 2] is longer than depth of object.** **- Part::partd : Part specification u1[[1, 3] is longer than depth of object.** **- General::stop :** **Further output of Part::partd will be suppressed during this calculation.**Let Laplace do his work...

```
ul=Table[0.,{i,1,nzl},{j,1,nsl}]; Timing[Do[{ul=ml; If[Mod[i,500]==0, Print[i,"residualerror:",Max[Flatten[Abs[ul-ml]]]]], {i,1,1000}]]]
500residualerror:8.45628\(\times\)10^6
1000residualerror:2.25683\(\times\)10^8 {22.Second,Null} The coarse grid u1 is interpolated to calculate intermediate points for the final higher resolution grid u (j -> x, i -> y)
``` p=ListInterpolation[Transpose[ul]]; Controlplotofinterpolation: Plot3D[p[x,y],{x,1,nsl},{y,1,nzl}, PlotRange ->All,PlotPoints -> 30,ViewPoint -> {3.,l.,l.}] ```

Controlplotofinterpolatedpotential.

Copy coarse to fine grid as input for the main calculation (near the border the interpolation has to extrapolate a little):

**u=Table[p[j/2,i/2],{i,1,nz},{j,1,ns}];**

* InterpolatingFunction:dmval : Input value \(\left\lfloor\frac{1}{2},\frac{1}{2}\right\rfloor\) lies outside the range of data in the interpolating function. Extrapolation will be used.
* General::stop : Further output of InterpolatingFunction:dmval will be suppressed during this calculation.

Once again time for Laplace...

**Timing[Do[{u=m; If[Mod[i,100]==0,{err=Max[Abs[Flatten[u-m]]]; Print[i,"residual error: ",err]; If[err<10^-6,Break[1]]]},{i,1,2000}]]**

1200 residual error: 7.76124\(\times\)10^-7

{120.533 Second, Null}

**ListPlot3D[u, ImageSize->400,PlotRange->All,ViewPoint+{3.,1.,1.}]**

* View of the resulting potential including dielectric material. The dielectric effects on the potential are evident in the abrupt change of the gradient on the flank to the right of the peak.
* **contourplot with fieldlines** A contourplot is generated for later display:

```
cont=ListContourPlot[u,ImageSize->400, PlotRange->All,ContourShading-False, Contours->15,DisplayFunction->Identity]
```

The electric field vector is given as derivative of an interpolated function of the potential u :

```
wi=ListInterpolation[Transpose[u],InterpolationOrder+1]; (*columnindexcountsincrementsinxdirection, rowindexcountsincrementsinydirection-> useTranspose*) ex=Derivative[1,0][wi]; ey=Derivative[0,1][wi];
```

The lines follow the field from the starting point x0, y0 uphill and downhill as far as possible...

```
FieldLine[(ex_InterpolatingFunction,x0_), (ey_InterpolatingFunction,y0_)]:= Module[(x=x0,y=y0,1={(x0,y0)}, xmin=Part[ex,1,1,1],xmax=Part[ex,1,1,2], ymin=Part[ex,1,2,1], ymax=Part[ex,1,2,2],emod10,xn,yn], (*searchuphill*) Do[[emod10=10.->((ex[x,y])^2+(ey[x,y])^2); If[emod10==0.,Break[]]; xn=ex[x,y]/emod10+x;yn=ey[x,y]/emod10+y; If[xn<xxmin||xn>xmax||yn<yymmin||yn>yymmax,Break[]]; l=Append[1,(xn,yn)];x=xn;y=yn],{n,1,5000}]; x=x0;y=y0; (*searchdownhill*) Do[[emod10=-10.->((ex[x,y])^2+(ey[x,y])^2); If[emod10==0.,Break[]]; xn=ex[x,y]/emod10+x;yn=ey[x,y]/emod10+y; If[xn<xxmin||xn>xmax||yn<yymmin||yn>yymmax,Break[]]; (*searchdownhill*) Do[[emod10=-10.->((ex[x,y])^2+(ey[x,y])^2); If[emod10==0.,Break[]]; xn=ex[x,y]/emod10+x;yn=ey[x,y]/emod10+y; If[xn<xxmin||xn>xmax||yn<yymmin||yn>yymmax,Break[]]; (*searchdownhill*) Do[[emod10=-10.->((ex[x,y])^2+(ey[x,y])^2); If[emod10==0.,Break[]]; xn=ex[x,y]/emod10+x;yn=ey[x,y]/emod10+y; If[xn<xxmin||xn>xmax||yn<yymmin||yn>yymmax,Break[]]; 1=Prepend[1,(xn,yn)];x=xn;y=yn},{n,1,5000}]; Line[1]]
```

Needs["Graphics'Arrow"]Add directional arrows to the fieldlines (**Ref. 9**, p. 522):

AddArrow[Line[opts_], d_, num_:8]:=

Module[{arr={},n=0,pts=Chop[opts]},

Fold[

If[First[#1]>d&&n<num,n++;

AppendTo[arr,Arrow[Last[#1],#2,HeadScaling>Absolute,

HeadCenter>0.5,HeadLength>4]];

{0,#2},{First[#1]+Sqrt[Apply[Plus,(Last[#1]-#2)^2]],
#2}]&&,{0,First[pts]},Rest[pts]];

arr]

We let n fieldlines run up and down from an ellipse with center xe, ye and half axes a, b. The density of the field lines is weighted with the strength of the field at the starting points. The dielectric area is indicated with a grey line. You have to experiment with the parameters to get a decent picture...

{xe,ye}={30,16.5};a=14;b=10;

n=21;(*n/3isthenumberofangularbins*)

eps=ListInterpolation[Transpose[e]];

(*samplethefieldstrengthontheellipse*)

ft=Table[eps[aCos[i2\(\pi\)/n]+xe,bSin[i2\(\pi\)/n]+ye]

\(\surd\)(ex[aCos[i2\(\pi\)/n]+xe,bSin[i2\(\pi\)/n]+ye]^2+

ey[aCos[i2\(\pi\)/n]+xe,bSin[i2\(\pi\)/n]+ye]^2),{i,1,n}];

s=Apply[Plus,ft];

(*n1[[i]]is(numberoflines-1)

startingintheithangularbinoftheellipse*)

nl=Round[Apply[Plus,Transpose[Partition[ft,3]]]/s*n];

start={};

(*arrayofanglesofthe

startingpointsontheellipse*)

Do[Do[AppendTo[start,(2\(\pi\)/(n/3))((i-1)+j/(nl[[i]]+1))],

{j,0,nl[[i]]},{i,1,n/3}];

(*calculatelinesoneaftertheother*)

lines=Table[FieldLine[{ex,aCos[start[[i]]]+xe},

{ey,bSin[start[[i]]]+ye}],{i,1,Length[start]}];

(*addsanglelineswhereappropriate*)

linel=FieldLine[{ex,25},{ey,34}];AppendTo[lines,linel];

line2=FieldLine[{ex,34},{ey,34}];AppendTo[lines,linel2];

arrows=Map[AddArrow[#,6]&&lines];

(*r1,r2:electrodes,r3:dielectrics*)

rl=Rectangle[{xll,ydl},{xrl,yul}];

r2=Rectangle[{xl2,yd2},{xr2,yu2}];

r3={Line[{{exl,eyd},{exl,eyu}}],

Line[{{exr,eyu},{exr,eyd}}],Line[{{exr,eyd},{exl,eyd}}]]};

Show[Graphics[{GrayLevel[0.8],Thickness[0.015],r3}],

cont,Graphics[{lines,arrows,r1,r2}],ImageSize>400,

Frame>True,DisplayFunction>$DisplayFunctionThe above picture shows the field and the equipotential lines of two electrodes, the upper one at zero, the lower at 1. All lines display a kink, whenever they enter or leave the dielectric (the greyish bordered area).
* 1}, {j, 1, ns
- 1}]; lrow = Table[{u[[nz, j+1]] = u[[nz, j]], u[[nz, j]], u[[nz, j]]-u[[nz-1, j]]}, {j, 1, ns
- 1}]; g = Append[g, lrow]; lcol = Append[Table[{u[[i, ns]]
- u[[i, ns-1]],  u[[i+1, ns]]
- u[[i, ns]]}, {i, 1, nz
- 1}], {u[[nz, ns]]
- u[[nz, ns-1]], u[[nz, ns]]
- u[[nz-1, ns]]}]; g = Transpose[Append[Transpose[g], lcol]];

[MISSING_PAGE_EMPTY:24]

## 11 **Inductances**

* **Definition of Coefficients of Self- and Mutual Inductance** There is a far reaching _duality_ between electric and magnetic fields, voltages and currents, or capacities and inductances. Because of that, the calculation of the inductance of a circuit proceeds on a terrain already paved by the previous section. In a system of n circuits we have the equations \[\begin{array}{l}\varphi_{1}=L_{11}\,{}^{*}\!I_{1}\,+L_{12}\,{}^{*}\!I_{2}\,+...+L_{1n}\,{}^{*}\!I_{n}\\ \varphi_{2}=L_{21}\,{}^{*}\!I_{1}\,+L_{22}\,{}^{*}\!I_{2}\,+...+L_{2n}\,{}^{*} \!I_{n}\\ \vdots\\ \varphi_{n}=L_{n1}\,{}^{*}\!I_{1}\,+L_{n2}\,{}^{*}\!I_{2}\,+...+L_{m}\,{}^{*} \!I_{n}\end{array}\] (33) where \(\varphi_{i}\) is the magnetic flux, \(I_{i}\) the current through circuit i and the \(L_{ij}=L_{ji}\) are called 'coefficients of mutual inductance', \(L_{ii}\) is the self-inductance of circuit i.
* **Determination of the Coefficients of Inductance in a System of Linear Circuits** The potential energy of system of linear circuits, carrying certain currents \(I_{i}\), may then be written as \[W=\tfrac{1}{2}\sum_{i=1}^{n}\sum_{j=1}^{n}L_{ij}I_{i}I_{j}\,.\] (34) There will be a magnetic field, whose shape is a consequence of the given geometry, and whose energy amounts to \[W=\tfrac{1}{2}\int_{V}\,\vec{B}\,{}^{*}\!\vec{H}\,d\,V\,.\] (35) The energy of a current carrying system of circuits is thus stored in the magnetic field between them. So the coefficients of inductance may be found through the field. We get the self-inductance per unit length \(L_{ii}\)' of the linear circuit i out of (34) and (35) after integration over the plane perpendicular to the conductor the field, which corresponds to the boundary conditions \(I_{i}=1\) and all other \(I_{k}=0\) : \[L_{ii}\,{}^{*}=\mu_{0}\int_{A}\,\vec{H}\,{}^{*}\!\vec{H}\,{}^{*}\!\vec{H}\,d \,x\,d\,y\] (36) After the self-inductance the coefficients of mutual inductance are obtained from \[L_{ij}\,{}^{*}=\tfrac{1}{2}\,(\mu_{0}\int_{A}\,\vec{H}\,{}^{*}\!\vec{H}\,{}^{ *}\!\vec{H}\,d\,x\,d\,y\,\,\text{-}\,L_{ii}\,{}^{*}\!\text{-}\,L_{jj}\,{}^{*} \!),\] (37) where the indices of \(\vec{H}\) point to the two circuits, whose currents were fixed to 1.
* **The Magnetic Field \(\vec{\mathbb{H}}\)** The magnetic field \(\vec{\mathbb{H}}\) can be derived from the vector potential \(\vec{\mathbb{K}}\): \[\vec{\mathbb{H}}=\triangledown\times\vec{\mathbb{K}}\] (38) Ampere's Law ( \[\triangledown\times\vec{\mathbb{H}}=\vec{\triangledown}\] ) leads with (38) to \[\triangledown\times\triangledown\times\vec{\mathbb{K}}=\vec{\triangledown}\,( \triangledown\cdot\vec{\mathbb{K}}\,)\,\text{-}\,\Delta\vec{\mathbb{K}}= \vec{\triangledown}\,,\] (39) where \(\vec{\triangledown}\) is the current density. In our case we may orient the coordinate systems z axis parallel to the current. As the vector potential is parallel to the current (**Ref. 7**, p.304), it has only a z coordinate \(A_{z}\). If in addition the Coulomb Gauge (\(\triangledown\cdot\vec{\mathbb{K}}=0\)) is applied, equation (39) changes to a Poisson equation \[\Delta\,A_{z}=\,\text{-}\,J_{z}\,.\] (40)The distribution of the currents is not known, what will the boundary condition be like? This is similar to our ignorance of the charge distribution in the electric case above (currents = moving charges after all!). For a way out imagine that currents of magnitude 1 have built up a vector potential according to (40). We cut out all current carrying conductors 1,...,i,...,n of the plane along their outer surfaces and nail down the values \(v_{i}\) of \(A_{z}\) at the cut i, as if the currents were still there. Now the potential satisfies in the current free space a Laplace equation

\[\Delta\,A_{z}\,=0 \tag{41}\]

plus certain boundary conditions. At each line of cut the value of \(A_{z}\,\) will be constant and can be found by trial and error from the requirement

\[\mathrm{I}=\oint\vec{H}\cdot d\vec{l}=\oint(\vec{\nabla}\,\times\vec{A})\cdot d \vec{l}=\pm 1\text{ or }0, \tag{42}\]

if the integration path \(l\) is around the surface cut. The task has now become the same as before, namely numerically solving the Laplace equation with (iteratively determined) boundary conditions.

_Mathematica_ Code (Coaxial Cable)

RAM requirements: Front End 15 MB, Kernel 25 MB

**set up matrix:**

This code is very similar to the code example of the previous section...

nz=130; (* divisible by 2 *) ns=130; (* divisible by 2 *) u=.;m=.; m=Array[u,{nz,ns}];a=Array[u,{nz,ns}];mb=Table[0,{nz},{ns}]; Do[Do[a[[i,j]]=u[[i,j]],{j,1,ns}],{i,1,nz}] Do[Do[Do[m[[i,j]]]:=Evaluate[0.25(a[[i-1,j]]+a[[i+1,j]]+a[[i,j-1]]+a[[i,j+1]]+a[[i,j+1]]+a[[i,j+1]]),{j,2,ns-1}],{i,2,nz-1}]

* Part:partd:Partspecificationu[1,3]islongerthandepthofobject.
* General:stop: FurtheroutputofPart::partdwillbesuppressedduringthiscalculation.

**boundary conditions:**

Do[m[[1, j]] := 0., {j,1,ns}] Do[m[[nz, j]] := 0., {j,1,ns}] Do[m[[i, l]] := 0., {i,1,nz}] Do[m[[i, ns]] := 0., {i,1,nz}]The value of the vector potential \(A_{z}\) at \(r_{0}\) -> v1 has to be adjusted according to (42). The vector potential is in this case independent of \(\varphi\), but changes radially even across the metal. A complete expression is given at the end of this section. Usually one starts with a guess, here we may use the known value (see (43)) for the coax cable (cross section Fig.5) :

Because of the complete shielding of the coax the addition of a constant doesn't change the shape of the vector potential between \(r_{0}\) and \(r_{1}\). Therefore the vector potential at \(r_{1}\) can be put to zero:

\[A_{z}(r)=\frac{1}{4\gamma_{1}}\texttt{Log}\left[\frac{\mp 1^{2}}{r^{2}} \right]\,. \tag{43}\]

Set two circular boundaries at \(r_{0}\) (inner wire) and \(r_{1}\) (shield):

If the boundaries are curved, they can only be mapped approximately to a square grid. In all tests the best way to find the sets of grid line intersection points that belong to the boundary areas and are to be kept fixed during the relaxation process, was just to include or exclude the points according to the radius of curvature of the corresponding boundary (see cell above). The general agreement between theory and numerical calculation ( about 2%) could - in the case of coaxial geometry - be somewhat improved (-> 0.5%) by using a radius of curvature that extends the fixed areas by 0.3 units. But this turned out not to be true for other configurations like for instance a pair of circular wires.

Figure 5: Inner wire and shield of a coax cable with their corresponding radii.

[MISSING_PAGE_EMPTY:28]

Copy coarse to fine grid:

```
p=ListInterpolation[u1]; u=Table[p[i/2,j/2],{i,l,nz},{j,l,ns}]; ListPlot3D[u,PlotRange->All];
```

Control plot of interpolated vector potential.

restless Laplace...

```
Timing[Do[{u=m;If[Mod[i,100]==0, {err=Max[Abs[Flatten[u-m]]]; Print[i,"residual error: ",err]; If[err<10^-6,Break[]]}],{i,1,7000}]]
```The picture shows the resulting vector potential with its logarithmic drop between \(r_{0}\) and \(r_{1}\).

**gradient field...**

g = Table[{u[[i, j+1]] -u[[i, j]], u[[i+1, j]] -u[[i, j]]},  {i, 1,nz -1}, {j, 1,ns -1}];  lrow = Table[{u[[nz, j+1]] -u[[nz, j]],  u[[nz, j]] -u[[nz, j]],  u[[nz, j]] -u[[nz-1, j]]}, {j, 1,ns -1}];  g = Append[g, lrow];  lcol = Append[Table[{u[[i, ns]] -u[[i, ns -1]],  u[[i+1, ns]] -u[[i, ns]]}, {i, 1,nz -1}],  {u[[nz, ns]] -u[[nz, ns -1]], u[[nz, ns]] -u[[nz -1, ns]]}];  g = Transpose[Append[Transpose[g], lcol]];

\(\mu_{0}=4.7\star 10^{-7}\);

[MISSING_PAGE_EMPTY:31]

[MISSING_PAGE_EMPTY:32]

[MISSING_PAGE_EMPTY:33]

tions at a finite distance, namely the border of the grid, while the formula uses a potential, which is 'zero at infinity'. To better check the accuracy of the relaxation, a new formula was developed that returns the exact potential of a charge in a box through the method of images with 'infinite reflection'. If a charge Q is placed inside a (2 - dimensional, rectangular) box, an infinite number of image charges of alternating sign will appear in x- and y- direction (Fig. 6). Every remote image adds a term to the potential, which remains finite because of the alternating sign. They 'compress' the potential function in such a way that its value at the borders of the box is constant.

The summation and reordering of all terms then gives the potential function at the point x, y within the box as a closed expression:

\(\phi\) (x,y) = \(\frac{Q}{2\pi\epsilon_{0}\,f}\) _f_(_x_, \(y\), \(x\), \(y\), \(x\), _y_) + \(k\), where

\(\texttt{f}\) = \(\frac{\frac{\partial}{\partial}}{\sum\limits_{m,n:=\infty}^{\infty}}\ln\left( \frac{\sqrt{\left(2\,n\,x_{n}-x+x_{n}\right)^{2}+\left(2\,m\,y_{n}-y\,-y\,y_{n} \right)^{2}}\,\sqrt{\left(2\,n\,x_{n}-x+x_{n}\right)^{2}+\left(2\,m\,y_{n}-y\, +y\,y_{n}\right)^{2}}}{\sqrt{\left(2\,n\,x_{n}-x+x_{n}\right)^{2}+\left(2\,m\, y_{n}-y\,+y\,y_{n}\right)^{2}}\,\sqrt{\left(2\,n\,x_{n}-x-x_{n}\right)^{2}+ \left(2\,m\,y_{n}-y\,-y\,y_{n}\right)^{2}}}\,\right)\,,\)

and k is a reference point of the potential on the border. Indices m,n = 0 denote the term in the middle next to the original charge, each square root represents the distance of a charge to the point P. The meaning of the variables is explained in Fig. 6. The double sum converges well, only a few tens of terms are needed in x and y direction. In addition the correct boundary conditions \(\phi\) (0, y) = \(\phi\) (\(x_{*}\), y) = \(\phi\) (x, 0) = \(\phi\) (x, y\({}_{*}\)) = k are fulfilled at the edges of the box. For the x - direction this can be seen by writing out a few terms of the sum in the index n: at x = \(x_{*}\) terms n=0 and n=1 cancel, then n=-1 and n=2 and so on, at x = 0 the parts of term n=0 cancel, then -1 and 1, -2 and 2 etc. A similar argument is valid for the y - direction. The boundary conditions are also evident from the symmetry in Fig. 6 with respect to (x = 0 or x = \(x_{*}\)) or (y = 0 or y = \(y_{s}\)).

Figure 6: ‘Mirror Cabiner’ of a charge and its images in a 2 – dimensional box, the indicated group of 4 charges constitutes a term (n = 0, m = 1) in the sum below

[MISSING_PAGE_EMPTY:35]

The coefficients of capacity of two wires 1 and 2 with diameter d at the positions cited at the beginning of this section may then be found according to (23) and (**Ref. 7**, p. 118) with

\(f(x_{1},\,y_{1}+d/2,\,x_{s},\,y_{s},\,x_{1},\,y_{1})\,=f_{11}\),

\(f(x_{1},\,y_{1}+d/2,\,x_{s},\,y_{s},\,x_{2},\,y_{2})\,=f_{12}\),

\(f(x_{2},\,y_{2}+d/2,\,x_{s},\,y_{s},\,x_{1},\,y_{1})\,=f_{21}\),

\(f(x_{2},\,y_{2}+d/2,\,x_{s},\,y_{s},\,x_{2},\,y_{2})\,=f_{22}\)

from

\(\mathbb{C}_{10}\)'= \(\frac{2\pi\epsilon_{0}(f_{12}=f_{12})}{f_{11}\,f_{22}=f_{12}\,f_{21}}\), \(\mathbb{C}_{20}\)'= \(\frac{2\,\pi\epsilon_{0}(f_{11}=f_{12})}{f_{11}\,f_{22}=f_{12}\,f_{11}}\), \(\mathbb{C}_{12}\)'= \(\frac{2\,\pi\epsilon_{0}\,f_{12}}{f_{11}\,f_{22}=f_{12}\,f_{11}}\) ;

The agreement (cf. Table 2) is much better for the stray capacities and reasonable for the mutual capacity.

* in contrast to the gradient of the electric potential. This is accounted for in the relaxation calculation by the necessary readjustment of the vector potential (42) at the edge of the conductors so that the current stays at 1. Then the formula for the self-inductance (l = \(\langle\mu_{0}\) / \(\tau\)) Log[ a/ r]) and mutual inductance (l\({}_{12}\) = \(\mu_{0}\) / \((\)2 \(\tau\)\(\rangle\) Log[r\({}_{14}\) r\({}_{23}\) / \((\)r\({}_{13}\) r\({}_{24}\) \(\rangle\) ] ) from the textbook (**Ref. 7**, p.316, 325) can be directly compared to the numerical computation. The calculation was done on a grid of 120 * 90 points, the positions of the conductors 1 to 4 lying at (60, 50), (50, 50) and (60, 40), (70, 40) respectively. The loop integrals (42) were taken with radii ranging from 4 to 6 in steps of 0.2, then their mean was used to determine the current. The results for _l\({}_{1}\)_, the self-inductance of circuit 1, (one circuit at current 1, the other at current zero
- as if not present -), _l\({}_{2}\)_ and ll (both circuits at current 1) are given below together with the corresponding values of the vector potential. 

The agreement (cf. Table 2) is much better for the stray capacities and reasonable for the mutual capacity.

* in contrast to the gradient of the electric potential. This is accounted for in the relaxation calculation by the necessary readjustment of the vector potential (42) at the edge of the conductors so that the current stays at 1. Then the formula for the self-inductance (l = \(\langle\mu_{0}\) / \(\tau\)\(\rangle\) Log[ a/ r]) and mutual inductance (l\({}_{12}\) = \(\mu_{0}\) / \((\)2 \(\tau\)\(\rangle\) Log[r\({}_{14}\) r\({}_{23}\) / \((\)r\({}_{13}\) r\({}_{24}\) \(\rangle\) ] ) from the textbook (**Ref. 7**, p.316, 325) can be directly compared to the numerical computation. The calculation was done on a grid of 120 * 90 points, the positions of the conductors 1 to 4 lying at (60, 50), (50, 50) and (60, 40), (70, 40) respectively. The loop integrals (42) were taken with radii ranging from 4 to 6 in steps of 0.2, then their mean was used to determine the current. The results for _l\({}_{1}\)_, the self-inductance of circuit 1, (one circuit at current 1, the other at current zero
- as if not present -), _l\({}_{2}\)_ and ll (both circuits at current 1) are given below together with the corresponding values of the vector potential. 
\begin{tabular}{}
The formula for the mutual inductance had to be modified to include the dependence on the wire radius:

\(\mathtt{l}_{12}\) (r) = \(\frac{\mu_{0}}{2\ \mathcal{I}\Gamma}\)Log[ \(\frac{(x_{14}-x)}{(x_{13}+x)}\) (\(x_{24}-x)\) ].

\(\mathtt{r}_{ij}\) denotes the distance of conductors i and j. Three values of the mutual inductance for r = 1, 2, 3, calculated with relaxation, are shown as black dots, the thin line represents the formula :

The overall agreement of the relaxation calculation with the theoretical expressions is satisfactory.

The procedures developed until now will be applied to calculate the crosstalk of coupled microstrip lines in the following section.

## The Pigtail

The physical dimensions of the pigtail connector for the ATLAS detector are shown in Fig. 7.

Size and distance of the 4 conductors and the dielectric foil are mapped onto a 446 * 80 grid to calculate the coefficients of capacity and inductance of this system. Pairs of conductors are operated as differential lines to minimize disturbances. The width and distance of the conductors will be 22 and 66 grid squares, the thickness of the conductors and the dielectric (\(\epsilon=4\)) will be 3 and 9 squares. The numbers of squares should be chosen as large as program memory allows to minimize quantization error.

Figure 7: Cross section of the Pigtail connector. The conductors have a thickness of 17\(\mu\).

_Mathematica_ Code (Coefficients of Induction for the pigtail)

RAM requirements: Front End 40 MB,Kernel 80 MB

vl=l.;v2=l.;v3=0.;v4=0.;(* potential of the electrodes *)

nz=80; (* # of rows of the grid, divisible by 2 *)

ns=446; (* # of columns of the grid, divisible by 2 *)

u=.;m=.;m=Array[u,{nz,ns}];a=Array[u,{nz,ns}];

mb=Table[0,{nz},{ns}];

e=Table[1,{i,1,nz},{j,1,ns}];

eps=4,

exl=1;exr=ns;eyd=1;eyu=10; (* dielectric area *)

Do[Do[Ge[i,j]]=eps,{i,eyd,eyu}],{j,exl,exr}];

Do[Do[a[i,j]]=u[i,j]1,{j,1,ns}],{i,1,nz}]

Do[Do[

m[i,j]]:=Evaluate[0.25(a[[i-1,j]]+a[[i,j-1]]+a[[i+1,j]]+

a[[i,j+1]])+

0.0625/e[[i,j]]((e[[i,j+1]]-e[[i,j-1]])(a[[i,j+1]]-

a[[i,j-1]])+(e[[i+1,j]]-e[[i-1,j]])(a[[i+1,j]]-a[[i-1,j]]))],

{j,2,ns-1}],{i,2,nz-1}]

Do[m[[1,j]]:=0.,{j,1,ns}]

Do[m[nz,j]]:=0.,{j,1,ns}]

Do[m[i,1]]:=0.,{i,1,nz}]

x1=80;xr1=102;yd1=11;yu1=14;

x12=168;xr2=190;yd2=11;yu2=14;

x13=256;xr3=278;yd3=11;yu3=14;

x14=344;xr4=366;yd4=11;yu4=14;

Do[[m[i,j]]:=v;mb[[i,j]]=1;},{j,x11,xr1}],{i,yd1,yu1}]

Do[Do[{m[i,j]]:=v2;mb[[i,j]]=1;},{j,x12,xr2}],{i,yd2,yu2}]

Do[Do[{m[i,j]]:=v3;mb[[i,j]]=1;},{j,x13,xr3}],{i,yd3,yu3}]

Do[Do[{m[i,j]]:=v4;mb[[i,j]]=1;},{j,x14,xr4}],{i,yd4,yu4}]

(* uncomment next lines to verify coordinates *)

pl=ListPlot3D[e-1,ViewPoint->{3.,1.,1.},

DisplayFunction->Identity];

p2=ListPlot3D[mb,ViewPoint->{3.,1.,1.},

DisplayFunction->Identity];

Show[pl,p2,DisplayFunction->DisplayFunction];

- Part::partd : Part specification u[1, 1] is longer than depth of object.

- Part::partd : Part specification u[1, 1] is longer than depth of object.

- Part::partd : Part specification u[1, 2] is longer than depth of object.

- General::stop :

Further output of Part::partd will be suppressed during this calculation.

The picture shows the location of the conductors and the dielectric material.

nzl=nz/2;nsl=ns/2;ul=.;ml=.; ml=Array[ul,{nzl,nsl}];a=Array[ul,{nzl,nsl}]; Do[Do[a1[i,i]]=NULL[i,j1],{j,1,nsl}],{i,1,nzl}] Do[Do[m1[[i,j]]=Evaluate[0.25(a1[[i-1,j]]+a1[[i+1,j]]+a1[[i,j-1]+a1[i,j-1]+a1[i,j-1]+a1[i,j+1]])1,{j,2,nsl-1}],{i,2,nzl-1}]; Do[m1[[1,j]]:=0.,{j,1,nsl}]; Do[m1[[i,1]]:=0.,{i,1,nzl}]; Do[m1[[i,nsl]]:=0.,{i,1,nzl}]; (* guess for coordinates:old/2;mb:location of conductors *) Do[Do[If[mb[[2i,2]]]==1,m1[[i,1]]==m[[2i,2j]]],{i,nzl}], {j,nsl}]] ul=Table[0.,{i,1,nzl},{j,1,nsl}]; Timing[Do[{ul=m1;If[Mod[i,500]==0,Print[i,"residualerror:",Max[Flatten[Abs[ul-ml]]]]]], {i,1,3000}]]

P = ListInterpolation[Transpose[ul]]; Plot3D[p[x,y], {x,1,nsl}, {y,1,nzl}, PlotRange + All, PlotPoints + 30, ViewPoint + {3., l., l.}]

Control plot of interpolated potential, two conductors at potential 1.

u=Table[p[j/2,i/2],{i,l,nz},{j,l,ns}]; Timing[Do[{u=m; If[Mod[i,100]==0,{err=Max[Abs[Flatten[u-m]]]; Print[i,"residual error: ",err]; If[err<10^-6,Break[1]]}],{i,1,7000}]1 ListPlot3D[u, Imagesize->400,PlotRange->All,ViewPoint+{3.,1.,1.}];
* InterpolatingFunction:ddraw : Inputvalue { \(\frac{1}{2}\), \(\frac{1}{2}\)} liesoutsidetherangeofdata intheinterpolatingfunction.Extrapolationwillbeused. -InterpolatingFunction:ddraw : Inputvalue {1, \(\frac{1}{2}\)} liesoutsidetherangeofdata intheinterpolatingfunction.Extrapolationwillbeused. -InterpolatingFunction:ddraw : Inputvalue {\(\frac{3}{2}\), \(\frac{1}{2}\)} liesoutsidetherangeofdata intheinterpolatingfunction.Extrapolationwillbeused. -General::stop:Furtheroutputof InterpolatingFunction:ddrawwillbesuppressedduringthiscalculation.
100residualerror: 0.000417988
6200residualerror: 1.03883\(\times\)10^-6
6300residualerror: 9.82263\(\times\)10^-7
8891.7Second,Null} ```
Potential distribution of the pigtail including dielectrics, with the first two conductors set to potential 1.
``` cont=ListContourPlot[u,ImageSize->400, PlotRange->All,ContourShading-False, Contours->15,DisplayFunction->Identity] wi=ListInterpolation[Transpose[u],InterpolationOrder->1];(*columnindexcountsincrementsinxdirection, rowindexcountsincrementsinydirection* useTranspose*) ex=Derivative[1,0][wi]; ey=Derivative[0,1][wi]; FieldLine[(ex_InterpolatingFunction,x0_), (ey_InterpolatingFunction,y0_)]:= Module[(x=x0,y=y0,1={(x0,y0)}, xxmin=Part[ex,1,1,1],xmax=Part[ex,1,1,2], yymin=Part[ex,1,2,1], yymax=Part[ex,1,2,2],emod10,xn,yn), (*searchuphill*) Do[{emod10=10.%/((ex[x,y])^2+(ey[x,y])^2); If[emod10==0.,Break[]]; xn=ex[x,y]/emod10+x;yn=ey[x,y]/emod10+y; If[xn<xxmin||xn>xmax|| yn<yymin||yn>yymax,Break[]];
1=Append[1,(xn,yn)];x=xn;y=yn},{n,1,5000}]; x=x0;y=y0; (*searchdownhill*) Do[{emod10=-10.%/((ex[x,y])^2+(ey[x,y])^2); If[emod10==0.,Break[]]; xn=ex[x,y]/emod10+x;yn=ey[x,y]/emod10+y; If[xn<xxmin||xn>xmax|| yn<yymin||yn>yymax,Break[]];
1=Prepend[1,(xn,yn)];x=xn;y=yn},{n,1,5000}]; Line[1]] Needs["Graphics^Arrow"] AddArrow[Line[opts_],d_,num_:8]:= Module[{arr=(),n=0,pts=Chop[opts]}, Fold[If[First[#1]]&&#n<num,n++; AppendTo[arr,Arrow[Last[#1],#2,HeadScaling>Absolute, HeadCenter~0.5,HeadLength~4]]; {0,#2},{First[#1]+Sqrt[Apply[Plus,(Last[#1]-#2)^2]], #2}]&&,{0,First[pts]},Rest[pts]];arr] (**1**) {xe,ye}={91,12.5};a=13;b=6; n=21;(*n/3isthenumberofangularbins*) eps=ListInterpolation[Transpose[e]]; (*samplethefieldstrengthontheellipse*) ft=Table[eps[aCos[i2r/n]+xe,bSin[i2r/n]+ye] /(ex[aCos[i2r/n]+xe,bSin[i2r/n]+ye]^2+ ey[aCos[i2r/n]+xe,bSin[i2r/n]+ye]^2),{i,1,n}]; s=Apply[Plus,ft]; (*n1[[i]]is(numberoflines-1) startingintheithangularbinoftheellipse*) nl=Round[Apply[Plus,Transpose[Partition[ft,3]]]/s*n]; start=(); (*arrayofanglesofthe startingpointsontheellipse*) Do[Do[AppendTo[start,(2r/(n/3))((i-1)+j/(nl[[i]]+1))], {j,0,nl[[i]]}],{i,1,n/3}]; (*calculatelinesoneaftertheother*)lines=Table[FieldLine[{ex,aCos[start[[i]]]+xe}, {ey,bSin[start[[i]]]+ye}],{i,1,Length[start]}]; (*addsinglelineswhereappropriate*) (wlinel=FieldLine[{ex,25},{ey,34}]; AppendTo[lines,linel];line2=FieldLine[{ex,34},{ey,34}]; AppendTo[lines,line2];*) arrows=Map[AddArrow[#,6]&,lines]; (*rl,r2:electrodes,r3: dielectrics*) rl=Rectangle[{xl1,ydl},{xrl,yul}]; r2=Rectangle[{xl2,yd2},{xr2,yu2}]; r3=Rectangle[{xl3,yd3},{xr3,yu3}]; r4=Rectangle[{xl4,yd4},{xr4,yu4}]; r5={Line[{exl,eyd},{exl,eyu}]}, Line[{{exl,eyu},{exr,eyu}}], Line[{{exr,eyu},{exr,eyd}}]], Line[{{exr,eyu},{exr,eyd}}]], Line[{{exr,eyd},{exl,eyd}}]]]; Show[Graphics[{GrayLevel[0.8],Thickness[0.015],r5}], cont,Graphics[{lines,arrows,r1,r2,r3,r4}], ImageSize=400,Frame=True, DisplayFunction=$DisplayFunction] = ContourGraphics= ```

Field lines and equipotential lines of the pigtail, the two conductors to the left on potential 1, the others on 0.

g=Table[{u[[i,j+1]]-u[[i,j]],u[[i+1,j]]-u[[i,j]]}, {i, l,nz-l},{j,l,ns-l}]; lrow=Table[{u[[nz,j+1]]-u[[nz,j]]}, u[[nz,j]]-u[[nz-l,j]]}, {j,l,ns-l}]; g=Append[g,lrow]; lcol=Append[Table[{u[[i,ns]]-u[[i,ns-l]], u[[i+1,ns]]-u[[i,ns]]}, {i,l,nz-l}]], {u[[nz,ns]]-u[[nz,ns-l]], u[[nz,ns]]-u[[nz-l,ns]]}]; g=Transpose[Append[Transpose[g],lcol]]; ```

The following results were obtained in runs with the parameters vi as specified :

\[\begin{array}{llll}\tilde{C}_{11}&=&129.529\ [\mbox{pF/m}]&(\mbox{v1 =1, v2 =0, v3 =0, v4 =0})\\ \tilde{C}_{22}&=&129.527\ [\mbox{pF/m}]&(\mbox{v1 =0, v2 =1, v3 =0, v4 =0})\\ \tilde{C}_{33}&=&129.527\ [\mbox{pF/m}]&(\mbox{v1 =0, v2 =0, v3 =1, v4 =0})\\ \tilde{C}_{44}&=&129.529\ [\mbox{pF/m}]&(\mbox{v1 =0, v2 =0, v3 =0, v4 =1})\\ \tilde{C}\tilde{C}_{12}&=&258.572\ [\mbox{pF/m}]&(\mbox{v1 =1, v2 =1, v3 =0, v4 =0})\ \stackrel{{\eqref{eq:C12}}}{{\rightarrow}}\tilde{C}_{12}&=\mbox{- 0.242}&[\mbox{pF/m}]\\ \tilde{C}\tilde{C}_{23}&=&258.569\ [\mbox{pF/m}]&(\mbox{v1 =0, v2 =1, v3 =1, v4 =0})\ \stackrel{{\raisebox{-0.5pt}{$\mathcal{C}$}}}{{\rightarrow}}\tilde{C}_{23}&=\mbox{- 0.242}&[\mbox{pF/m}]\\ \tilde{C}\tilde{C}_{34}&=&258.572\ [\mbox{pF/m}]&(\mbox{v1 =0, v2 =0, v3 =1, v4 =1})\ \stackrel{{\raisebox{-0.5pt}{$\mathcal{C}$}}}{{\rightarrow}}\tilde{C}_{34}&=\mbox{- 0.242}&[\mbox{pF/m}]\\ \tilde{C}\tilde{C}_{13}&=&259.049\ [\mbox{pF/m}]&(\mbox{v1 =1, v2 =0, v3 =1, v4 =0})\ \stackrel{{\raisebox{-0.5pt}{$\mathcal{C}$}}}{{\rightarrow}}\tilde{C}_{13}&=\mbox{- 0.0035}&[\mbox{pF/m}]\\ \tilde{C}\tilde{C}_{24}&=&259.049\ [\mbox{pF/m}]&(\mbox{v1 =0, v2 =1, v3 =0, v4 =1})\ \stackrel{{\raisebox{-0.5pt}{$\mathcal{C}$}}}{{\rightarrow}}\tilde{C}_{24}&=\mbox{- 0.0035}&[\mbox{pF/m}]\\ \tilde{C}\tilde{C}_{14}&=&259.059\ [\mbox{pF/m}]&(\mbox{v1 =1, v2 =0, v3 =0, v4 =1})\ \stackrel{{\raisebox{-0.5pt}{$\mathcal{C}$}}}{{\rightarrow}}\tilde{C}_{14}&=\mbox{ 0}&[\mbox{pF/m}]\\ \end{array}\]

Using (24) the coefficients of capacity come out to be

\[\begin{array}{llll}C_{10}&=&129.28\ [\mbox{pF/m}]&,&C_{20}&=&129.04\ [\mbox{pF/m}]&,&C_{30}&=&129.04\ [\mbox{pF/m}]&,&C_{40}&=&129.28\ [\mbox{pF/m}]&,\\ C_{12}&=&0.242\ &[\mbox{pF/m}]&,&C_{23}&=&0.242\ &[\mbox{pF/m}]&,&C_{34}&=&0.242\ &[\mbox{pF/m}]&,\\ C_{13}&=&0.0035\ [\mbox{pF/m}]&,&C_{24}&=&0.0035\ [\mbox{pF/m}]&,&C_{14}&=&0&[\mbox{pF/m}]\\ \end{array}\]

All ten coefficients of capacity form a five node network (Fig. 8). To describe two differential pairs we need to combine the ten into six effective capacities \(\hat{C}_{ij}\) between the nodes 1 to 4, to each of which all ten coefficients will contribute. \(\hat{C}_{12}^{*}\) of the first differential line (\(C_{1}\)'in Fig. 1) is the whole capacity from node 1 to 2. \(\hat{C}_{34}^{*}\) of the second differential line (\(C_{2}\)'in Fig. 1) is the total capacity from node 3 to 4. For the coupling capacity (\(C_{12}\)'in Fig. 1) there is a special twist: Any change of the potential on node 1 will couple via \(\hat{C}_{13}^{*}\) to node 3 and via \(\hat{C}_{14}^{*}\) to node 4 and is (because of the dominating \(C_{i0}\)'s) hardly seen as a voltage on the second pair (common mode rejection of the differential line), the same can be said for changes of potential on node 2; therefore the coupling is given by

\[\begin{array}{llll}C_{12}\mbox{'}=\hat{C}_{23}^{*}&\mbox{- $\hat{C}_{24}^{*}$}&\mbox{- $(\hat{C}_{13}^{*}$}&\mbox{- $\hat{C}_{14}^{*}$}).\end{array} \tag{45}\]

This completes the expression of all three capacities found in Fig. 1 through the \(\hat{C}_{ij}\) of the pigtail. Their values will be used in the code example below.

Now in order to find the effective capacity \(\hat{C}_{ij}^{*}\) between two nodes i and j we reduce the network node by node through replacing successively star-type nodes with box-type nets, which are then parallel to the rest of the network, until there are only two nodes left (**Ref. 7**, p.31f). As you will see, every reduction blows up the resulting expression quite a bit, so the symbolic capability of _Mathematica_ comes to good use here.

Equation (45) shows how the new box impedance connecting nodes \(\mu\) and \(\nu\) is expressed by all the star legs:

\[\mathbb{Z}_{\mu,\nu}=\mathbb{Z}_{\mu,\nu}\mathbb{Z}_{\nu,\nu}\sum_{\mu,\nu}^{n} \frac{1}{\mathbb{Z}_{\lambda,\nu}}\,, \tag{46}\]

where n is the number of legs of the star-type node r to be replaced.

The cell below contains an auxiliary function to calculate parallel impedances.

We get 6, 3 and at last 1 expression corresponding to the thin lines in the lower part of Fig. 8.

Figure 8: Upper part: Most general capacitive network consisting of 5 nodes (0-4).

Lower part: Successive reduction to two nodesReplace node 4 :

\[\begin{array}{c}\includegraphics[width=14.226378pt]{./Simplify}\\ \includegraphics[width=14.

[MISSING_PAGE_EMPTY:46]

[MISSING_PAGE_EMPTY:47]

After entering the capacity values for the impedances, we get \(\mathcal{C}_{12}^{\cdot}=C_{1}\)' from (3) for the first differential line!

\begin{tabular}{|l|} \hline z10 = 1/129.28; z12 = 1/0.242; z13 = 1/0.0035; z14 = 1/0.0001; z20 = 1/129.04; z23 = 1/0.242; z24 = 1/0.0035; z30 = 1/129.04; z34 = 1/0.242; z40 = 1/129.28; 1/zzzz12 \\ \hline \end{tabular}

64.8842

To get \(\mathcal{C}_{23}^{\cdot}\) between nodes 2 and 3 the numbers 1 and 3 in the capacitors indices swap places (cf. Fig. 8):

\begin{tabular}{|l|} \hline z10 = 1/129.04; z12 = 1/0.242; z13 = 1/0.0035; z14 = 1/0.242; z20 = 1/129.04; z23 = 1/0.242; z24 = 1/0.0035; z30 = 1/129.28; z34 = 1/0.0001; z40 = 1/129.28; 1/zzzz12 \\ \hline \end{tabular}

64.8845

Both the capacities \(\mathcal{C}_{24}^{\cdot}\) between nodes 2 and 4 (swap numbers 1 and 4) and \(\mathcal{C}_{13}^{\cdot}\) between nodes 1 and 3 (swap numbers 2 and 3) are identical :

\begin{tabular}{|l|} \hline z10 = 1/129.28; z12 = 1/0.0035; z13 = 1/0.242; z14 = 1/0.0001; z20 = 1/129.04; z23 = 1/0.242; z24 = 1/0.242; z30 = 1/129.04; z34 = 1/0.0035; z40 = 1/129.28; 1/zzzz12 \\ \hline \end{tabular}

64.7649

The capacity \(\mathcal{C}_{14}^{\cdot}\) between nodes 1 and 4 is (swap numbers 2 and 4):

\begin{tabular}{|l|} \hline z10 = 1/129.28; z12 = 1/0.0001; z13 = 1/0.0035; z14 = 1/0.242; z20 = 1/129.28; z23 = 1/0.242; z24 = 1/0.0035; z30 = 1/129.04; z34 = 1/0.242; z40 = 1/129.04; 1/zzzz12 \\ \hline \end{tabular}

64.7626

Last is \(C_{2}\)', the capacity of the second differential line, where 1 is swapped for 4 and 2 for 3 (identical to \(C_{1}\)') :

\begin{tabular}{|l|} \hline z10 = 1/129.28; z12 = 1/0.242; z13 = 1/0.0035; z14 = 1/0.0001; z20 = 1/129.04; z23 = 1/0.242; z24 = 1/0.0035; z30 = 1/129.04; z34 = 1/0.242; z40 = 1/129.28; 1/zzzz12 \\ \hline \end{tabular}

64.8842

The remaining effective coupling _that determines the crosstalk_, evaluates then with (45) to \(C_{12}\)' = 0.1173 [pF/m].

* _Mathematica_ Code (Coefficients of inductance of the pigtail)

RAM requirements: Front End 20 MB, Kernel 30 MB

Set v1 - v4 such that the resulting current in the loop integral below has the correct value (-1 or 0 or +1).

```
v1=0.196581;v2=-0.1947736;v3=0.1947728;v4=-0.196612; nz=80; (* # of rows of the grid, divisible by 2 *) ns=446; (* # of columns of the grid, divisible by 2 *) {xx,yr}={91,12.5};(* center point for contour integral *) u=.;m=.;m=Array[u,{nz,ns}];a=Array[u,{nz,ns}]; mb=Table[0,{nz},{ns}]; Do[Do[a[[i,j]]=u[[i,j]],{j,1,ns}],{i,1,nz}] Do[Do[Do[m[[i,j]]]:=Evaluate[0.25(a[[i-1,j]]+a[[i,j-1]]+ a[[i+1,j]]+a[[i,j+1]]]), {j,2,ns-1}],{i,2,nz-1}] Do[m[[1,j]]:=0.,{j,1,ns}] Do[m[[nz,j]]:=0.,{j,1,ns}] Do[m[[i,1]]:=0.,{i,1,nz}] Do[m[[i,n]]:=0.,{i,1,nz}]  x1=80;xxr1=10;jrold=11;yul=14; x12=168;xxr2=190;yd2=11;yul=214; x13=256;xxr3=278;yd3=11;yu3=14; x14=344;xxr4=366;yd4=11;yu4=14; Do[Do[m[[i,j]]]:=v1;mb[[i,j]]=1;},{j,x11,xxr1}],{i,ydl,yu1}] Do[Do[m[[i,j]]:=v2;mb[[i,j]]=1;},{j,x12,xxr2},{i,yd2,yu2}] Do[Do[m[[i,j]]:=v3;mb[[i,j]]=1;},{j,x13,xxr3}],{i,yd3,yu3}] Do[Do[m[[i,j]]:=v4;mb[[i,j]]=1;},{j,x14,xxr4}],{i,yd4,yu4}]
```

```
nzl=nz/2;ns1=ns/2;ul=.,ml=.; ml=Array[ul,{nz1,ns1}];al=Array[ul,{nz1,ns1}]; Do[Do[a1[[i,j]]=u1[[i,j]],{j,1,ns1}],{i,1,nz1}] Do[Do[m1[[i,j]]:=Evaluate[0.25(a1[[i-1,j]]+a1[[i+1,j]]+a1[[i,j-1]]+ a1[[i,j+1]]), {j,2,ns1-1}],{i,2,nz1-1}]; Do[m1[[1,j]]:=0.,{j,1,ns1}]; Do[m1[[nz1,j]]:=0.,{j,1,ns1}]; Do[m1[[i,1]]:=0.,{i,1,nz1}]; (* guess for coordinates:old/2;mb is used to identify location of conductors *) Do[Do[If[mb[[2i,2j]]=1,ml[[i,j]]=m[[2i,2j]],{i,nz1}], {j,ns1}] ul=Table[0.,{i,1,nz1},{j,1,ns1}]; Timing[Do[{ul=ml; If[Mod[i,500]=0, Print[i,"residual error:",Max[Flatten[Abs[ul-ml]]]]], {i,1,2000}]]]
```

* Part::partd : Part specification u1[1, 1] islonger than depth of object.
* General::stop : Further output of Part::partd will be suppressed during this calculation.

Vector potential of the pigtail, a current of strength 1 is flowing back and forth in both circuits.

g=Table[{u[[i,j+1]]=u[[i,j]],u[[i+1,j]]=u[[i,j]]},  {i,1,nz-1},{j,1,ns-1}]; }row=Table[{u[[nz,j+1]]-u[[nz,j]],  u[[nz,j]]-u[[nz-1,j]]}, {j,1,ns-1}]; g=Append[g,lrow]; }col=Append[Table[{u[[i,ns]]-u[[i,ns-1]],  u[[i+1,ns]]-u[[i,ns]]}, {i,1,nz-1}],  {u[[nz,ns]]-u[[nz,ns-1]],u[[nz,ns]]-u[[nz-1,ns]]}]; g=Transpose[Append[Transpose[g],lcol]]; } \(\mu_{0}=4.7\star 10^{-7}\); The shape of the conductors now suggests an elliptic contour to calculate the current. The elliptic path of the line integral has to run completely outside of the current. Adjust the half axes a and b accordingly; for high accuracy it is necessary to control _all_ 4 currents precisely :

dphi=\(\pi\)/100; {xr,yr}={91,12.5}; {wcenterpointforcontourintegral1*} i=Table[Sum[-dphi(  g[Round[yr+b*Sin[phi]],Round[xx+a*Cos[phi]],2]]* a*Sin[phi]+g[[Round[yr+b*Sin[phi]],  Round[xx+a*Cos[phi]],1]]*b*Cos[phi]),  {phi,0,2r,dphi}],{a,13,20},{b,5,10}] iMeanl=Apply[Plus,Flatten[i]]/Length[Flatten[i]] {{1.00863,1.00161,1.00454,1.00039,0.998661,0.999783},  {1.00281,1.00465,1.00212,1.00047,0.999056,0.99995},  {0.998864,1.00062,1.00015,0.99813,0.997783,0.998637},  {1.00116,1.00143,1.00126,0.999359,1.00027,1.00031},  {1.00394,1.00344,1.00205,0.999937,1.0006,0.999843},  {1.00242,1.00103,0.998707,0.997314,0.998403,0.99755},  {0.996741,1.00119,0.999394,0.998253,0.99902,0.998298},  {0.995873,0.999232,0.997195,0.995986,0.996848,0.996145}} }
1.

dphi=\(\pi\)/100; {xx, yr}={179, l2.5}; (*center point for contour integral 2 *) i=Table[Sum[-dphi(  g[[Round[yr+b*Sin[phi]],Round[xx+a*Cos[phi]],2]]*  a*Sin[phi]+g[[Round[yr+b*Sin[phi]],  Round[xx+a*Cos[phi]],1]]*b*Cos[phi]), {phi, 0, 2x, dphi}], {a, 13, 20}, {b, 5, 10} iMean2=Apply[Plus,Flatten[i]]/Length[Flatten[i]]

{(-1.00867, -1.00161, -1.00454, -1.00035, -0.998615, -0.999734),  {-1.00283, -1.00465, -1.00213, -1.00046, -0.999033, -0.999927},  {-0.998885, -1.00063, -1.00015,  -0.998121, -0.997766, -0.998623},  {-1.00116, -1.00144, -1.00126, -0.999349, -1.00025, -1.0003},  {-1.00395, -1.00345, -1.00206, -0.999929, -1.00059, -0.999831},  {-1.00243, -1.00104, -0.998716, -0.997309, -0.998397,  -0.997544}, {-0.996769, -1.00121, -0.999405,  -0.998249, -0.999015, -0.998294}, {-0.995898, -0.999252, -0.997209, -0.995986, -0.996848, -0.996147}}

-1.

dphi=\(\pi\)/100; {xx, yr}={267, l2.5}; (*center point for contour integral 3 *) i=Table[Sum[-dphi(  g[[Round[yr+b*Sin[phi]],Round[xx+a*Cos[phi]],2]]*  a*Sin[phi]+g[[Round[yr+b*Sin[phi]],  Round[xx+a*Cos[phi]],1]*b*Cos[phi]),  {phi, 0, 2x, dphi}], {a, 13, 20}, {b, 5, 10} iMean3=Apply[Plus,Flatten[i]]/Length[Flatten[i]]

{(1.00867, 1.00161, 1.00454, 1.00035, 0.998616, 0.999736),  {1.00283, 1.00465, 1.00213, 1.00046, 0.999034, 0.999928},  {0.998884, 1.00062, 1.00015, 0.998121, 0.997767, 0.998624},  {1.00116, 1.00144, 1.00126, 0.99935, 1.00025, 1.0003},  {1.00395, 1.00345, 1.00206, 0.999929, 1.00059, 0.999832},  {1.00243, 1.00104, 0.998716, 0.99731, 0.998398, 0.997545},  {0.996768, 1.00121, 0.999405, 0.99825, 0.999015, 0.998295},  {0.995897, 0.999252, 0.997209, 0.995987, 0.996849, 0.996148}}

dphi=\(\pi\)/100; {xr, yx}={355,12.5}; (wcenter point for contour integral 4 *) i= Table[ Sum[-dphi ( g[Round[yr+b*Sin[phi]], Round[xx+a*Cos[phi]], 2]]* a*Sin[phi]+g[[Round[yr+b*Sin[phi]],  Round[xx+a*Cos[phi]],1]]*b*Cos[phi]), {phi, 0,2r, dphi}], {a, 13, 20}, {b, 5, 10}] iMean4= Apply[Plus, Flatten[i]]/Length[Flatten[i]]

{(-1.0087, -1.00165, -1.00456, -1.00037, -0.998629, -0.999733), (-1.00286, -1.00467, -1.00214, -1.00047, -0.99904, -0.99992), (-0.99892, -1.00065, -1.00016, -0.998135, -0.997771, -0.998613), (-1.0012, -1.00147, -1.00128, -0.999367, -1.00025, -1.00029), (-1.00398, -1.00346, -1.00207, -0.999936, -1.00058, -0.999813), (-1.00245, -1.00105, -0.998717, -0.997308, -0.99838, -0.997513), (-0.996784, -1.00121, -0.999398, -0.998239, -0.998989, -0.998252), {-0.995908, -0.999245, -0.997191, -0.995964, -0.996808, -0.996088)}

-1.

If all currents have their required values, then the inductance is:

ind=\(\mu_{0}*\)Sum[g[[i, j]].g[[i, j]], {i, 1,nz}, {j, 1,ns}]

9.82397\(\times\)10\({}^{-7}\)

Results for the external inductances from the three pairs of currents {1,0},{0,1},and {1,1}: \(L_{1}\)' = 0.493248 [\(\mu\)H/m] (v1 = 0.196541, v2 = - 0.196598, v3 = - 0.0018, v4 = - 0.00004) \(L_{2}\)' = 0.493260 [\(\mu\)H/m] (v1 = 0.000039, v2 = 0.001824, v3 = 0.196572, v4 = - 0.196572) \(\mathrm{LL}_{12}\)' = 0.982397 [\(\mu\)H/m] (v1 = 0.196581, v2 = - 0.1947736, v3 = 0.1947728, v4 = - 0.196612) The internal inductance amounts to \(\frac{\mu_{0}}{8\pi}=5*10^{-8}\) [H/m] per conductor (**Ref. 7**, p.320) and the complete result is: \(L_{1}\)' = 0.593248 [\(\mu\)H/m], \(L_{2}\)' = 0.593260 [\(\mu\)H/m], \(\mathrm{LL}_{12}\)' = 1.182397 [\(\mu\)H/m] With (37) there is then the mutual inductance _that is responsible for the crosstalk_: \(L_{12}\)' = - 3.34 [nH/m]. The negative sign can be understood from the following argument: conductor 1 generates with current \(+1\) a certain amount of flux between conductors 3 and 4. The flux originating from conductor 2 with current in opposite direction is closer to the region between conductor 3 and 4 and has therefore (because it depends logarithmically on the distance) in this place a bigger impact, so that the addition of these two fluxes will give a negative number. The obtained values for the capacities and inductances will now be used in the following code to calculate the propagating pulse.

_Mathematica_ Code (Animation of Double Pulse including Crosstalk)

RAM requirements: Front End 60 MB, Kernel 20 MB

```
npl=300;(*numberofplots*) dt=1.*10-12;(*1psec*) dx=0.004;(*4mm*) (*\(\frac{\mathrm{dx}}{\mathrm{dt}}\)*speedofpropagationforstability, trade-offwithcomputationalspeed*) m=250;(*arraydimension*spacedistancem*dx=1m*) nmax=50000;(*timeconsidered:nmax*dt*) pl=Round[nmax/npl]; (*snapshotaftereverypltimesteps*) k=2;(*numberofcircuits*) (*defineinputpulse*) rise=Round[1.*10-9/dt]; width=Round[10.5*10-9/dt]; fall=Round[1.*10-9/dt]; emp=Round[12.5*10-9/dt]; len=rise+width+fall+emp+rise+width+fall; uin=Table[1.*j/rise,{j,1,rise}]; uin=Append[uin,Table[1.,{j,1,width}]]; uin=Append[uin,Table[1.-j/fall,{j,1,fall}]]; uin=Append[uin,Table[0.,{j,1,emp}]]; uin=Append[uin,Table[1.*j/rise,{j,1,rise}]]; uin=Append[uin,Table[1.-j/fall,{j,1,fall}]]; uin=Append[uin,Table[0.,{j,1,nmax-len}]]; uin=Flatten[uin];
```

Parameters per Unit Length:

```
res=8.;(*resistanceinQpermeter*) rm=(*res00 res); (*capacitanceinFpermeter*) cm=(65.-0.117 *10-12;(*nowincl crosstalk*) ci=Inverse[cm]; (*inductanceinHpermeter*) lm=(0.59325-0.00334 -0.00334 -0.00334 *10-6;(*nowincl crosstalk*) li=Inverse[lm]; zl=220;(*Terminationleft*) zr=220;(*Terminationright*)
```
Initialization and Setup of Coefficient Matrices:

```
id=IdentityMatrix[k]; ul=u0=Table[0.,(m),(k)];il=i0=Table[0.,(m),(k)]; ml=\(\left(\text{id}-\left(\frac{\text{dt}}{\text{dx}}\right)^{2}\text{ci. }\text{li}\right);\)m2=\(\frac{1}{2}\)\(\left(\frac{\text{dt}}{\text{dx}}\right)^{2}\)(ci.li);m3=-\(\frac{1}{2}\)\(\left(\frac{\text{dt}}{\text{dx}}\right)\)ci; m4=(id-dtli.rm).\(\left(\text{id}-\left(\frac{\text{dt}}{\text{dx}}\right)^{2}\text{li.ci} \right);\) m5=\(\frac{1}{2}\)\(\left(\frac{\text{dt}}{\text{dx}}\right)^{2}\)(id-dtli.rm).(li.ci); m6=-\(\frac{1}{2}\)\(\left(\frac{\text{dt}}{\text{dx}}\right)\)(id-dtli.rm).li; m8=Inverse[id-\(\left(\frac{\text{dt}}{\text{dx}}\right)^{2}\text{ci.}\text{li}].\left(\text{id}+\left(\frac{\text{dt}}{\text{dx}}\right)^{2}\text{ci.} \text{li}\right);\) m9=2\(\frac{\text{dt}}{\text{dx}}\)Inverse[id-\(\left(\frac{\text{dt}}{\text{dx}}\right)^{2}\text{ci.}\text{li}].ci;\) ml0=id=dtli.rm; ml1=2\(\frac{\text{dt}}{\text{dx}}\)(id-dtli.rm).Inverse[id-\(\left(\frac{\text{dt}}{\text{dx}}\right)^{2}\text{li.ci} ].li;\)ml2=(id-dtli.rm).Inverse[id-\(\left(\frac{\text{dt}}{\text{dx}}\right)^{2}\text{li.ci} ].\left(\text{id}+\left(\frac{\text{dt}}{\text{dx}}\right)^{2}\text{li.ci} \right);\) (* output main and 2 adjacent wires *) uout={0,0};uout1={0,0};uout2={0,0};
```

Static Initial Condition:

```
ListPlot[uin,PlotJoined-True, AxesLabel->("10"12sec","Ampl")];
```

Listing 1: The \(\text{Listing}\)

Input Pulse on the left side of the pigtail,two pulses of 12.5 nsec length and 12.5 nsec separation.

Calculate evolution in time and produce animation of the propagating pulses:

``` Timing[ Do[ {(* main loop, calculate line n+1 in u and i grid *) Do[{jpl= j+1; jml= j-1;  ul[[j]]= ml.u0[[j]]+  m2.(u0[[jpl]]+u0[[jml]])+m3.(i0[[jpl]]-i0[[jml]]);  i1[[j]]=m4.i0[[j]]+m5.(i0[[jpl]]+i0[[jml]])+  m6.(u0[[jpl]]-u0[[jml]]),{j,2,m-1}]; (* edges *) u1[[m]]=u0[[m-1]]+  m8.(u0[[m]]-u1[[m-1]])-m9.(i0[[m]]-i1[[m-1]]);  i1[[m]]=m10.i0[[m-1]]-ml.(u0[[m]]-u1[[m-1]])+  m12.(i0[[m]]-i1[[m-1]]);  u1[[1]]=u0[[2]]+m8.(u0[[1]]-u1[[2]])+  m9.(i0[[1]]-i1[[2]]);  i1[[1]]=m10.i0[[2]]+m11.(u0[[1]]-u1[[2]])+  m12.(i0[[1]]-i1[[2]]); (* static boundary conditions open: set i=0, short: set u=0 *) u1[[m]]=zri1[[m]]; (* termination right with z *) u1[[1]]=-z1i[[1]]; (* termination left with -z *) u1[[1,1]]=uin[[n]]; (* build output *) uout = Append[uout, u1[[m,1]]]; (* seen on diff line 1 after 1 m *) uoutl=Append[uoutl, u1[[m,2]]]; (* crosstalk on diff line 2 after 1 m *) uout2=Append[uout2, Max[Transpose[u1][[2]]]]; (* max ampl of crosstalk *) u0=u1;i0=i1; (* advance one step in time *) (* do a snapshot of the voltages *) If[Mod[n, pl]=0, {(* plot voltage wire 1 *)  pl =ListPlot[Transpose[u1][[1]],  PlotRange {(0,m), (-0.6,1.7)},  PlotJoined {True, DisplayFunction {} Identity};  (* plot current wire 1 *)  p2=ListPlot[Transpose[i1][[1]],  PlotRange {(0,m), (-0.015,0.015)},  PlotJoined {True, DisplayFunction {} Identity};  (* plot voltage wire 2 *)  p3=ListPlot[Transpose[u1][[2]],  PlotRange {(0,m), (-0.039,0.039)},  PlotJoined {True, DisplayFunction {} Identity};  Show[GraphicsArray[{(p1), (p2), (p3)}],  DisplayFunction {}DisplayFunction {}DisplayFunction {}DisplayFunction {}DisplayFunction {}DisplayFunction {} (* get rid of small numbers to  accelerate calculation *)  u0=Chop[u0];i0=Chop[i0];Print[n]]]),{n,nmax}]] ] Print["Fertig!"]This shows the voltage between line 1 and 2, sampled at the right end of the pigtail (1m), as it would appear on a scope - leading edge is to the left - :

ListPlot[uout, AxesLabel -> {"time [ps]", "Ampl"}]

Below is shown the corresponding crosstalk on lines 3 and 4, sampled at the right end of the pigtail, as it would appear on a scope:

ListPlot[uoutl, PlotRange + All, AxesLabel -> {"time [ps]", "Crosstalk"}]

In both'scope' pictures above the displayed pulses already contain a reflected part from the right end, where they are sampled. This is why - you see it clearly in the animation - the second pulse in the first picture is larger and has a lower baseline.

In the next plot we see the amplitude of the crosstalk signal as function of time during its motion from left to right - it is shown before it has reached the right end and is therefore not yet disturbed by reflection, because the simulated wires in this special run were more than 12 m long - as it rises from zero to its steady state value (horizontal unit is 1 ps):

Why might the crosstalk be increasing? For an explanation look at Fig. 9 (**Ref. 11**, p. 206) :

At each instant in time some portion of the main pulse is coupled to the adjacent wire, where it starts propagating to both ends. As the main pulse has one direction (here: to the right) and travels with the same speed as the crosstalk portions, everything that goes to the far end arrives at the same time, while the parts going to the left are distributed in time and see the near end only one after the other. This process continues until a likewise growing part of the crosstalk starts flowing back to the main wire and an equilibrium is reached.

Figure 9: Accumulation of far end crosstalk

[MISSING_PAGE_EMPTY:59]

One can do many more interesting experiments with this notebook. Let's look as a last thing for now at u/i on line 1 as function of position along the wire. The following plot displays voltage/current after the first reflection of the pulse at the right end. Before reflection we have \(u_{0}\) / \(i_{0}\) = \(Z_{0}\) = \(\sqrt{0.6/65}\) *1000 \(\Omega\) = \(96\) \(\Omega\). The line is terminated with \(Z_{x}\) = \(220\) \(\Omega\). After reflection there is a superposition of the original pulse with the returning component: u = \(u_{0}\) *(1+ (\(Z_{x}\) - \(Z_{0}\)) / (\(Z_{x}\) + \(Z_{0}\))), i = \(i_{0}\) *(1- (\(Z_{x}\) - \(Z_{0}\)) / (\(Z_{x}\) + \(Z_{0}\) )), so that u/i = \(Z_{x}\).

## Conclusion

Tools have been presented that allow the detailed analysis of crosstalk on coupled linear conductors within the time domain. They also let you determine the capacities and inductances of linear conductors of arbitrary shape. All you have to do is to adapt the contour and the height of the potential boundaries and run the code example. The resulting values may be entered into the corresponding matrices of the telegraph equations to simulate and watch pulse propagation.

A simple formula was derived that lets you calculate the _exact potential of a line charge in a rectangular box_ and hence the capacity of a wire inside a rectangular shield.

Crosstalk is a dynamic phenomenon. Although the coupling - capacitive and inductive - of the pigtail is surprisingly small, the amplitude of the crosstalk pulse grows considerably until it gets to an asymptotic value: In this case it reaches 2-3% after 1 m length and attains its equilibrium amplitude of well over 18% (even 30% if related to the damped pulse on line 1) after running about 13 m or 80 necs.

The ratio voltage/current is determined first by the impedance \(Z_{0}\), after the pulse has suffered reflection at the end of the conductor, the ratio changes to \(Z_{x}\), the value of the terminating resistor.

## References

* [1] Reisch: Elektronische Bauelemente, Springer, 1998
* [2] Unger: Elektromagnetische Wellean auf Lettimgen, Hüthig, 4. Auflage, 1996
* [3] Press et. al.: Numerical Recipes in Fortran, Cambridge University Press, Second Edition, 1992
* [4] Ganha,Vorothkov: Numerical Solutions for Partial Differential Equations, CRC Press, 1996
* [5] Simonyi: Theoretische Elektrotechnik, Barth, I. 0. Auflage, 1993
* [6] Jackson: Classical Electrodynamics, Wiley & Sons, Third Edition, 1998
* [7] Kupfrmuller, Kohn: The Metzentische Elektrotechnik und Elektronik, Springer, 15. Auflage, 2000
* [8] Wolfram: The _Mathematica_ Book, Wolfram Media, Inc., Fourth Edition, 1999
* [9] Wickham-Jones: _Mathematica_ Graphics, Springer, 1994
* [10] with help from D. _Zapier_, MPI fur Mathematik, Bonn
* [11] Johnson,Graham: High Speed Digital, Prentice Hall PTR, 1993
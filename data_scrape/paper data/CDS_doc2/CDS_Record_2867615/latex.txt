Clustering and Tracking in Dense Environments with the ATLAS Inner Tracker for the High-Luminosity LHC

The ATLAS Collaboration

###### Abstract

Dense hadronic environments encountered, for example, in the core of high-transverse-momentum jets, present specific challenges for the reconstruction of charged-particle trajectories (tracks) in the ATLAS inner tracking detectors, as they are characterised by a high density of ionising particles. The energy deposits (clusters) left by these particles in the silicon sensors are more likely to merge with increasing particle densities, especially in the innermost layers of the ATLAS silicon-pixel detectors. This has detrimental effects on both the track reconstruction efficiency and the precision with which the track parameters can be measured. The track reconstruction software for the current ATLAS Inner Detector (ID) relies on dedicated machine-learning based algorithms to amend these problems by identifying merged clusters and estimating the positions of the individual sub-clusters. The new Inner Tracker (ITk), which will replace the ID for the High-Luminosity LHC programme, features an improved granularity due to its smaller pixel sensor size, which is expected to reduce cluster merging rates in dense environments. In this note, a comprehensive study of the clustering and tracking performance in dense environments with a recent ITk layout is presented. Different quantities are studied to assess the effects of cluster merging at the cluster-, track-, and jet-level.

ATLAS, CMS, LHC, LHC, LHC, LHC

## 1 Introduction

The high-luminosity programme of the Large Hadron Collider [1] (High-Luminosity LHC, HL-LHC) is expected to start in 2029 with proton-proton collisions at a centre-of-mass energy of \(\sqrt{s}=14\) TeV and an instantaneous luminosity of up to \(7.5\cdot 10^{34}\) cm\({}^{-2}\) s\({}^{-1}\), a significant increase compared to the peak instantaneous luminosity of \(3\cdot 10^{34}\) cm\({}^{-2}\) s\({}^{-1}\) expected for the on-going LHC Run 3. Accordingly, the average number of inelastic proton-proton interactions per bunch crossing (_pile-up_) is expected to reach values as high as 200, compared to a value of \(\approx 30\) (\(\approx 40-50\)) during Run 2 (the ongoing Run 3).

An extensive upgrade programme of the ATLAS detector [2], the _Phase-II Upgrade_[3, 4, 5, 6, 7, 8, 9, 10], is in progress to prepare it for the challenging data-taking conditions at the HL-LHC. This will ensure the continued high performance of particle reconstruction and identification, which is crucial for the success of the ATLAS physics programme. A key part of the Phase-II Upgrade is the complete replacement of the current inner tracking detector system, the ATLAS Inner Detector [11], by a new, all-silicon tracking detector, the Inner Tracker (ITk), which will consist of a Pixel Detector [4] and a surrounding Strip Detector [5].

The highly efficient and accurate reconstruction of charged-particle trajectories (_tracks_) from the energy deposits (_clusters_) of charged particles within the ITk is essential for the reconstruction of all other physics objects and hence all physics analyses at the HL-LHC. Track reconstruction is particularly challenging in environments characterised by a high density of ionising particles. In these _dense environments_, the energy deposits left by different close-by particles in the same detector layer have a significant probability of overlapping, thus forming a single _merged_ cluster, an effect particularly pronounced in the innermost layers of the pixel detector. _Cluster merging_ affects both the track reconstruction efficiency and the precision with which the track parameters can be estimated. The loss of track reconstruction efficiency is largely due to the fact that track candidates are penalised in the track reconstruction chain for sharing clusters with other tracks in an effort to reduce the rate of tracks stemming from incorrect combinations of clusters (_fake tracks_). The degradation of the track parameter resolution is also largely due to the fact that the position of a merged cluster typically does not coincide with the position of any of the individual charged particles that passed through the cluster. A precise estimation of the track parameters is vital to for many applications, in particular to unambiguously associate tracks to vertices. This is of high relevance in both identifying tracks from concurrent proton-proton collisions (_pile-up tracks_) and in identifying the displaced decay vertices of \(b\)- and \(c\)-hadrons (heavy-flavour hadrons) [12, 13].

Dense environments most prominently occur in the cores of hadronic jets with high transverse momentum (\(p_{\rm T}\)). The reconstruction of these jets and the identification of heavy-flavour hadron decays within these jets is of key importance for the HL-LHC physics programme. A prominent example are searches for Higgs boson pair production, the observation of which is a key physics goal of the HL-LHC [14]. These searches strongly rely on the efficient identification of the dominant Higgs boson decay mode to a pair of \(b\)-quarks, which can be highly energetic and result in dense tracking environments [15]. The identification of \(b\)-quark initiated jets (\(b\)-jets) relies on the highly efficient and precise reconstruction of tracks and (secondary or tertiary) vertices in such environments. Dense environments also play an important role in measurements and searches involving highly-energetic hadronically decaying \(\tau\)-leptons [16, 17, 18] or top quarks [19, 20], and in general in any data analysis relying on high-\(p_{\rm T}\) (typically \(p_{\rm T}^{\rm jet}\gtrsim 500\) GeV) jets.

In the current ATLAS track reconstruction chain, machine learning algorithms are used to identify merged clusters [21, 22] and to evaluate the positions and related errors of the sub-clusters associated with the individual particles that have contributed to a merged cluster [23]. While the higher spatial resolution of the ITk compared to the current Inner Detector is expected to reduce the rate of cluster merging, theimportance of dense environments and the added complications arising from the higher levels of pile-up, which give rise to additional particle tracks, Clustering and Tracking in Dense Environments (CTIDE) has been studied and optimised in preparation for the HL-LHC operations.

The performance of CTIDE at the ITk has previously studied in the context of the ITk Pixel _Technical Design Report (TDR)_[4]. Since the TDR release, the ITk layout and the correspondig reconstruction software have evolved significantly. Tracking studies relying on the most recent ITk layout and software architecture have not included dense environments [24]. This note builds and extends upon these previous studies by focusing specifically on the performance of CTIDE with a recent ITk layout, with a particular focus on the Pixel Detector.

This note is organised as follows: In Section 2, the ITk detector layout and main features are described. In Section 3, an overview of track reconstruction in ATLAS is given, with a particular focus on clustering and tracking in dense environments. Section 4 contains a summary of the simulated data samples used for the studies presented in this note. In Section 5, the rate of track merging in the ITk is quantified, while in Section 6, the effects of cluster merging on the tracking performance are presented. Finally, Section 7 is dedicated to the rate of cluster merging for tracks inside of jets, followed by conclusions in Section 8.

## 2 The ATLAS Inner Tracker

The ATLAS Inner Tracker (ITk) is the new all-silicon tracking detector for the HL-LHC phase. Unlike the current Inner Detector (ID), which consists of a pixel detector, surrounded by a silicon microstrip tracker (SCT) and a transition radiation tracker (TRT), the ITk features two silicon-based detectors sub-systems: the Pixel Detector [4] and the surrounding Strip Detector [5]. A schematic layout of the ITk with the recent geometry version (23-00-03) is shown in Figure 1. The Pixel Detector consists of five flat barrel layers and multiple inclined and vertical ring-shaped end-cap disks and covers a pseudo-rapidity1 range of \(|\eta|<4\). The Strip Detector covers the pseudo-rapidity range of \(|\eta|<2.7\) and consists of four barrel layers and six end-cap disks, each layer featuring pairs of modules with strips at a small stereo-angle to improve the \(z\) (\(R\)) resolution in the barrel (end-cap). The strip modules consist of multiple rows of strips with a pitch of 75.5 \(\mu\)m in the barrel and ranging from 69 \(\mu\)m to 85 \(\mu\)m in the end-cap disks.

Footnote 1: ATLAS uses a right-handed coordinate system with its origin at the nominal interaction point (IP) in the centre of the detector and the z-axis along the beam pipe. The \(x\)-axis points from the IP to the centre of the LHC ring, and the \(y\)-axis points upwards. Cylindrical coordinates \((r,\phi)\) are used in the transverse plane, \(\phi\) being the azimuthal angle around the \(z\)-axis. The pseudorapidity is defined in terms of the polar angle \(\theta\) as \(\eta=-\ln\tan(\theta/2)\). Angular distance is defined as \(\Delta R=\sqrt{\Delta\eta^{2}+\Delta\phi^{2}}\).

This recent ITk layout differs from the initial layout described in the TDRs for the Pixel [4] and Strip [5] systems in various ways. The most significant changes are documented in Ref. [25]. They include a slight reduction in the total spatial extent of the ITk to accomodate the new high-granularity timing detector [9] and related layout changes, as well as a complete revision of the three outer layers of the pixel barrel system to allow for the use of quadruplet modules with 2x2 readout chips in the inclined section. The latest layout used in this note includes further changes compared to the layout described in Ref. [25]. The radius of the innermost pixel layer has been reduced from 39 to 34 mm and a \(25\times 100\)\(\mu\)m\({}^{2}\) pixel pitch is foreseen for the central part of this layer, while a pixel pitch of \(50\times 50\)\(\mu\)m\({}^{2}\) is used in the rest of the detector. These changes significantly improve the impact parameter resolutions of the reconstructed tracks [25] and are relevant for the performance of clustering and tracking in dense environments, which is studied here for the first time since it was produced for the TDR.

Two reference frames are used to express the position of a silicon cluster: a global and a local frame. The _global_ position of a cluster identifies its location with respect to the global ATLAS reference frame. The _local_ position of the cluster locates it on the specific detector module that the cluster is on. Local positions are expressed in terms of two coordinates:

* **local X:** in the direction of the track pending plane (\(r-\phi\) plane);
* **local Y:** along the z-axis for the barrel region and in radial direction for the end-cap region (locates the cluster in the \(\eta\) direction).

## 3 Track reconstruction and selection

A brief overview of track reconstruction in the ATLAS experiment is given in this section, with a particular emphasis on silicon tracking detectors and the role of merged silicon clusters. More details can be found in Ref. [26].

### Overview

Track reconstruction involves the following steps, which have been used with the current ATLAS ID during Runs 1, 2 and 3, and are expected to be used in a similar form, though with possible detector-specific optimisations, for the ITk.

1. **Formation of clusters and space points:** Signals in adjacent channels of the silicon detectors are combined into clusters which are interpreted as deposits left by individual charged particles. A

Figure 1: ITk geometry with a recent layout (geometry version 23-00-03) [24]. The red lines represent the Pixel Detector, while the blue lines represent the Strip Detector.

silicon cluster is a group of connected silicon elements (strips or pixels), presenting a signal over a reconstruction threshold. For each pixel, a _Time over Threshold_ (ToT) measurement is performed. For the ITk Pixel detector, the discriminator threshold is \(900e\) for the innermost layer and \(600e\) for all other layers. Clusters are then converted to 3D space-points, whose position, with a relative uncertainty, is determined by the signal in each channel, detector geometry and sensor pitch.
2. **Track seeding and finding:** Triplets of space-points are combined into _track seeds_. Track seeds are extended with additional space-points via a combinatorial Kalman Filter. This step yields a set of candidate tracks, including a number of fake track candidates reconstructed from incorrectly assigned space-points.
3. **Ambiguity solving and track fitting:** The ambiguity solving stage is one of the most relevant for tracking performance in dense hadronic environments. It rejects fake track candidates and resolves overlaps between multiple track candidates that share clusters. Track candidates receive a quality score based on simple measures of track quality, such as the number of clusters (_hits_) on the track, and are processed individually in descending score order. In the processing step, overlaps between tracks sharing clusters are resolved. Clusters can not be shared by more than two tracks unless they are identified as merged (see Section 3.2). Preference is given to tracks with higher track score when deciding to which tracks a shared cluster should be assigned. Furthermore, a track candidate is not allowed to contain more than two shared clusters. Further details on the treatment of shared clusters in the ambiguity solver can be found in Ref. [26]. Track candidates that pass the ambiguity solver undergo a high-resolution fitting procedure, based on a global \(\chi^{2}\) fit, to determine the final track parameters.

In the current detector, tracks are extended into the transition radiation tracker (TRT), which surrounds the silicon detector layers, before fitting. However, additional techniques making use of sub-detectors other than silicon trackers will not be discussed in this note.

### Merged-cluster and track classification

The penalisation of shared clusters at the ambiguity solver stage leads to a significant loss of tracking efficiency in dense environments if no additional algorithms to identify merged clusters are implemented. The identification of merged clusters via machine-learning methods [21, 22] allows tracks to share clusters without a penalty and without risking a significant increase in the rate of falsely identified tracks.

In the following simulation-based studies, clusters that are produced by more than one particle are referred to as _merged_. Tracks containing at least one merged cluster, either in the Pixel or Strip detectors, are also referred to as _merged_. Tracks are further classified based on whether they contain a merged cluster in the Pixel or Strip detectors. During event reconstruction, clusters can be classified based on the number of contributing particles and the number of tracks to which they belong. The following categories are introduced:

* _Merged_: a cluster classified as merged and used for the reconstruction of multiple tracks without penalty;
* _Shared_: a cluster not classified as merged, used for the reconstruction of multiple tracks with penalty.

In the current ID software, cluster classification is performed by means of a Neural Network (NN) taking, among other inputs, the ToT of each pixel in the cluster. The NN algorithm separates pixel clusters into three categories:

1. 1-particle cluster: only one contributing particle;
2. 2-particle cluster: two contributing particles;
3. Many-particle cluster: three or more contributing particles.

Clusters in classes 2 and 3 are classified as merged. In the current ID, cluster classification is only performed in the Pixel sub-detector, where ToT information is available. No reconstruction-level classification algorithm has been developed yet for the ITk. Instead, a truth-based NN emulation based on Run 2 performance is used. This algorithm identifies 1-particle clusters with perfect efficiency and 2/many-particle clusters with a custom efficiency \(\epsilon\). Throughout this note, \(\epsilon=0\) is used to assess the baseline CTIDE performance with the ITk without any particle-cluster classification. In Section 7.2, \(\epsilon=1\) is used for comparison to demonstrate the potential gain from implementing a perfect cluster classification algorithm for the ITk. No classification is made for strip clusters, following the track reconstruction approach for the current ID.

The track reconstruction software for LHC Run 3 relies on three Mixture Density Networks (MDNs) to determine the positions and related uncertainties of the sub-clusters of pixel clusters identified as 1-, 2-, or \(\geq 3\)-particle clusters, respectively [23]. These MDNs replace a NN-based approach that was used during LHC Run 2 and relied on nine NNs to separately determine the cluster positions and uncertainties [21]. No sub-cluster position and uncertainty determination are applied for merged clusters in the current ITk tracking software.

### Track selection

The baseline track collection studied in this note comprises tracks with \(p_{\mathrm{T}}>1\) GeV and \(|\eta|<4.0\). Additionally, tracks are required to pass the following set of _loose_ selection requirements on the number of pixel and strip hits, holes, dead sensors, and shared hits:

* \(N_{\mathrm{pixHits}}+N_{\mathrm{stripHits}}+N_{\mathrm{pixDead}}+N_{\mathrm{ stripDead}}\geq 7\)
* \(N_{\mathrm{pixShared}}+0.5\cdot N_{\mathrm{stripShared}}\leq 1\)
* \(N_{\mathrm{pixHoles}}+N_{\mathrm{stripHoles}}\leq 2\)
* \(N_{\mathrm{pixHoles}}\leq 1\)

A tighter requirement of track \(p_{\mathrm{T}}>10\) GeV is chosen for the studies in Sections 6 and 7, both for consistency with earlier studies of the CTIDE performance in the ID [27], thus allowing for a direct comparison of the results in Section 7 with those of Ref. [27], and to enhance the fraction of tracks with at least one merged cluster for the studies in Section 6. In the latter case, this choice also serves to avoid large biases in the comparison between the properties of tracks with and without merged clusters due to large differences in the track \(p_{\mathrm{T}}\) distributions. Residual biases due to remaining differences in the track \(p_{\mathrm{T}}\) distributions can be corrected by a track \(p_{\mathrm{T}}\) reweighting, as described in Section 6. It should be noted that, qualitatively, the findings of Section 6 have also been found to apply to tracks with \(p_{\mathrm{T}}>1\) GeV.

### Matching of tracks to jets

Hadronic jets are reconstructed from truth particles, excluding muons and neutrinos, in the Monte Carlo simulations using the anti-\(k_{t}\) algorithm [28] with radius parameter \(R=0.4\). They are required to have \(p_{T}>25\) and \(|\eta|<4.0\). Tracks are associated to jets based on their angular separation \(\Delta R(\mathrm{track},\mathrm{jet})\) from the jet axis. For a track to be matched to a jet, \(\Delta R(\mathrm{track},\mathrm{jet})<0.4\) is required.

## 4 Simulation

The ITk layout version 23-00-03, described in Section 2, has been simulated [29] using Geant4[30]. Details of the simulation are documented in Ref. [24].

The following physics processes are considered in the CTIDE performance studies presented in this document:

* \(t\bar{t}\), \(\left\langle\mu\right\rangle=0\): Standard Model production of \(t\bar{t}\) pairs. No pile-up is simulated in this sample.
* \(t\bar{t}\), \(\left\langle\mu\right\rangle=200\): Standard Model production of \(t\bar{t}\) pairs. An average of 200 pile-up collisions per bunch crossing are simulated in this sample. The effect of pile-up on cluster and track merging can be studied by comparing the two \(t\bar{t}\) samples.
* \(Z^{\prime}\to\mathrm{had}\): Production of a heavy vector boson \(Z^{\prime}\) with mass \(m_{Z^{\prime}}=4\) decaying with roughly equal probabilities into \(b\)-, \(c\)-, and light-quark jets. The sample is constructed so that the resulting jet \(p_{\mathrm{T}}\) spectrum is roughly flat up to 5. This sample is especially suited for studying dense hadronic environments, as it is enriched in high-\(p_{\mathrm{T}}\) jets. Its average jet \(p_{\mathrm{T}}\) is 640, compared to 31 (32) for the \(t\bar{t}\)\(\left\langle\mu\right\rangle=0\) (\(t\bar{t}\)\(\left\langle\mu\right\rangle=200\)) samples. No pile-up is simulated in this sample.

All processes were simulated assuming \(pp\) collision events at a centre-of-mass energy \(\sqrt{s}=14\). The \(t\bar{t}\) events were generated using the Powheg Box[31, 32, 33] v2 generator at next-to-leading order in the strong coupling with the NNPDF3.0NLO [34] set of parton distribution functions (PDFs) and the \(h_{\mathrm{damp}}\) parameter set to 1.5 times the mass of the top quark [35], with \(m_{\mathrm{top}}=172.5\). The parton shower, hadronisation, and the underlying event were simulated using Pythia v8.2.40.4 [36] with the A14 set of tuned parameters. The \(Z^{\prime}\) sample was generated using Pythia 8.2.40.4 with the same tune and PDF set. EvtGen 1.7.0 [37] was used to model the decays of \(b\)- and \(c\)-hadrons. Minimum-bias interactions were generated using Pythia v8.244 with the A3 set of tuned parameters [38] and overlaid on the \(t\bar{t}\) events to model the effect of pileup. Particles were passed through the ATLAS detector simulation [29] based on Geant4.

In Figure 2, the distributions of the jet transverse momentum \(p_{\mathrm{T}}\) and absolute pseudorapidity \(|\eta|\), all normalised to unity, are shown. The jet \(p_{\mathrm{T}}\) spectrum for the \(Z^{\prime}\to\mathrm{had}\) sample is roughly flat by construction, as described above, while the corresponding distributions for the \(t\bar{t}\) samples decrease with increasing jet \(p_{\mathrm{T}}\). Differences are also visible in the jet \(|\eta|\) spectra with the \(Z^{\prime}\to\mathrm{had}\) process, being an \(s\)-channel process, producing more central jets compared to \(t\bar{t}\) production, which is \(t\)-channel dominated.

## 5 Rate of cluster merging

The rate of cluster merging is studied in different sections (Barrel, Inclined, Rings) of the ITk by defining a _cluster merging_ rate per section:

\[\text{Cluster merging (section S)}=\frac{\text{\# merged clusters in section S}}{\text{\# clusters in section S}} \tag{1}\]

Only clusters made up of more than one pixel or strip are considered, as only these can be potentially identified as merged by dedicated classification algorithms. Additionally, tracks are required to be associated with a truth particle emanating from the hard-scatter vertex in order to remove pile-up tracks in the SM \(t\bar{t}\ \langle\mu\rangle=200\) sample. This mimics reconstruction-level requirements applied in most physics analyses to reject pile-up tracks based on, for example, impact parameters relative to the selected primary vertex.

Tables 1 and 2 summarize the values of the cluster merging rate in different sections of the detector and for different samples. Cluster merging is frequent in both the Pixel and Strip detectors, and pile-up significantly increases merging, up to a factor 2 in the Pixel detector and 3 in the Strip detector. The rate of cluster merging is notably higher for \(Z^{\prime}\) compared to \(t\bar{t}\) events due to the higher fraction of high-\(p_{T}\) jets in the former sample. Furthermore, in \(Z^{\prime}\) events, higher cluster merging rates are found in the Barrel compared to the Inclined and Ring sections, while for \(t\bar{t}\) events, the highest rates are found in the Ring sections. This is due to the fact that \(t\bar{t}\) production is \(t\)-channel dominated, resulting in a higher fraction of jets with larger pseudorapidities, and hence a higher probability for high track densities, compared to \(Z^{\prime}\) events, as pointed out in Section 4.

## 6 Effects of cluster merging

### Cluster-truth residuals

The tracking performance with regard to the accuracy at which the position of a particle crossing a detector module can be determined is quantified via the _residuals_ on the cluster positions. Residuals are defined as the difference between the reconstructed position of the cluster and the true position of the energy deposit(s) of the particle(s) that contributed to the cluster, as obtained from Geant4:

\[\text{Cluster-Truth Residual}=x_{\text{cluster}}-x_{\text{G4}}, \tag{2}\]

where \(x_{\text{cluster}}\) is the reconstructed position of the cluster and \(x_{\text{G4}}\) is the position of the particle based upon the Geant4 energy deposits. The latter is defined as the average between the starting and ending position of the sensor crossing of the Geant4 particle. The resolution is sensitive to cluster merging as the position of a merged cluster usually does not correspond to any of the true particle positions. It is also sensitive to the sensor geometry in a given region of the detector. Therefore, the cluster-truth residuals for merged and non-merged clusters are obtained separately for different regions (Barrel, Inclined, Ring) of the Pixel Detector and for the local X and Y positions. A correction is applied to the merged clusters sample to eliminate possible resoluton biases arising from the fact that merged clusters tend to be associated with higher-\(p_{\text{T}}\) tracks. This is achieved by reweighting the merged-clusters sample by the ratio of the track \(p_{\text{T}}\) distributions of merged and non-merged clusters at a given value of track \(p_{\text{T}}\).

The cluster-truth residuals for merged and non-merged clusters in the different detector regions are shown in Figure 3. The standard deviations of these distributions are summarised in Tables 3 and 4 for the X- and Y-positions, respectively. Cluster merging consistently affects these distributions, worsening the cluster position resolution. This effect is consistent across all sections of the Pixel Detector.

\begin{table}
\begin{tabular}{l l l l} \hline \hline Process & Barrel & Inclined & Ring \\ \hline \(t\bar{t}\ \langle\mu\rangle=0\) & 0.3\% & 0.2\% & 0.8\% \\ \(t\bar{t}\ \langle\mu\rangle=200\) & 0.6\% & 0.3\% & 1.1\% \\ \(Z^{\prime}\rightarrow\text{had}\) & 3.6\% & 1.9\% & 1.5\% \\ \hline \hline \end{tabular}
\end{table}
Table 1: Cluster merging rate in different sections of the pixel detector. Only clusters consisting of more than one pixel are considered.

\begin{table}
\begin{tabular}{l l l} \hline \hline Process & Barrel & Endcap \\ \hline \(t\bar{t}\ \langle\mu\rangle=0\) & 0.8\% & 1.9\% \\ \(t\bar{t}\ \langle\mu\rangle=200\) & 2.7\% & 6.7\% \\ \(Z^{\prime}\rightarrow\text{had}\) & 16.2\% & 16.9\% \\ \hline \hline \end{tabular}
\end{table}
Table 2: Cluster merging rate in different sections of the strip detector. Only clusters consisting of more than one strip are considered.

Figure 3: Residuals on the local X and local Y positions of clusters in the Pixel Detector for the Barrel (top row), Inclined (middle row), and Ring (bottom row) sections in \(Z^{\prime}\rightarrow\text{had events}\).

### Track-cluster residuals

A different type of residual, calculated from reconstruction-level information only, can be defined as the distance between a track position on a give detector layer and the position of its associated cluster on that same layer:

\[\text{Track-Cluster Residual}=x_{\text{track}}-x_{\text{cluster}} \tag{3}\]

These _track-cluster residuals_ are a measure of the quality of the track fit on a given layer. It should be noted that they are evaluated for the final track fit that includes the cluster in question and hence represents a _biased_ residual. As in the previous section, a reweighting correction is applied to the merged-clusters sample to eliminate resoluton biases arising from the fact that merged clusters tend to be associated with higher-\(p_{\text{T}}\) tracks.

The hit residual distributions for clusters in the Pixel Detector are shown in Figure 4. The residuals are shown separately for merged and non-merged clusters and for 2-, 3-, and \(\geq\)4-pixel-wide clusters, where the size is evaluated in the coordinate of the residual. In Tables 5 and 6, the standard deviations of the aforementioned distributions are summarised. The cluster size is strongly correlated with the number of particles that have contributed to a given cluster. It is therefore customary to assess the impact of cluster merging as a function of cluster size when assessing the performance of algorithms that are used to identify the positions and errors of the different particles contributing to a merged cluster [21]. As shown, cluster merging consistently increases the width of the hit residuals distributions for all cluster sizes, implying a reduced quality of tracking due to merging.

\begin{table}
\begin{tabular}{l c c} \hline \hline Region & Not merged & Merged \\ \hline Barrel & 0.011 mm & 0.046 mm \\ Inclined & 0.010 mm & 0.030 mm \\ Ring & 0.009 mm & 0.031 mm \\ \hline \hline \end{tabular}
\end{table}
Table 4: Widths of the distributions of residuals on the local Y positions of clusters in the Pixel Detector that consist of at least two pixels in \(Z^{\prime}\rightarrow\text{had}\) events.

\begin{table}
\begin{tabular}{l c c} \hline \hline Cluster width & Not merged & Merged \\ \hline
2 & 0.015 mm & 0.030 mm \\
3 & 0.016 mm & 0.034 mm \\ \(\geq\)4 & 0.020 mm & 0.042 mm \\ \hline \hline \end{tabular}
\end{table}
Table 5: Width of the distributions of hit residuals in the Pixel Detector in the local X-coordinate in \(Z^{\prime}\rightarrow\text{had}\) events.

\begin{table}
\begin{tabular}{l l l} \hline \hline Cluster width & Not merged & Merged \\ \hline
2 & 0.021 mm & 0.048 mm \\
3 & 0.035 mm & 0.057 mm \\ \(\geq\)4 & 0.046 mm & 0.074 mm \\ \hline \hline \end{tabular}
\end{table}
Table 6: Widths of the distributions of hit residuals in the Pixel Detector in the local Y-coordinate in \(Z^{\prime}\rightarrow\) had events.

Figure 4: Track-cluster residuals in the local X and local Y directions for the Pixel Detector in \(Z^{\prime}\rightarrow\) had events. Plots are divided based on the size of the clusters in the local X direction.

### Effect of merging on track parameters

Track parameters are quantities describing global properties of tracks and are obtained from the final track fit. They are typically estimated at the _perigee_ of the track, i.e. the point on the track where the projection of the track onto the \(x\)-\(y\) plane is at minimum distance from the origin. In this note, the origin is taken as the beamspot. The following parameters are commonly used to describe a track:

* \(\phi\) and \(\theta\): Angular coordinates of the track at the perigee.
* \(q/p_{T}\): Ratio between the charge associated to the track and its transverse momentum.
* \(d_{0}\) and \(z_{0}\): Coordinates of the point of closest approach to the reference point, referred to as _impact parameters (IPs)_. The IP in the orthogonal plane with respect to the beam line (_transverse IP_) is referred to as \(d_{0}\), while the IP parallel to the beam line (_longitudinal IP_) is called \(z_{0}\). The transverse IP in particular plays a significant role in the identification of heavy-flavour jets, while the longitudinal impact parameter is also used to discriminate between tracks from the hard-scatter vertex and pile-up tracks.

The quality of the estimate of a track parameter \(P\) can be studied via the pull:

\[\mathrm{Pull}=\frac{P-P^{\mathrm{truth}}}{\sigma(P)} \tag{4}\]

where \(P^{\mathrm{truth}}\) is the value of the parameter \(P\) for the truth particle associated to the track, and \(\sigma(P)\) is the uncertainty on the track parameter estimation. A Gaussian shaped pull distribution with a width of one and mean of zero indicates a good quality of the parameter estimation. A width smaller than one indicates that the error on the track parameter is potentially overestimated, while a deviation of the mean from zero indicates a bias in the track parameter estimation.

The impact of merged clusters upon the \(\theta\), \(\phi\), and \(q/p_{T}\) tracking parameters is studied in the \(Z^{\prime}\) sample first. Given the importance of the \(d_{0}\) and \(z_{0}\) tracking parameters for flavour tagging, and their potential sensitivity to pile-up, this is followed by more detailed studies of the impact of merged clusters upon them in the \(Z^{\prime}\) as well as the \(t\bar{t}\ \langle\mu\rangle=0\) and \(t\bar{t}\ \langle\mu\rangle=200\) samples.

In Figure 5, the distributions of the residuals and pulls on the track parameters \(\theta\), \(\phi\), and \(q/p_{T}\) are shown, separately for tracks without any merged clusters and with at least one merged cluster in the pixel detector. The distributions for tracks containing merged clusters are reweighted to obtain the same track \(p_{T}\) spectrum as tracks not containing merged clusters. This is done for all the figures in this section, in order to disentangle merging effects from track \(p_{T}\) effects. The width of the residual and pull distributions is stated in Tables 7 and 8. It is evaluated via an iterative procedure, comprising the following steps:

1. Evaluate mean \(\mu\) and standard deviation \(\sigma\) of the distribution.
2. Restrict the distribution to the interval \([\mu-3\sigma,\mu+3\sigma]\).
3. Go to point 1 and repeat until the range remains stable, i.e. does not change between two consecutive iterations.

Track merging notably worsens the quality of track parameter estimation for the track parameters \(\theta\), \(\phi\), and \(q/p_{T}\).

In Figures 6 and 7, the distributions of the residuals and pulls on the track impact parameters \(d_{0}\) and \(z_{0}\), respectively, are shown separately for tracks without any merged clusters and with at least one mergedFigure 5: Residuals (left) and pulls (right) on track \(\theta\) (upper row), \(\phi\) (middle row), \(q/p_{\mathrm{T}}\) (bottom row) in \(Z^{\prime}\rightarrow\) had events.

cluster in the pixel detector. The widths of the distributions, calculated with the iterative procedure described above, are summarised in Tables 9 to 12. Track merging significantly worsens the quality of the impact parameter estimation for all the considered processes. Pile-up effects additionally broaden the residual distributions for tracks with merged clusters as they can lead to additional energy deposits unrelated to the tracks from the hard-scattering process. This effect is not visible in the pull distributions for \(d_{0}\) and \(z_{0}\), which are found to be narrower for the \(t\bar{t}\)\(\left<\mu\right>=0\) compared to the \(t\bar{t}\)\(\left<\mu\right>=200\) samples. This is an indication that the uncertainties on these track parameters also increase in the presence of pile-up, as can be reasonably expected, leading to on average smaller pulls.

\begin{table}
\begin{tabular}{l c c} \hline \hline Residual on & Not merged & Merged \\ \hline \(\theta\)\(\left(\times 10^{3}\right)\) & 0.150 \(\pm\) 0.001 & 0.190 \(\pm\) 0.003 \\ \(\phi\)\(\left(\times 10^{3}\right)\) & 0.188 \(\pm\) 0.002 & 0.305 \(\pm\) 0.006 \\ \(q/p_{\mathrm{T}}\)\(\left(\times 10^{3}\mathrm{~{}GeV}^{-1}\right)\) & 0.96 \(\pm\) 0.01 & 1.06 \(\pm\) 0.02 \\ \hline \hline \end{tabular}
\end{table}
Table 7: Width of the residual distributions for the track parameters \(\theta\), \(\phi\), \(q/p_{\mathrm{T}}\) in \(Z^{\prime}\rightarrow\mathrm{had}\) events.

\begin{table}
\begin{tabular}{l c c} \hline \hline Pull & Not merged & Merged \\ \hline \(\theta\) & 1.07 \(\pm\) 0.01 & 1.57 \(\pm\) 0.03 \\ \(\phi\) & 1.25 \(\pm\) 0.01 & 3.46 \(\pm\) 0.06 \\ \(q/p_{\mathrm{T}}\) & 1.14 \(\pm\) 0.01 & 1.69 \(\pm\) 0.03 \\ \hline \hline \end{tabular}
\end{table}
Table 8: Width of the pull distributions for the track parameters \(\theta\), \(\phi\), \(q/p_{\mathrm{T}}\) in \(Z^{\prime}\rightarrow\mathrm{had}\) events.

Figure 6: Residuals (left) and pulls (right) on track \(d_{0}\) in \(t\bar{t}\)\(\left\langle\mu\right\rangle=0\), \(t\bar{t}\)\(\left\langle\mu\right\rangle=200\), and \(Z^{\prime}\to\) had events.

Figure 7: Residuals (left) and pulls (right) on track \(z_{0}\) in \(t\bar{t}\)\(\left<\mu\right>=0\), \(t\bar{t}\)\(\left<\mu\right>=200\), and \(Z^{\prime}\rightarrow\) had events.

\begin{table}
\begin{tabular}{l c c} \hline Process & Not merged & Merged \\ \hline \(t\bar{t}\ \langle\mu\rangle=0\) & 12.4 \(\pm\) 0.1 & 34 \(\pm\) 2 \\ \(t\bar{t}\ \langle\mu\rangle=200\) & 12.3 \(\pm\) 0.1 & 39 \(\pm\) 2 \\ \(Z^{\prime}\rightarrow\) had & 9.57 \(\pm\) 0.08 & 33.4 \(\pm\) 0.6 \\ \hline \end{tabular}
\end{table}
Table 10: Width of the pull distributions for the track parameter \(d_{0}\) in \(t\bar{t}\ \langle\mu\rangle=0\), \(t\bar{t}\ \langle\mu\rangle=200\), and \(Z^{\prime}\rightarrow\) had events.

\begin{table}
\begin{tabular}{l c c} \hline Process & Not merged & Merged \\ \hline \(t\bar{t}\ \langle\mu\rangle=0\) & 25.0 \(\pm\) 0.3 & 45 \(\pm\) 2 \\ \(t\bar{t}\ \langle\mu\rangle=200\) & 25.7 \(\pm\) 0.3 & 51 \(\pm\) 2 \\ \(Z^{\prime}\rightarrow\) had & 19.3 \(\pm\) 0.2 & 37.8 \(\pm\) 0.7 \\ \hline \end{tabular}
\end{table}
Table 11: Width of the residual distributions for the track parameter \(z_{0}\) in \(t\bar{t}\ \langle\mu\rangle=0\), \(t\bar{t}\ \langle\mu\rangle=200\), and \(Z^{\prime}\rightarrow\) had events.

\begin{table}
\begin{tabular}{l c c} \hline Process & Not merged & Merged \\ \hline \(t\bar{t}\ \langle\mu\rangle=0\) & 1.35 \(\pm\) 0.01 & 2.2 \(\pm\) 0.1 \\ \(t\bar{t}\ \langle\mu\rangle=200\) & 1.32 \(\pm\) 0.01 & 1.92 \(\pm\) 0.09 \\ \(Z^{\prime}\rightarrow\) had & 1.15 \(\pm\) 0.01 & 3.43 \(\pm\) 0.06 \\ \hline \end{tabular}
\end{table}
Table 10: Width of the pull distributions for the track parameter \(d_{0}\) in \(t\bar{t}\ \langle\mu\rangle=0\), \(t\bar{t}\ \langle\mu\rangle=200\), and \(Z^{\prime}\rightarrow\) had events.

\begin{table}
\begin{tabular}{l c c} \hline Process & Not merged & Merged \\ \hline \(t\bar{t}\ \langle\mu\rangle=0\) & 25.0 \(\pm\) 0.3 & 45 \(\pm\) 2 \\ \(t\bar{t}\ \langle\mu\rangle=200\) & 25.7 \(\pm\) 0.3 & 51 \(\pm\) 2 \\ \(Z^{\prime}\rightarrow\) had & 19.3 \(\pm\) 0.2 & 37.8 \(\pm\) 0.7 \\ \hline \end{tabular}
\end{table}
Table 12: Width of the pull distributions for the track parameter \(z_{0}\) in \(t\bar{t}\ \langle\mu\rangle=0\), \(t\bar{t}\ \langle\mu\rangle=200\), and \(Z^{\prime}\rightarrow\) had events.

[MISSING_PAGE_FAIL:20]

increases not only in the center of the jet, but also with increasing jet \(p_{\mathrm{T}}\), due to the increase in track density in both cases. The rate of cluster merging is highest in the innermost layer of the pixel detector.

Figure 10: Number of pixel hits per track in the innermost layer of the pixel detector, as a function of (a) the \(\Delta R\) between the track and the center of the jet and (b) the \(p_{\mathrm{T}}\) of the jet, obtained in \(Z^{\prime}\rightarrow\mathrm{had}\) events.

Figure 9: Number of pixel hits per track, as a function of (a) the \(\Delta R\) between the track and the center of the jet and (b) the \(p_{\mathrm{T}}\) of the jet, obtained in \(Z^{\prime}\rightarrow\mathrm{had}\) events.

Figure 11: Number of all pixel hits per track in the next-to-innermost layer of the pixel detector, as a function of (a) the distance \(\Delta R\) between the track and the center of the jet and (b) the \(p_{\mathrm{T}}\) of the jet, obtained in \(Z^{\prime}\rightarrow\mathrm{had}\) events.

Figure 12: Number of strip hits per track, as a function of (a) the \(\Delta R\) between the track and the center of the jet and (b) the \(p_{\mathrm{T}}\) of the jet, obtained in \(Z^{\prime}\rightarrow\mathrm{had}\) events.

Figure 14: Fraction of shared pixel hits per track in the innermost layer of the pixel detector, as a function of (a) the \(\Delta R\) between the track and the center of the jet and (b) the \(p_{\mathrm{T}}\) of the jet, obtained in \(Z^{\prime}\to\mathrm{had}\) events.

Figure 13: Fraction of pixel shared hits per track, as a function of (a) the \(\Delta R\) between the track and the center of the jet and (b) the \(p_{\mathrm{T}}\) of the jet, obtained in \(Z^{\prime}\to\mathrm{had}\) events.

Figure 15: Fraction of shared strip hits per track, as a function of (a) the \(\Delta R\) between the track and the center of the jet and (b) the \(p_{\mathrm{T}}\) of the jet, obtained in \(Z^{\prime}\to\) had events.

### Tracking efficiency

An important metric to estimate the performance of track reconstruction is the tracking efficiency, i.e. the fraction of all charged particles that are successfully reconstructed as a track. Inefficiencies in track reconstruction can arise due to various reasons. First, interactions with the detector material, such as multiple scatterings, can lead to energy losses or changes in the direction of a particle track. This can result in poor-quality track candidates that do not pass the quality requirements in the track selection stage of the ambiguity solver. Notably, this effect does not depend on the local density of charged particles and is found to be more relevant at low \(p_{\mathrm{T}}\) due to the higher probability of multiple scattering and at larger \(\eta\) due to the higher material budget. Second, in dense environments track candidates can be penalised at the ambiguity solver stage for sharing too many hits with close-by track candidates (Section 3). Only truth particles with \(p_{\mathrm{T}}>10\) GeV and central jets (\(|\eta|<1.2\)) are considered to minimise the first set of contributions to the track reconstruction inefficiency summarised above, which are unrelated to the local particle density. In Figure 16, the efficiency for charged particles to be reconstructed inside a jet is shown as a function of the jet \(p_{\mathrm{T}}\), separately for all tracks inside the jet and for tracks in the core of the jet. A reduction in tracking efficiency of roughly 8% is observed when the jet pT increases from 500 to 2500 GeV.

The effect of introducing an algorithm to identify merged clusters at the ambiguity solving stage is shown in Figure 17, where the tracking efficiency is compared for tracks in the core of jets as a function of jet \(p_{\mathrm{T}}\) between the baseline scenario (no classification of merged clusters) and a scenario with perfect classification of merged clusters. In the case with perfect classification of merged clusters, the tracking efficiency loss at a jet pT of 2500 GeV compared to 500 GeV is reduced to around 4% compared to the 8% reduction observed for the case without merged-cluster classification. This comparison demonstrates the benefit of implementing a cluster classification algorithm, similar to the NN-based classifier used in the current ID, for ITk tracking. It also shows that even with an optimally performing identification algorithm, a loss of tracking efficiency is still observed in the cores of high-\(p_{\mathrm{T}}\) jets. This loss is thought to arise from inefficiencies at the track seeding stage that are not addressed by a cluster classification algorithm at the later ambiguity solver stage. The track reconstruction efficiency as a function of jet \(p_{\mathrm{T}}\) in the core of jets and inclusive jet has previously been studied for the current ID, as documented, for example in Fig. 1 of Ref. [27]. A roughly 20% degradation of the tracking efficiency in the jet core is observed for jet \(p_{\mathrm{T}}\) between 500 and 2500 GeV. It should be noted that this efficiency degradation is observed for ID track reconstruction including the use of NNs to identify merged clusters and of MDNs to obtain the sub-cluster positions and errors. The

Figure 16: Tracking efficiency for tracks inside jets as a function of jet \(p_{\mathrm{T}}\) in \(Z^{\prime}\rightarrow\mathrm{had}\) events.

comparison with the equivalent value of 8% obtained for the ITk above demonstrates the improvements in tracking efficiency in dense environments due to the higher granularity of the ITk Pixel detector compared to the current ID Pixel system.

## 8 Conclusions

In this note, the expected performance of clustering and tracking in dense environments is studied for the recent ITk layout 23-00-03. Cluster merging is relevant in all sections of the detector, and the high level of pile-up expected for LHC Run 4 will further increase the rate. Cluster merging is especially relevant in the core of jets, and notably with increasing \(p_{\mathrm{T}}\) of the jets. This leads to losses of hits in the Pixel Detector for tracks in high-\(p_{\mathrm{T}}\) jets as well as a reduction of the overall tracking reconstruction efficiency in the core of high-\(p_{\mathrm{T}}\) jets, by up to 8% for jet transverse momenta of 2500 GeV compared to 500 GeV if no algorithm to identify merged clusters is used. Studies relying on a perfect, truth-based cluster identification approach indicate that a merged-cluster identification algorithm, similar to the NN-based algorithm used in the current ID, can reduce the tracking losses significantly. Cluster merging is also found to degrade the track residuals as well as the track parameter resolution, in particular that of the transverse impact parameter \(d_{0}\), which plays a significant role in flavour tagging. The \(d_{0}\) pull resolution, for example, worsens by a factor of three even for tracks containing a single merged cluster, compared to tracks with no merged clusters. These studies show that, despite the superior spatial granularity of the ITk compared to the current ID, cluster merging in dense environments still adversely affects the tracking performance. Given the importance of clustering and tracking in dense environments for the many physics analyses relying on high-\(p_{\mathrm{T}}\) jet reconstruction and flavour-identification, further studies into methods to mitigate the adverse effects of cluster merging, for example via dedicated algorithms to identify merged clusters, are needed for the ITk.

Figure 17: Tracking efficiency for tracks in the core of jets as a function of jet \(p_{\mathrm{T}}\) in \(Z^{\prime}\to\mathrm{had}\) events, comparing a reconstruction scenario with no classification of merged clusters, with a scenario with perfect classification of merged clusters.

## References

* [1] L. Evans and P. Bryant, _LHC Machine_, JINST **3** (2008) S08001 (cit. on p. 2).
* [2] ATLAS Collaboration, _The ATLAS Experiment at the CERN Large Hadron Collider_, JINST **3** (2008) S08003 (cit. on p. 2).
* [3] ATLAS Collaboration, _ATLAS Phase-II Upgrade Scoping Document_, CERN-LHCC-2015-020, LHCC-G-166, 2015, url: [https://cds.cern.ch/record/2055248](https://cds.cern.ch/record/2055248) (cit. on p. 2).
* [4] ATLAS Collaboration, _ATLAS Inner Tracker Pixel Detector: Technical Design Report_, ATLAS-TDR-030; CERN-LHCC-2017-021, 2017, url: [https://cds.cern.ch/record/2285585](https://cds.cern.ch/record/2285585) (cit. on pp. 2, 3).
* [5] ATLAS Collaboration, _ATLAS Inner Tracker Strip Detector: Technical Design Report_, ATLAS-TDR-025; CERN-LHCC-2017-005, 2017, url: [https://cds.cern.ch/record/2257755](https://cds.cern.ch/record/2257755) (cit. on pp. 2, 3).
* [6] ATLAS Collaboration, _ATLAS LAr Calorimeter Phase-II Upgrade: Technical Design Report_, ATLAS-TDR-027; CERN-LHCC-2017-018, 2017, url: [https://cds.cern.ch/record/2285582](https://cds.cern.ch/record/2285582) (cit. on p. 2).
* [7] ATLAS Collaboration, _ATLAS Tile Calorimeter Phase-II Upgrade: Technical Design Report_, ATLAS-TDR-028; CERN-LHCC-2017-019, 2017, url: [https://cds.cern.ch/record/2285583](https://cds.cern.ch/record/2285583) (cit. on p. 2).
* [8] ATLAS Collaboration, _ATLAS Muon Spectrometer Phase-II Upgrade: Technical Design Report_, ATLAS-TDR-026; CERN-LHCC-2017-017, 2017, url: [https://cds.cern.ch/record/2285580](https://cds.cern.ch/record/2285580) (cit. on p. 2).
* [9] ATLAS Collaboration, _A High-Granularity Timing Detector for the ATLAS Phase-II Upgrade: Technical Design Report_, ATLAS-TDR-031; CERN-LHCC-2020-007, 2020, url: [https://cds.cern.ch/record/2719855](https://cds.cern.ch/record/2719855) (cit. on pp. 2, 3).
* [10] ATLAS Collaboration, _ATLAS TDAQ Phase-II Upgrade: Technical Design Report_, ATLAS-TDR-029; CERN-LHCC-2017-020, 2017, url: [https://cds.cern.ch/record/2285584](https://cds.cern.ch/record/2285584) (cit. on p. 2).
* [11] ATLAS Collaboration, _ATLAS Inner Detector: Technical Design Report, Volume 1_, ATLAS-TDR-4; CERN-LHCC-97-016, 1997, url: [https://cds.cern.ch/record/331063](https://cds.cern.ch/record/331063) (cit. on p. 2).
* [12] ATLAS Collaboration, _ATLAS \(b\)-jet identification performance and efficiency measurement with \(t\bar{t}\) events in \(pp\) collisions at \(\sqrt{s}=13\) TeV_, Eur. Phys. J. C **79** (2019) 970, arXiv: 1907.05120 [hep-ex] (cit. on p. 2).
* [13] ATLAS Collaboration, _Graph Neural Network Jet Flavour Tagging with the ATLAS Detector_, ATL-PHYS-PUB-2022-027, 2022, url: [https://cds.cern.ch/record/2811135](https://cds.cern.ch/record/2811135) (cit. on p. 2).
* [14] ATLAS Collaboration, _Projected sensitivity of Higgs boson pair production combining the \(b\bar{b}\gamma\gamma\) and \(b\bar{b}\tau^{+}\tau^{-}\) final states with the ATLAS detector at the HL-LHC_, ATL-PHYS-PUB-2022-005, 2022, url: [https://cds.cern.ch/record/2802127](https://cds.cern.ch/record/2802127) (cit. on p. 2).
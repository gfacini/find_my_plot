Data Format of the RPC Detector of the Muon System

**Authors : G. Aielli, A. Aloisio, P. Camarri, R. Cardarelli, G. Carlino, A. Di Ciaccio, F. Conventi, A. Di Mattia, A. Di Simone, L. Luminari, A. Nisati, F. C. Pastore, R. Santonico, R. Vari, S. Veneziano Keywords : On-line, Trigger, LVL1, RPC,HLT, Muon,bytesream**

_Abstract_

This note presents the RPC data format that is used to collect the Resistive Plate Chamber (RPC) data of the Muon Spectrometer. It covers the data format from the Coincidence Matrix Asic to the input of the RPC Read Out Driver (ROD).

NoteNumber : ATL-MUON-2003-Version : 1.1 Date : 24-06-2003Reference :

## 1 Introduction

**2 The barrel Level-1 muon trigger system**

**3 The RPC data format**

### The Read-Out scheme

#### The CM fragment

#### The Pad fragment

#### The RX fragment

## 1 Introduction

This note presents the RPC data format that is used by the readout system of this detector. The data structure reflects the architecture of the barrel LVL1 muon trigger [1] system that is indeed based on RPCs. Information on the geometry of the RPC system is availble in [2].

The RPCs are strip detectors with time resolution \(\sigma_{\mathrm{t}}\)=1.5 n; the typical strip size is 3 cm. The trigger is based on three stations. Two stations are used for low-pT triggers, while the third station is used in addition for high-pT triggers. Each station is composed of two detector planes and each detector plane is read out in two orthogonal projections, \(\eta\) and \(\phi\). The RPC system is important also for high-level trigger algorithms and offline muon reconstruction program because it provides the measurement of the second coordinate of muon trajectories.

## 2 The barrel Level-1 Muon trigger system

The signals from the RPC detector are amplified, discriminated and digitally shaped on the detector. The Amplifier-Shaper-Discriminator (ASD) boards are attached to the chamber at the end of the RPC strips. In the low-\(\mathrm{p_{T}}\) trigger, for each of the \(\eta\) and \(\phi\) projections, the RPC signals of the first two RPC stations are sent to a Coincidence Matrix board (CM), that contains a CM chip. This chips performs almost all of the functions needed for the trigger algorithm and also for the readout of the RPC strips. The CM board produces an output pattern containing the low-\(\mathrm{p_{T}}\) results for each pair of RPC doublets in the \(\eta\) or \(\phi\) projection. Moreover, the highest thresholds satisfied by the trigger conditions and a flag indicating triggers occuring in regions of overlapping RPCs are also provided. The information of two adjacent CM boards in the \(\eta\) projection, and the corresponding information of the two CM boards in the \(\phi\) projection, are combined together in the low-\(\mathrm{p_{T}}\) Pad Logic board. Globally 4 CMs are hosted by each Pad board. In the high-\(\mathrm{p_{T}}\) trigger, for each of the \(\eta\) and \(\phi\) projections, the RPC signals of the third station, and the corresponding pattern result of the low-\(\mathrm{p_{T}}\) trigger, are sent to a CM board, very similar to the one used in the low-\(\mathrm{p_{T}}\) trigger. The information of two adjacent CM boards in the \(\eta\) projection, and the corresponding information of the two CM boards in the \(\phi\) projection, are combined together in the high-\(\mathrm{p_{T}}\) Pad Logic board. Again, 4 CMs are hosted by each Pad board. The high-\(\mathrm{p_{T}}\) Pad board combines the low- and the high-\(\mathrm{p_{T}}\) trigger results. The combined information is sent to a Sector Logic (SL) board, located in the USA15 counting room.

## 3 The RPC data format

### The Read-Out scheme

The whole RPC barrel trigger system is read-out by 16 RODs. The ROD collects the information, of both middle and outer chambers, of two adjacent half-barrel large octants. The ROD will be located in the USA15 underground counting room.

The format structure of the RPC data is based on the fragment provided by the CM boards. Here the fired RPC strips, the trigger output and the highest threshold satisfied by the trigger logic, as well as the overlap flag, are reported. The fragments of the (up to) eight CMs belonging a given Pad board (4 low-\(\mathrm{p_{T}}\) CMs plus 4 low-\(\mathrm{p_{T}}\) CMs) are written out one after the other, adding a header/footer at the beginning/end of this list. This is a Pad fragment.
Similarly, the fragments of the Pad belonging a given Sector are written out one after the other, adding a header/footer at the beginning/end of this list. This makes the RX fragment.

Finally, two adjacent RX fragments belonging to the same half-barrel trigger system are put together and form the ROD fragment.

### The CM fragment

Figure 1 shows the structure of the CM fragment.

The size of each word is 16 bits. There is a header, followed by a sub-header, a body block that collects the RPC hits and the trigger output, and finally a footer. The header is identified by the bit sequence "1100" from bit 15 to 12 (from here onwards bits are counted starting from 0). This word contains the identifier of the CM board (CM-id) and the bunch crossing identifier from the Level-1 Electronics. The CM-id is a 3-bit word built as illustrated in Table 1.

### The CM fragment

Figure 1: The scheme of the Coincidence Matrix read-out fragment (see text).

The sub-header word is identifed by the bit sequence "1000" from bit 15 to 12. It contains the bunch crossing identifier from the Front-End Electronics. The words following the subheader collect the RPC hits and the trigger output. These words are identified by the bit sequence "00" from bit 15 to 14.

First RPC fired strips are reported. Each hit is described by 4 fields: the bunch crossing id BCID, the interpolatore clock time TIME, the RPC layer and station IJK, and the CM channel number (STRIP) connected to the fired RPC strip. BCID and TIME give the time coordinate of the given hit. The IJK identifiers are described in Table 2.

These hits are ordered following increasing values of IJK first, then of BCID, TIME and STRIP. In case of trigger, additional words are added: first the strips of the pivot plane that provided the trigger itself, and then an additional word where the STRIP identifer is replaced by the identifier THR that is the identifier of the highest threshold satisified by the trigger

\begin{table}
\begin{tabular}{|c|c|c|} \hline bit-2 & bit-1 & bit-0 \\ \hline \hline _0 : low-\(p_{T}\) CM_ & _0 : eta projection_ & _0 : address of 1st CM_ \\ \hline _1 : high-\(p_{T}\) CM_ & _1 : phi projection_ & _1 : address of 2ndCM_ \\ \hline \end{tabular}
\end{table}
Table 1: the CM identifier scheme.

\begin{table}
\begin{tabular}{|c|c|} \hline IJK & layer - station \\ \hline \hline \(0\) & _pivot station, layer 0_ \\ \hline \(1\) & _pivot station, layer 1_ \\ \hline \(2\) & _coinc. station, channel 0-31, layer 0_ \\ \hline \(3\) & _coinc. station, channel 31-63, layer 0_ \\ \hline \(4\) & _coinc. station, channel 0-31, layer 1_ \\ \hline \(5\) & _coinc. station, channel 31-63, layer 1_ \\ \hline \(6\) & _trigger pattern_ \\ \hline \(7\) & _highest thres. \& overlap_ \\ \hline \end{tabular}
\end{table}
Table 2: Description of the IJK identifier.

logic, and the overlap flag OVL. THR values are 1,2 and 3; the OVL flag is described in Table 3.

Finally, the CM fragment is completed by the footer word; this word is identified by the bit pattern "0100" from bit 15 to 12. It contains the CRC calculated using all the data present in the CM fragment described so far, and a status word STATUS.

### The Pad Fragment

The Pad fragment is illustrated in Fig. 2.

Figure 2: Scheme of the Pad readout fragment.

\begin{table}
\begin{tabular}{|c|c|} \hline OVL & overlap description \\ \hline \hline \(0\) & _no overlap_ \\ \hline \(1\) & _overlap in low CM_ \\ & _channels (low!\(\eta\)!/)_ \\ \hline \(2\) & _overlap in high CM_ \\ & _channels (high!\(\eta\)!/)_ \\ \hline \(3\) & _OVL=1 and OVL=2_ \\ \hline \end{tabular}
\end{table}
Table 3: Description of overlap flag OVL.

As already illustrated, the Pad fragment is the collection of the (up to) eight CM fragments belonging to the same Pad (low- and high-p\({}_{\rm T}\)) board. The header is the first word of this fragment; it is identified by the bit pattern "0101" from bit 15 to 12. It contains the Pad Identifier PADID (starting from 0) and a status word Status. Then all CM fragments are appended if at least one hit has been seen in the given CM; at least one CM is always sent to transmit FEB-CID and FEL1ID. The fragments are ordered with increasing values of CMID. The footer word completes the Pad fragment and it is idenfied with the bit pattern "0111" from bit 15 to 12.

### The RX fragment

The RX fragment collects the Pad data belonging to a given logic sector. Its scheme is illustrated in Fig. 3.

The header word is identified by the bit pattern "1001" from bit 15 to 12. The RX header word contains the RX identifier (starting from 0) and the status bits. Up to 8 Pad frames, belonging to the same sector, are then appended below in ordered way, following the increasing value of PADID. At least one Pad fragment is always reported to transmit FEL1ID and FEBCID. Finally, the footer word, identified by the bit pattern "1011" from bit 15 to 12, is added and it contains error flags.

Figure 3: Scheme of the RX readout fragment.

**3.5 The ROD fragment**

The general format of the ROD fragment of ATLAS is reported in details in [3]. The size of the ROD fragment word is 32 bits. The 16-bit RX words are copied in the "Data Elements" region of the ROD fragment starting from bit-0.

**References**

[1] ATLAS First-Level Trigger Technical Design Report, CERN/LHCC/98-14.

[2] [http://atlas.web.cern.ch/Atlas/GROUPS/MUON/layout.html](http://atlas.web.cern.ch/Atlas/GROUPS/MUON/layout.html)

[3] C. Bee et al., "The raw event format in the ATLAS Trigger & DAQ", Atlas Technical Note ATL-DAQ-98-129, October 2002.

**Appendix**

**RPC data word identifiers**

The table below summarizes all 4-bit words used to identify RPC data in the field from bit 15 to 12.

\begin{tabular}{|c|c|c|c|c|} \hline bit 15 & bit 14 & bit 13 & bit 12 & data word type \\ \hline \hline \(0\) & \(0\) & \(0\) & \(0\) & _CM hit_ \\ \hline \(0\) & \(0\) & \(0\) & \(1\) & _CM hit_ \\ \hline \(0\) & \(0\) & \(1\) & \(0\) & _CM hit_ \\ \hline \(0\) & \(0\) & \(1\) & \(1\) & _CM hit_ \\ \hline \(0\) & \(1\) & \(0\) & \(0\) & _CM footer_ \\ \hline \(0\) & \(1\) & \(0\) & \(1\) & _Pad header_ \\ \hline \(0\) & \(1\) & \(1\) & \(0\) & _(reserved)_ \\ \hline \(0\) & \(1\) & \(1\) & \(1\) & _Pad footer_ \\ \hline \(1\) & \(0\) & \(0\) & \(0\) & _CM subheader_ \\ \hline \(1\) & \(0\) & \(0\) & \(1\) & _RX header_ \\ \hline \(1\) & \(0\) & \(1\) & \(0\) & _(reserved)_ \\ \hline \(1\) & \(0\) & \(1\) & \(1\) & _RX footer_ \\ \hline \(1\) & \(1\) & \(0\) & \(0\) & _CM header_ \\ \hline \(1\) & \(1\) & \(0\) & \(1\) & _(reserved)_ \\ \hline \(1\) & \(1\) & \(1\) & \(0\) & _(reserved)_ \\ \hline \(1\) & \(1\) & \(1\) & \(1\) & _(reserved)_ \\ \hline \end{tabular}
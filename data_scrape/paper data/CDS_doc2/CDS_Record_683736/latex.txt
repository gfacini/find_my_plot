ASTRA, a Reconstruction Algorithm for the Silicon Detectors

Hans Drevermann (CERN, Switzerland),

Peter Luthaus (Universitat Dortmund, Germany)

October, 26\({}^{\rm th}\) 1998

This note describes ASTRA, which is an acronym for Atlas Silicon detector Track Reconstruction Algorithm. By design, ASTRA provides fast and efficient reconstruction of Inner Detector tracks using the Pixel and SCT subdetectors. A detailed description of the track-recognition procedure is given. The application to a simulated \(H\to b\overline{b}\) event at high luminosity is shown.

## 1 Introduction

When the ATLAS detector runs at high luminosity the triggering event will be overlayed with roughly 25 minimum-bias background events. The silicon detectors with their high resolution and their capability to measure 3-dimensional coordinates (called space points in this paper) provide a powerful tool to record data for the reconstruction of complicated events. However, fast and efficient algorithms are needed to exploit their potential.

For visual event analysis a fast filtering method to separate the space points of the triggering event from the space points of the background was proposed in reference [1].

ASTRA, which is an acronym for Atlas Silicon detector Track Reconstruction Algorithm, uses the same filtering method as a first step of track reconstruction.

The paper describes extensions of the filtering process and additional methods which improve the track-finding efficiency at low \(p_{t}\) and resolve the ambiguities which arise in dense jets. The space points are obtained from iPatRec [4], which clusters the GEANT [5] digits in the pixel and strip detectors. For the strip detectors the 2-dimensional clusters are combined to yield space points. An \(H\to b\overline{b}\) event with \(m_{H}=400\) GeV and added pile-up is used as an example.

The results are visualized with the ATLANTIS event display and presented using the V-plot described in reference [6].

## 2 Filtering the Space Points

A detailed description of the basic cleaning method is given in reference [1]. The performance for tracks with low transverse momentum has been improved by an extension to the filter process and by a modified treatment of the innermost and outermost layers, as described below.

### Cleaning Space Points of Tracks with Low Transverse Momenta

The cleaning strength of the layer histogram described in reference [1] increases with finer \(\phi\)-binning. However, smaller \(\phi\)-bins increase the \(|p_{t}|\)-threshold below which space points start to be lost from the track. We define a layer histogram filter with \(N\)\(\phi\)-bins to have a cleaning strength \(N\)1.

Footnote 1: Unless explicitly stated differently the other parameters for the filter throughout this paper, are:

\(\Delta\lambda=0.225^{a}\)

minimum number of layers required: \(L=4\)

Figure 1a shows all space points of a \(H\to b\overline{b}\) event in a selected \(\phi,\lambda\) region (\(\lambda=90^{\circ}-\theta\)). In Figure 1b a strong filter of strength 360 was applied which removes most of the noise but also the space points of low \(p_{t}\) tracks. A further cleaning - "group-cut" - of space points was applied by retaining only those space points, which lie in groups (see reference [1]) containing more than three points.

Figure 1c illustrates a softer filter (strength 120 and group cut), where the space points of lower \(p_{t}\) tracks pass. However, this method has the considerable disadvantage that more space points not originating from the triggering event and more noise points pass the filter than seen in figure 1b. Thus the filter loses a lot of its rejection power and a combinatorial search in the groups will take more time.

We propose another method that avoids the above mentioned disadvantages. The result is shown in figure 1d. The method uses skewed layer histograms explained as follows:

[MISSING_PAGE_EMPTY:3]

If the \(\,\phi/\lambda\,\)histogram is replaced by a \(\,\phi^{l}/\lambda\,\)histogram, with

\[\phi^{l}=\phi+skew\cdot\rho\qquad(\rho=\sqrt{x^{2}+y^{2}})\]

only space points of tracks within a certain transverse momentum interval pass the filter. By use of a proper value and sign of the \(skew\) one can select a desired position of the interval. The size of the \(p_{t}\) interval decreases with increasing filter strength.

Figure 2 shows the \(skew\)-dependence for several tracks with a wide \(p_{t}\) range. With a filter of strength 360 the space points of the tracks pass for at least one of the skew values.

The proposed method consists of filtering the data with different consecutive sufficiently close skew values, and retaining those space points, which pass the filter for at least one skew value. The retained space points are further cleaned by a filter of strength 90 and a group cut. The grouping is in any case required for the subsequent track recognition.

The number of different skew values and the filter strength were optimized considering measurement precision in \(\phi\) and time consumption. When using many skewed layer histograms a very strong filter can be selected, the strength of which is limited by the measurement precision.

### Improvement of the acceptance of the innermost and outermost layers

The \(\phi\)-coordinate of the space points on a track varies almost linearly according to the distance from the vertex. Therefore it may occur that the inner and outer space points of low \(p_{t}\) tracks lie in bins with less than the required number of entries of the layer histogram, so that they are rejected, whereas space points within the middle of the track are kept, i.e preferred, as can be seen in the drawing of figure 3.

In the layer histogram shown in figure 3(a) and in the V-plot shown in figure 3(b) the space points from a simulated track with \(p_{t}=1.3\) GeV passing a filter of strength 180 are drawn as small filled squares, the rejected space points as "X", so that the track will be lost, as the group containing the points has only three entries.

Figures 3(c) and 3(d) show the respective results, if the inmost and outmost layers are counted twice. Now all space points forming a V-pattern are retained. The points outside the V-pattern may be rejected in the track recognition pass described in the next section.

## 3 Combinatorial trackfinding in the groups

As described in reference [1], the filtering process delivers groups of space points. As the number of space points per group is rather small, a full combinatorial search for tracks can be done within these groups.

ASTRA uses three steps to find tracks:

1. Find all track candidates.
2. Compare all pairs of candidates. If they share more than a minimum number of space points, the worse of the two candidates is deleted.
3. Compare all pairs of candidates with at least one shared space point. Assign the space point to the candidate where it suits better and remove the space point from the other candidate, which is deleted if it then contains less than the required minimum number of space points.

Figure 2: **Effect of different skew-values**: Tracks representing particles of different charges with \(p_{t}\) ranging from 0.7 GeV to 10 GeV is shown.

This procedure is done for each group separately.

### Finding all candidates

ASTRA was conceived to find tracks originating from the primary vertex or close to it. Therefore, it is assumed that the space points of a track lie on a helix with small transverse impact parameter. It is shown in the appendix, that the helix fit can be replaced by two linear fits, if appropriate coordinates are used.

We distinguish two regions, namely the barrel region, where \(\phi\) and \(z\) are measured as a function of \(\rho\) and the endcap region, where \(\phi\) and \(\rho\) are measured as a function of \(z\). The division between barrel and endcap is made on basis of the mean \(\lambda\) coordinate of the group:

* \(|\lambda_{\mathit{group}}|\leq 70^{\circ}\Longrightarrow\) barrel
* \(|\lambda_{\mathit{group}}|>70^{\circ}\Longrightarrow\) endcap

For all combinations of at least \(min_{\mathit{sp}}\) space points 2 the formula in appendix 6 are applied and the combinations with sufficiently small \(\chi^{2}\) are accepted as candidates. For the linear fit constant weights are used. 3

Footnote 2: For the examples in this note \(min_{\mathit{sp}}=4\)

Footnote 3: For the examples presented in the paper the following constant weights were used with a \(\chi^{2}\) cut equal to the number of space points:

 fit by equation 14, 22: \(weight=1000^{2}\)

 fit by equation 17, 20, 24: \(weight=5^{2}\) cm\({}^{-2}\)

Figure 5a shows all candidates of one group. The candidates to which the space points belong are symbolysed by "flags", drawn as lines attached to the points with an angle associated with the

Figure 3: **Illustration to show the preference of the mid-layers: Six space points in six different layers spread over four bins in the layer histogram. If a minimum of four layers is required only two points will pass the filter.**

## Appendix A T L A S

Figure 4: **Effect of enhancing the first and last layer**: The space points of a track with \(p_{t}=1.3\) GeV is shown.

(a) Excerpt of the layer histogram without enhancing the inmost and outmost layers;

(b) V-plot of the same region as shown in a;

(c) Excerpt of the layer histogram with enhancing the inmost and outmost layers;

(d) V-plot of the same region as shown in c.

candidate. For better understanding candidates which are fully contained in another candidate are not shown, so that seven candidates remain. From the simulation it is known that three tracks were generated in the region shown in the figure plus some background points.

### Deleting candidates which share too many space points with others

If two candidates share space points the number of which is larger than \(n_{\mathit{share}}\)4, the worse candidate is deleted. A candidate is worse than another one, if it contains less space points. In case two candidates contain the same number of space points, the one with the higher \(\chi^{2}\) is assumed to be the worse one. The result is shown in figure 4(b), where three candidates remain, which can be identified by eye and match to the Monte-Carlo tracks simulated in this region. One space point still remains which is shared by two candidates.

Footnote 4: For the examples in this note \(n_{\mathit{share}}=2\)

### Reassigning shared space points

Some shared space points may still remain. For each shared point the \(\chi^{2}\) variation is calculated for all candidates containing the point where the \(\chi^{2}\) variation is equal to the difference of the \(\chi^{2}\) with and without the space point. The point is assigned to the candidate with the minimum variation, and removed from the other candidates. A candidate will be deleted, if it does not contain sufficient space points after shared space points have been removed. Figure 4(c) shows the final result of ASTRA within the depicted group. The only difference to figure 4(b) is one space point, which was removed from one candidate.

## 4 Results of ASTRA for a complete \(H\to b\overline{b}\) -event with pile-up

The ASTRA algorithm is applied to the sample event in the following steps:

1. finding the \(z\)-coordinate of the vertex
2. pre-filter
3. grouping
4. combinatorial track finding in the groups.

Firstly, the \(z\)-coordinate of the vertex is found, as described in [1] with a filter of strength 900, so that the \(z\)-coordinate of the vertex is determined from high \(p_{t}\) tracks. In a first pass a sampling distance of \(dz=0.5\) cm is used to roughly determine the \(z\)-coordinate of the vertex. The second pass samples around the peak value of the first pass with \(dz=0.01\) cm to ameliorate precision.

The next three steps follow the procedures described above with the same parameters as used above.

The sample event has 10318 space points which are reduced to 1624 points by the pre-filter. A total of 182 groups is created with the biggest group containing 88 space points. Applying the group cut, i.e. keeping only those groups consisting of more than 4 space points, 124 groups remain. The total number of space points in the groups after the group cut is 1244.

Figure 5: **Finding track candidates in one group containing three tracks:**

(a) All combinations with at least four space points fulfilling the \(\chi^{2}\) criterion and not fully contained in another candidate;

(b) Candidates after deleting the ones with too many shared space points;

(c) Result after reassigning shared space points.

Figure 6 compares simulated and reconstructed data. Figure 6a shows the space points which are associated with the simulated tracks of \(|p_{t}|>1\) GeV originating from the triggering event. This figure should be compared to Figure 6d, which depicts the space points associated with the reconstructed tracks. It is seen that the pictures are very similar, which means that most of the simulated tracks are correctly reconstructed.

The small differences between the two pictures are better identified, if only those points of figure 6a are shown which are not contained in figure 6d. They are shown in figure 6c. No track with more than three space points forming a "V" can be seen which means that no track is lost. Most of the space points lie on straight lines along \(\lambda\) which is typical of \(\delta\)-electrons.

Figure 6b shows those points of figure 6d which are not contained in figure 6a. This figure contains space points from the background, sufficiently close in space to reconstructed tracks, so that they are correctly associated. Some other tracks originating from minimum bias events were found.

## 5 Timing

The time consumption when running ASTRA on one of the ATLAS work-group servers, atlas08 was measured. The compilation has been done using g++ with the -O2 option. All times apply to the \(H\to b\bar{b}\) -event used above.

The filtering process of strength 90 including the creation of groups takes 70 ms. The pre-filter of strength 900 takes 2.5 seconds, as it needs to run the filtering procedure several times, however without creation of groups.

To reconstruct the sample event takes 800 ms, which is mainly spent for the combinatoric of the biggest group containing 88 space points.

However, determining the \(z\)- coordinate of the vertex consumes most of the time when applying the method suggested in [1], because the filter needs to be run many times. To find the \(z\)-coordinate of the vertex with an accuracy of 100 \(\mu\)m between \(z=-15\) cm and \(z=15\) cm, 25 seconds are needed.

However if a region of interest is known as normally assumed, the time can be drastically reduced, as it is proportional to the number of space points. It can be further reduced if the \(z\)-coordinate of the vertex is roughly known.

## 6 Summary

ASTRA appears to be a fast and efficient algorithm to reconstruct tracks above \(p_{t}=1\) GeV in the ATLAS silicon detectors. This has been demonstrated by applying it to a complicated event with pile-up. The use of ASTRA for different topologies needs further investigation.

However, ASTRA relies on the knowledge of the \(z\)-coordinate of the vertex. For the given event-topology, e.g. \(b\)-jets, ASTRA can determine the \(z\)-coordinate of the vertex.

As the time consumption varies almost linearly with the number of space points, ASTRA can be used for a fast reconstruction of full events at high luminosity.

Figure 6: **Reconstruction of a full \(H\to b\overline{b}\) event**:

(a) Space points associated with the tracks of \(|p_{t}|>1\) GeV originating from the triggering event;

(b) Points of figure d not contained in figure a;

(c) Points of figure a not contained in figure d;

(d) Space points associated with the reconstructed tracks.

Appendix: Linear helix equations

A helix of a particle with momentum \((p_{x},p_{y},p_{z})\) and with no transverse impact parameter can be written in cylindrical coordinates as

\[\rho = 2\cdot r_{curv}\cdot\sin(\phi-\phi_{0}) \tag{1}\] \[\rho \approx 2\cdot r_{curv}\cdot(\phi-\phi_{0})\] (2) \[z = 2\cdot r_{curv}\cdot(\phi-\phi_{0})\cdot\tan(\lambda_{0})+z_{0} \tag{3}\]

with \(\rho\) being the transverse radius \(\sqrt{x^{2}+y^{2}}\), \(\tan(\lambda_{0})=p_{z}/p_{t}\), \(\tan(\phi_{0})=p_{y}/p_{x}\), \(z_{0}\) the \(z\)-coordinate of the vertex and \(r_{curv}=c\cdot p_{t}\) the radius of curvature. For the two Tesla magnetic field in the ATLAS detector one gets \(c^{-1}=0.006\) GeV/cm.

Equation 1 can be rewritten as

\[\rho=2\cdot r_{curv}\cdot\sin(\phi-\hat{\phi}-\phi_{0}+\hat{\phi}) \tag{4}\]

where \(\hat{\phi}\) can be arbitrarily chosen. The above equation can be rewritten as

\[\rho = 2\cdot r_{curv}\cdot(\cos(\phi_{0}-\hat{\phi})\cdot\sin(\phi- \hat{\phi})-\sin(\phi_{0}-\hat{\phi})\cdot\cos(\phi-\hat{\phi})) \tag{5}\] \[\frac{\rho}{\cos(\phi-\hat{\phi})} = 2\cdot r_{curv}\cdot(\cos(\phi_{0}-\hat{\phi})\cdot\tan(\phi- \hat{\phi})-\sin(\phi_{0}-\hat{\phi})) \tag{6}\]

With

\[\rho_{c} = \frac{\rho}{\cos(\phi-\hat{\phi})} \tag{7}\] \[\phi_{c} = \tan(\phi-\hat{\phi}) \tag{8}\]

one gets the linear relationship

\[\rho_{c}=2\cdot r_{curv}\cdot(\cos(\phi_{0}-\hat{\phi})\cdot\phi_{c}-\sin( \phi_{0}-\hat{\phi})) \tag{9}\]

If \(\phi_{c}\) is properly chosen, this equation is only a small correction to equation 2.

From equations 2 and 3 one can derive an approximately linear relation between \(\rho\) and \(z\):

\[\rho \approx \frac{z-z_{0}}{\tan(\lambda_{0})} \tag{10}\]

If \(r_{curv}\) is known one gets from equations 1 and 3 the exact relation between \(\rho\) and \(z\):

\[2\cdot r_{curv}\cdot\arcsin\frac{\rho}{2\cdot r_{curv}} = \frac{z-z_{0}}{\tan(\lambda_{0})} \tag{11}\]

With

\[\rho_{u}=2\cdot r_{curv}\cdot\arcsin\frac{\rho}{2\cdot r_{curv}} \tag{12}\]

one gets the linear relation between \(z\) and \(\rho_{u}\)

\[\rho_{u} = \frac{z-z_{0}}{\tan(\lambda_{0})} \tag{13}\]

### Barrel Groups

By fitting

\[\phi_{c}=\rho_{c}\cdot a_{1}+\,b_{1} \tag{14}\]

one gets with equation 9

\[\phi_{0} = \arctan(\,b_{1}\,)+\,\hat{\phi} \tag{15}\] \[r_{curv} = \frac{\sqrt{1+\,b_{1}^{2}}}{2\cdot a_{1}} \tag{16}\]

Using \(r_{curv}\) one can calculate \(\rho_{a}\) (equation 12) for the space points and fit

\[z=a_{2}\cdot\rho_{a}+\,b_{2} \tag{17}\]

With equation13 one gets the helix parameters

\[z_{0} = b_{2} \tag{18}\] \[\tan(\lambda_{0}\,) = a_{2} \tag{19}\]

### Endcap Groups

By fitting

\[\rho=a_{0}\cdot z+b_{0} \tag{20}\]

one can determine approximately using equation 10

\[\tan(\,\lambda_{0}\,)\approx\frac{1}{a_{0}} \tag{21}\]

By fitting

\[\phi=a_{3}\cdot z+\,b_{3} \tag{22}\]

one gets with equation 3

\[r_{curv}=\frac{1}{2\cdot a_{3}\cdot\tan(\lambda_{0}\,)} \tag{23}\]

Using \(r_{curv}\) one can calculate \(\rho_{a}\) (equation 12) for the space points and fit

\[\rho_{a}=a_{4}\cdot z+\,b_{4} \tag{24}\]

With equations 3 and 13 one gets the helix parameters

\[\phi_{0} = b_{3}-\frac{a_{3}\cdot b_{4}}{a_{4}} \tag{25}\] \[z_{0} = -\frac{b_{4}}{a_{4}}\] (26) \[\tan(\,\lambda_{0}\,) = \frac{1}{a_{4}}\] (27) \[r_{curv} = \frac{a_{4}}{2\cdot a_{3}} \tag{28}\]

## References

* [1] H. Drevermann et al., ATLAS-SOFT-NO-37 (1998).
* [2] R. S. DeWolf, Slug Manual (1993).
* [3] DICE Manual (0.10) (1994).
* [4] R. Clifft and A. Poppleton, ATLAS-SOFT-NO-009 (1994).
* [5] GEANT, Detector Description and Simulation Tool, CERNLIB long writeup W5013.
* [6] H. Drevermann et al., Proceedings of the 1995 CERN School of Computing, Arles.
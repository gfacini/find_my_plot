**ATLAS Internal Note**

**SOFT-NO-011- \(\AA\)**

**1st February 1995**

DICE manual

Version 0.101

Offline Software group

February 1st, 1995

1
Footnote 1: Copies of this document can be obtained through the ATLAS home page on the World Wide Web. A later version may already be available by time you read this.

###### Contents

* 1 Introduction
* 2 Maintenance
* 3 How it can be used
	* 3.1 How to build an executable
	* 3.2 Standard datacards
* 4 Structure of the package
	* 4.1 Overview
	* 4.2 Existing detectors
* 5 MSGC Documentation
* 6 TRD Documentation
* 7 COIL Documentation
* 8 TILECAL Documentation
* 9 Bank Documentation
* A coil
* B cops
* C cops
* D ecal
* E ende
* F gaas
* G msg
* H sit
* I sitv
* J tile K trig
* L xtrd

List of Figures

## Chapter 1 Introduction

DICE a Detector Integration CodE has been developed by the ATLAS Software Group as an interface to the GEANT package[1]. This guide describes the structure and the contents of DICE, where it can be found and how it can be used. It has many contributors and should be considered has an evolving document. Criticism, comments and additions will be appreciated and could make this documentation more correct, more complete and more usefull.

## Chapter 2 Maintenance

The package is maintained on the ATLAS Work Group Server (or WGS) which is the master repository for ATLAS official software. The organization of the software on this repository is described in the ATLAS Software Manual [2].

It is currently running on most usual platforms but is officially maintained at CERN on HP and CERNVM.

Several versions of the code are maintained on the official 'areas' (pro, new and dev). For the Technical Proposal the version used was the 'dev' one.

The current responsible of the package is A. Dell'acqua. The source code is maintained under CMZ[3].

For each [area] the following files are available below the directory :

/afs/cern.ch/atlas/offline/@sys/[area]

* cmz : /src/cmz/dice.cmz
* corr : /src/cmz/dicefix.corr
* car : /src/car/dice.car
* delta : /src/delta/dice/delta
* library : /lib/libdice.a

dice.cmz is the reference cmz file in binary format. The version is stamped.

dice.car is the original file in BCD format.

dicefix.corr contains some corrections to dice.cmz

libdice.a is the compiled library.

In addition on the 'lib' directory the 'dice.history' file refers to the latest update of the library.

Individual fortran code can be found in the directory :

/afs/cern.ch/atlas/offline/@sys/[area]/src/for/dice-for

It should be noted that cmz, car and corr files are sharable between several platforms while the library and the fortran files are not.

## Chapter 3 How it can be used

A DICE application is an executable which should be linked to SLUG[4] an I/O interface program to GEANT, also developed by the ATLAS Software Group, and to GEANT.

Optionally it can also be linked to most of the current event generators.

The main program, called SLMAIN, is part of the SLUG package.

### 3.1 How to build an executable

As most of the ATLAS applications a DICE executable can be built by using the standard ATLAS kumac macros in a CMZ session.

Assuming you have correctly defined your CMZ environment and you want to build a standard DICE from the code seating on the 'dev' area you can do :

 cmz ! start a CMZ session  atl_area dev ! to work on the 'dev' area  atl_build dice mydice ! to build a 'dice' application called'mydice'  exit ! close the CMZ session

 On your working directory you have created an executable module'mydice' that you can run interactively or submit to a batch machine.

 An example of a 'dice' executable can be found on the 'bin' directory of each 'area'.

 An example of a working batch job and related outputs can be found on the'macros/job'  directory. The README file explains how to proceed.

### 3.2 Standard datacards

The execution of a DICE application is piloted by a 'datacard' file. How to use the datacards is described in the SLUG manual.

 A set of datacards is maintained on the directory :

 /afs/cern.ch/atlas/offline/@sys/datacard

 The following ones have been used for the preparation of the ATLAS Technical proposal :

 atl_tp0  ATLAS for Technical Proposal  standard ATLAS  hybrid solution 2m version  air core torroid 2m versionpanel layout tracker  separated preshower

atlmb_tp0 TP0 version for minimum bias  atlslj_tp0 TP0 version for single jets production  atl3D_tp0 TP0 version with 3D field (not yet available)

atl_tp1 standard ATLAS  hybrid solution 2m version  integrated preshower  air core torroid + phantom chambers  panel layout tracker

atl_tp2 standard ATLAS  hybrid solution 2m version  air core toroid + phantom chambers  annecy tracker (not definitive)  new calorimeter model, with separated preshower

atl_tp3 standard ATLAS  hybrid solution 2m version  air core toroid + phantom chambers  annecy tracker (not definitive)  new calorimeter, with integrated preshower  integrated forward calorimeter 

[MISSING_PAGE_FAIL:7]

------->|DETD|Digitization parameters -------

If needed in a later stage additional banks can be included in the structure, like 'DETA' containing the detector analysis parameters.

As mentionned earlier the input parameters which are in these banks can be modified by the 'datacards' allowing to study many detector options.

An effort has been made to have the documentation as part of the code. Due to the high pressure during the preparation of the Technical Proposal this has not been achieved for all detectors. Nevertheless in Appendix the contain of the various banks will be given for most of the detectors.

### Existing detectors

The dice.cmz file contains many patches, each describing a separate subdetector:

* COIL : super conducting coil for the inner tracker.
* EMCAL : electromagnetic calorimeter.
* COPS : cold preshower detector.
* HADCAL : hadron calorimeter.
* MSGC : micro strip gas counters.
* SIT : silicon detectors.
* SITV : silicon vertex detectors.
* TRD : transition radiation detectors.
* AIRCORE : aircore toroids.
* AIRFIELD : magnetic field in the air core toroids.
* HPDT : high pressurised drift tubes (muon chambers).
* HCSC : honeycomb strip chambers (muon chambers).
* PHANTOM : phantom muon chambers.
* GAAS : gallium arsenide detectors.
* TILECAL : tile calorimeter.
* FWDCALO : forward calorimeters.
* RPC : resistive plate chambers (muon triggers).
* 3DFIELD : 3D magnetic field.
* ACCORD : accordion calorimeter.

* MDT : muon chambers
* PIXEL : pixel detector
* SCT : semi conductor tracker
* TGC : thin gap chamber
* INTER : containing some interface routines between DICE, SLUG and GEANT.
* UTIL : containing the beam pipe, moderator, cryogenics, inactive layers etc.
* VERSION : containing some decks describing the file history.
* CORR : contains the corrections.

The GEANT mother volume of the whole Atlas detector is called SLUG. In this mother volume four daughter volumes ar positioned :

* PIPE the beam pipe,
* INNE containing all elements up to and with the moderator,
* CENT containing the cryostat, the coil, the calorimeter and the return yoke,
* OUTE containing the muon system.

## Chapter 5 MSGC Documentation

The code in the MSGC patch describes Micro Strip Gas Counters for ATLAS. They are positioned in the forward inner detector, with strips that are radial and point almost to the beam axis.

The geometry in this version is meant to be the Cosener's house geometry (geom 1), the Panel layout (geom 2). A description of the design can be found in ATLAS INDET-NO-019.

MSGCDEF selects the required geometry: 1, 2 or 3 depending in the

*MODE 'INNE' 'GEOM' 1 or 2

MSGCDF1 sets all variables that determine the Coseners house geometry.

MSGCDF2 sets all variables that determine the Panel layout geometry.

They also set the variables needed for the digitisation.

The variable names are explained in deck MSGCCDE.

The geometry variables are written to the DETP bank.

The digitisation variables are written to the DETD bank.

MSGCDF3 The Annecy layout geometry

extra parameters

per ring: offset of v detectors wrt u

offset of phi detectors wrt v

phi offset of wheels in z (allows seperate values

for type1 and type2 wheels.

MSGCCEO builds up the MSGC geometry. The numbers used for building

the geometry are taken from the DETP bank. Positioning into

the mother volume is not done in this routine because

the MSGC and TRD rings should be interleaved fail-safe.

The coordinates of one strip are encoded as follows:

name meaning value minimal actual usage

WHLT = wheel type 1.....2 1 bit 2 bits

WHLN = wheel number 1....29 5 bits 5 bitsRING = ring number 1....10 4 bits 4 bits  DETE = det. number 1....250 8 bits 9 bits  STRP = strip number 1....512 9 bits 12 bits  Wheel type : WHLT=1 means 'first type wheel'  WHLT=2 means'second type wheel'  ( structure of both types of wheels is defined by  by the corresponding INDEX, for ex. 11111 - full wheel,  20001 - a hollow wheel with independent supports,  00011 - a small wheel of two rings in a common support).

 wheel number: 1....16 for each type of wheels  n+MAXWHL (16) for the wheels in -Z.

 ring number: counting from small radius to large radius.  1...5: U and V rings.  6...10: phi rings.

 detector number: 1....51 counted following GSDVN numbering.  n+MAXDET (200) for V layers to  distinguish them from U layers.

 strip number: 1....512 following GSDVN numbering.

 MSGCSTE stores a hit in the hit bank when a charged particle  crosses the sensitive volume of an MSGC. For this  purpose, the coordinates of the particle are stored  on entry and exit of a strip volume. This implies  that gustep should call msgcste at the entry point  (when DESTEP.EQ.0). The hit position is the average  of the two space points. For simulation of the  ionisation, the track length in the strip volume  is also needed. For simulation of transverse  diffusion (electrons drifting to the next strip)  also the distance to the next strips is stored.  For this we use GHEXT, which gives funny numbers sometimes.

 Each hit consists of:  distance of hit to cell on negative side in phi;  distance of hit to cell on positive side in phi;  length of path inside this MSGC cell.

 MSGCPRI prints out the data that were stored in ZEBRA banks,  if the MSGC print flag is > 3, and the number of  hits and digitisations stored, if print flag > 0.

 MSGCDG digitizes the msgc signals: from the coordinates of  a crossing particle, the signal on the strips is generated and stored in the DIGI bank (with suppression of low signals).

The digitisation follows the signal development as described in Nucl. Instr. Meth. A323 (1992) 638. Briefly it is:

1) ionise the gas; the ionisation takes place in clusters (see Sauli, CERN 77-09). When the charged particle steps through the gas, the probability to create a cluster is constant per step. This gives a Poisson distribution for the total number of clusters over a given path length. The probability to find i electrons in a cluster goes approximately as 1/n^2. This gives rise to a set of liberated electrons, all at different positions. In the code I put them all at the centre of the track. The total number of electrons given the number of clusters, is random generated using a table from the routine MSGCHIS.

2) dislocate the electrons randomly. This is what we call "transverse diffusion". Because of collisions with gas atoms, the electrons do not drift towards the anode in a straight line but they diffuse; the diffusion follows a Gaussian distribution with a sigma that increases with the square root of the drift path length. In this detector diffusion is only important if an electron diffuses so far away that it ends up on another strip. This is why we store the distance to the next strip in the HITS bank.

3) develop signal in the frontend chip and digitise. Here we put some noise in, add gas amplification and amplification fluctuations. Then for the digitisation I cheat: I store the pulse height of the hit, BUT WE HAVE DIGITAL READOUT. This information is very useful, because a) when overlapping two soft hits we can get one hard hit, that will go over threshold b) we can apply higher thresholds in the analysis stage and study the effect on pattern recognition.

I only store hits when they have more than 3 electrons equivalent signal (THRESH set in MSGCDEF), hoping that this will give a huge reduction of data as compared to writing out all the activity. In the analysis the threshold will be around 5-7 electrons equivalent.

The signal as a function of # electrons is again tabulated in MSGCHIS for reasons of speed.

The frontend preamplifier is an ideal integrator, dead time and dead channels are not included. The hits are read per detector element, so that the digitized hits will be sorted. There is NO CLUSTERING in MSGCDIG, for several reasons. If we want to do road filtering, add global noise, or generate a list of dead channels, etc. the current format is probably more practical than clustered information.

Note that GFHIT1 is used to fetch hits, so that

1) it takes only little time to fetch the hits;

2) there is no array boundary problem if there are many

hits in one detector.

MSGCHIS is a routine that makes the monte-carloing in MSGCDIG

faster by histogramming a probability functions for

the number of free electrons as a function of the

number of primary ionisations (because there is a

probability that a primary ionisation occurs, and the

knocked-out electron ionises some gas molecules around it).

The array (RANION) is kept in common block MSGRAN (see msgccde).

MSGCCDE deck with common blocks and parameters. Note the array

limiting parameters:

MAXDET:maximum number of detectors on one ring

MAXWHL:maximum number of one type of wheel in +Z

(This means: we have hollow wheels and solid wheels.

There are more hollow than solid wheels: 13 in +Z

and 13 in -Z. MAXWHL is used to number these wheels:

the 13 wheels in +Z are numbered 1...13, and the wheels

in -Z are numbered MAXWHL+1...MAXWHL+13.)

MSGDTOC 'Detector parameters TO Common block'

This routine reads the DETP, DETD and DETG banks, and stores

all the numbers in the common blocks MSGPAR1 and MSGDATA.

The values that are set in MSGCDEF may be overwritten

through datacards, so the correct values are found in

the DETP and DETD banks. Called by MSGCGEO.

With the introduction of the DETD bank, a backwards compatibility problem is created which is solved locally in this routine.

MSGDETG Create a DETG bank for MSGCs. Currently 50 numbers are stored: the Z-offsets of the U, V and phi layers w.r.t. the wheel Z-position; the radiation length of one layer of MSGCs; the number of rings (maybe belongs in DETP); overall dimensions of each type of wheels and z-positions of the sensetive volumes inside them.

The geometrical tree of the MSGC detectors is as follows: (support material excepted)

'INNE' 'HWHL' 'UVR1' 'UVD1' 'UVG1' 'UVS1' 'MSTR'............... 'UVRS' 'UVDS' 'UVGG5' 'UVSS' 'MSTR' 'FIR1' 'FID1' 'FIG1' 'FIS1' 'MSTR' 'FIR5' 'FID5' 'FIG5' 'FIS5' 'MSTR'

'FWHL' 'UVR1' 'UVD1' 'UVG1' 'UVS1' 'MSTR'... 'UVRS'... 'FIR1' 'FID1' 'FIG1' 'FIS1' 'MSTR'... 'FIR5'...

HWHL stands for Hollow Wheel, FWHL for Full Wheel (historically!) UVxx stands for a component of a U or V detector; FIxx for a phi det. UVR1...UVR5: Rings (TUBE) of UV detectors at different radii UVD1...UVD5: The detector subvolumes in the UVRx (TUBS) UVG1...UVG5: The gas volume in each detector (TUBS) UVS1...UVSS: One strip in a MSGC detector (TUBS)

MSTR: The active volume, identical shape and position of UVS1..5 and FIS1..5, but one single name for GEANT reasons.

Support materials: 'PYR1' etc: Pyrex (Glass) substrate for MSGC strips 'PCI1' etc: PCB board for MSGC wiring/frontends 'SUP1' etc: big carbon fibre plates to close the gas volume of each wheel 

## Chapter 6 TRD Documentation

The TRD patch code describes the Transition Radiation Detector/Tracker. The TRD/T is a part of the Atlas Inner Detector.

The code consists of the following PATCHY/CMZ decks:

XGLBL - contains SEQuences for the parameters and common definitions.

Sequences with Parameters:

XNDPRS - number of the geometry input parameters booked (NDPAR=550);

XMDPRS - number of the module parameters (NRMPAR=21);

XBHOFF - the barrel hit offset for negative Z (XBHOFF=300).

Sequences with Commons:

XVERS - geometry version as on the data card i.e.

geometry*10+ defaults version number (30 at present);

XGLBL - global dimensions of the Inner Detector (volume INNE);

XHITS - contains:

the total number of the barrel straw shells (NLAYER):

the total number of the end-cap planes (NPLANS);

Position of the first straw in the barrel layer (BRLCOR)

or in the end-cap plane (ECPCOR)

BALCOR(i,1) - radius of the shell (middle point of the straw);

BALCOR(i,2) - Phi0 of the first straw;

BALCOR(i,3) - Delta Phi i.e. angular size of the straw interval;

ECPCOR(i,1) - Z of the plane (middle point of the straw);

ECPCOR(i,2) - Phi0 of the first straw;

ECPCOR(i,3) - Delta Phi i.e. angular size of the straw interval;XDIGIT - thresholds and corresponding values for the digitizations.

XTRDIM - contains:

the total number of the TRD modules (NROFPT);

the number of the barrel modules (NROFBR);

for each part also Rin, Rout, Zleft,Zright are stored

in arrays RIN, ROUT, ZLEFT, ZRIGHT.

The TRD modules are stored in the following order:

first the barrel modules then the positive Z end-cap,

and then the negative Z end-cap modules.

XTRMSG - common to exchange information with the MSGC setup.

Contains: number of the MSGC stations (NZCH), their

positions (ZCH), and the half-thicknesses (DZ).

XDTRDGEO - steering routine for the geometry definition;

XTRDDEF - steering routine for the TRD/T defaults;

XTR3GEO - definition of the TRD/T Geometry version 3;

XTR30DF - 0th version of the defaults for geometry 3;

XTRDDIG - the TRD digitizations (dummy at present);

Digit Values:

first location - Etot: Total energy loss in a straw

second location - Tmin: minimal drift time

changes between 0 and 40

XTRDDRA - drawing routine;

XTRDPRI - prints out information about the energy deposits in active volumes

of the barrel and the end-caps. The amount of printout depends on

the PRINT parameter value (data card):

0 - no print out;

1 - 1 line per event. Total deposits in the barrel and the end-caps;

>1 - detailed printout: deposits vs R in the barrel,

and vs Z in the end-caps.

XTRDSTE - store the TRD hit information.

The hit structure is as following

first location - XPRT contains the TRD part code

= 1 => Barrel

= 2 => z<0 End-Cap= 3 => z>=0 End-Cap

second location - Z contains the code of Z of a hit.

For the barrel it is ordinal number

of 1 cm thick slice along the barrel straw

(minimal value is 1).

For the end-cap it is the plane ordinal

number within the end-cap part.

third location - R contains the code of R of a hit

For the barrel it is the layer ordinal number

For the end-cap it is the ordinal number

of 1 cm thick slice along the end-cap straw

(minimal value is 1).

fourth location - Phi contains the code of Phi of a hit

fifth location - Gamf contains the code of the Lorentz gamma:

it is always 0 for massless particles

if due to cuts they deposit energy

and changes between 1 - 127 otherwise

sixth location - time contains the code of the drift time:

changes between 0 and 40

Hit Values:

first location - Elos: energy loss in a straw (GEANT computed)

second location - Gstp: particle path length within the active gas volume

XTRDTDC - INTEGRE FUNCTION!! Finds the drift time for a straw.

XTRMSG3 - gets information about the NSGC setup. If the NSGC setup changes

then this routine has to be rewritten because the NSGC setup data

are not stored in the SLUG structure!

XFVOLU - gets the volume parameters.

Description of the Parameters' Defaults.

The TRD/T is build with the GEANT TUBE volumes. To increase the code

functionality the TRD/T was divided into the NODULES.

All the parameters are entered as REAL in the XTR30DF routine.

The meaning of the parameter is the following:

 G L 0 B A L S E C T I 0 N

 Parameter# Default value Description

 1 0.0 not used  2 0.0 not used  3? cm global inner radius of the INNE volume  4? cm global outer radius of the INNE volume  5? cm half length of the INNE volume

 S T R A W S E C T I 0 N

 Parameter# Default value Description

 6 25.E-4 cm radius of the wire  7 0 wire material number (see **1 below)  8 0.2 cm inner radius of the straw,  = outer radius of the straw gas  9 43 gas material number  (Xe/CF4/C02 70/20/10 %)  10 50.E-4 cm straw wall thickness  11 190.0 cm barrel straw length - this paramaeter  is not used in the present version.  The module straw length is adjusted  to the module active voiume dimensions  (see drawing below). In case of the barrel  real the lengths are:  50 cm for the innermost barrels and  2*95 cm for the other barrel parts.  12 50.0 cm end-cap straw length- this parameter  is not used in the present version.  The module straw length is adjusted  to the module active voiume dimensions  (see drawing below).  13 44  straw wall material number  14 1  flag marking if the space between  the barrel straws is filled with  foam (= 1), or with air (= 0)

 P E R I 0 D S E C T I 0 N

 Parameter# Default value Description

 15 6 total number of period types  16 4 number of barrel periods

[MISSING_PAGE_EMPTY:19]

4 50.0 module active part medium number
5 0.2 inner support thickness
6 55 inner support medium number
7 0.2 outer support thickness
8 56 inner support medium number
9 0.0 left flange thickness
10 0 left flange medium number
11 0.0 right flange thickness
12 0 right flange medium number
13 0.0 Z position (see **2 below)
14 70.0 Z offset (see **3 below)
15 0.0 global rotation angle in mrad
16 1 periodicity type
17 0 barrel/end-cap flag (=0 if barrel)
18 32.6 radius of the first straw layer (middle point of the straw)
19 0.68 layer spacing
20 0.68 straw spacing within the layer
21 0 number of straw layers in a module
if =0 on input then will be calculated in geometry routine.'

End-Cap Module :

Parameter# Default value Description

1 49.8 inner radius
2 104.2 outer radius
3 7.0 length (see **3 below)
4 61.0 module active part medium number
5 0.2 inner support thickness
6 58 inner support medium number
7 4.0 outer support thickness
8 59 inner support medium number
9 0.0 left flange thickness
10 0 left flange medium number
11 0.0 right flange thickness
12 0 right flange medium number
13 120.0 Z position (see **4 below)
14 0.0 Z offset (see **3 below)
15 0.0 global rotation angle in mrad
16 4 periodicity type
17 1 barrel/end-cap flag (=0 if barrel)
18 600 number of straws in a plane
19 0.7 first plane offset
20 0.8 plane spacing

(middle point of the straw)
21 0 number of straw planes in a module if =0 on input then will be calculated

in geometry routine.

**1

The wire medium number is set to ZERO in order to prevent the booking

and the positioning of the wire volume. This is done to avoid clashes

in the GEANT geometry structure!

**2

For the barrel modules the Z position (parameter #13) has to be always ZERO!

**3

The Z offset (parameter #14) is given with respect to the previous module.

For the barrel modules w.r.t. frame system origin!

**4

I

When the MSGCs are present, the end-cap module length is

calculated automatically by the program.

## Chapter 7 COIL Documentation

PATCH : COIL in DICE.CMZ //DICE/COIL/

This patch contains all code needed in dice to define the central solenoidal coil. This patch is on the responsibility of the DICE team (contact A. Dellacqua or M. Nessi for more informations).

DICE general routines:(COIL)

 ****************************

- COILGEO : COIL geometry routine a la geant

definiton of several cylinders (DETP parameters)

 COIL = mother tube

 COIC = coil conductor tube in COIL

 COI1-i = i COIL conductors special material in COIC

 COIS = coil support tubein COIL

 COIA = inner skin tubein COIL

 COIB = outer skin tubein COIL

 COIR = barrel return flux tubein CENT

 CORE = end cap return flux diskin CENT

 all volumes positioned if the material type > 0

 Central field active up to beginning of COIS

- COILDEF : steering routine for coil defaults (DETP bank)

 calls : - COILDF1 : coil definition up to 31-01-94

- COILDF2 : new coil definition ( CENT geom 2)

DETP BANK:

 ****************

DETP parameters description, DETP name = COIL

 3=inner radius COIL4=outer radiusCOIL

5=zmaxCOIL

6=material mother volume

7=material conductor

8=tickness conductor

9=material cond. supp

10=tickness cond. supp

11=material mother skin

12=tickness mother skin inner

13=material mother skin

14=tickness mother skin outer

15=inner rad. return flux

16=outer rad. return flux

17=zmax return flux

18=etamax endcap return flux

19=material return

20=zmax of the good field (if=0 ignored)

21=inner radius of conductor (if=0 it will be calculated)

22=number of special layers in the conductor=i

22+(I-1)*3+1=material type

22+(I-1)*3+2=inner radius

22+(I-1)*3+3=thickness

DATACARDS:

************

default datacard for COIL geometry:

*MODE 'COIL' 'GEOM' 1 'PRIN' 0 'MFLD' 1

to change DETP via datacard

*DETP 'COIL' 4=...

## Chapter 8 TILECAL Documentation

PATCH : TILECAL in DICE.CMZ //DICE/TILECAL/

This patch contains all code needed in dice to define the Hadronic TILE calorimeter. This patch is on the responsability of the TILECAL detector unit (contact M. Nessi for more informations)

DICE general routines:(TILECAL)

************************************************

- TILEGEO : steering routine for the geometry definition

calls : H8BAGEO for the definition of the tilecal

TILERFL for the definition of the return flux

- TILEDEF : steering routine for TILECAL defaults

calls : TILEDF1 defaults parameter for the tilecal

and fill DETP bank

- TILESTE : called by GUSTEP in the tile scintillator

Store hits bank : 1-word= energy lost/scintillator/track

index = i=TETA2=IPHI 3=ISCI(long)

Energy is corrected by the saturation law.

- TILERRI : print out routine called with iprin=1

- TILEDIG : steering routine for tilecal digitization (CALODIG)

Calodig calls TILRERA for the definition of a readout cell

- TILEUNP : example of getting the energy out of the digi structure

SPECIAL ROUTINES:

************************************************

- H8BAGEO: organizes the geometrical definition of the barrel

and extended barrel. Define HITS,DIGI and DETG structure.

Devides calorimeter in wedges or sector modules.

Each sector modules is geometrically defined in the

routine H8BAWED.

> geometry definition of the barrel (TILE)

 Mother volume : TILE

 sector module : H8BM ( # of wedges= par 9)

 1 period of a sector module : H8CE (elementar cell)

 1 scintillator : H8SC ( # of scintillators = par 40)

 calor wedge definition via H8BAWED (usig DETP from 1 :100)

> hits definition of the barrel (TILE); filled in TILESTE routine

 SET=TILE DET=H8SC

 detector type = TILE slug faculty

 via GSDET : NAMESV: 1= eta cell :H8CE volume

 2= phi cell :H8BM volume

 3= long cell:H8SC (id of scintillator in R)

 --> 3 volumes stored ( 11 bits, 11 bits, 10 bits)

 --> 1 word (32 bits) store per HIT ( energy loss in scint.)

 --> FACT= 1.E7 ORIG=0.

> digi definition of the barrel (TILE); filled in TILEDIG routine

 SET=TILE DET=H8SC

 number of element = number of longitudinal cells : par 32

 via GSDETD: NAMESD: 1= sam1 : energy sampl. 1

..i= sami : energy sampl. i

> geometry definition of the extended barrel (TIXE)

 Mother volume : TIXE

 sector module : X8BM ( # of wedges= par 9)

 1 period of a sector module : K8CE (elementar cell)

 1 scintillator : X8SC ( # of scintillators = par 40)

 calor wedge definition via H8BAWED (usig DETP from 101:200)

> hits definition of the ext. b (TIXE); filled in TILESTE routine

 SET=TIXE DET=X8SCdetector type = TIIE slug faculty

 via GSDET : NAMESV: 1= eta cell :X8CE volume  2= phi cell :X8BM volume  3= long cell:X8SC (id of scintillator in R)

 --> 3 volumes stored ( 11 bits, 11 bits, 10 bits)  --> 1 word (32 bits) store per HIT ( energy loss in scint.)  --> FACT= 1.E7 ORIG=0.

 > digi definition of the ext. b (TIKE); filled in TILEDIG routine

 SET=TIXE DET=X8SC

 number of element = number of longitudinal cells : par 132

 via GSDETD: NAMESD: 1= sam1 : energy sampl. 1 ..i= sami : energy sampl. i

 - H8BAWED: geometrical definition a la RD34 of a sector module  In the mother volume first the end plates, the support  structure is defined. In the remaining iron structure  the scintillator tiles and the air gaps are placed .  All parameters are defined in DETP.

 - BCHARET: Field map definiton of the return flux in the tile  calorimeter. This is for the moment one ad hoc solution  until we get the real field map. All parameter are in DETP.

 DETP BANK:  ********

 DETP definition barrel (+extended barrel =+99)

 geometrical tileal parameters (defaults in tiledef)

 2= calo x size [590 cm]  3= offset [0.]  4= cell size in x [1.8 cm]  7= shower material type [10]  8= sensitive material type : [26]  9= number of modules in the 2pi [64]  10= number of modules : [64]  11= rmin [225 cm]  12= rmax [420 cm]13= Dr support external [40 cm]

14= Dr support internal [1 cm]

15= scintillator tickness [3mm]

16= delta fiber space [0.25 cm]

17= delta air [0.050 cm]

18= hole distance [7. cm]

19= hole diameter [0.65 cm]

20= hole material [10]

21= source diameter [0.20 cm]

22= source material [27]

23= ticknes profile1 external support [11 cm]

24= space reserved for fiber near to 1 profile [.5 cm]

25= width vertical profile [3.5 cm]

26= ticknes external profile [10 cm]

27= later plate tickness [2 cm]

30= ETA granularity [0.1]

31= ETAmax (as reference) [3.0]

32= number of long samplings [4.]

33-35= tiles / sampling [3,3,3,2]

36= noise/cell [0.000]

37= cell thereshold [0.00]

40= number of scintillators [11]

40+1=R position cm

40+2=DR : 9.8 cm

return flux parameter

90= tickness COIR inbetween barrel and ext barrel

91= tickness COIR after ext barrel

92= tickness CORE

93= usefull area for return flux in the module support

DETG BANK:

********

DETG definition barrel (+extended barrel =+99)

BANK NAME= TILE

1(+99) = 1 (+99)

2(+99) = Rmin active

3(+99) = Rmax active

4(+99) = Data

5(+99) = Dphi

6(+99) = ETAMAX (reference)

7(+99) = # of longitudinal samplings

11(+99)+I :where I=1,# of long. samplings = # scintillators /sampl

[MISSING_PAGE_FAIL:28]

## Chapter 9 Bank Documentation

The ZEBRA bank description, built by DZDOC[5], is available for the following detectors :

* coil: appendix A
* cope: appendix B
* cops: appendix C
* ccal: appendix D
* ende: appendix E
* gaas: appendix F
* msgc: appendix G
* sit: appendix H
* sitv: appendix I
* tile: appendix J
* trig: appendix K
* xtrd: appendix L

## Appendix A coil* 19 0. material return
* zmax of the good field (if=0 ignored)
* inner radius of conductor (if=0 it will be calculated)
* number of special layers in the conductor=i
* 23 11. material type first layer
* inner radius

* 26 37. material type second layer
* inner radius

**Appendix B**

**cops**

[MISSING_PAGE_EMPTY:34]

18 25 dead material
19 1. - thickness first layer
20.4 - thickness second layer
21 37. support material
22.5 - thickness first layer
23.5 - thickness second layer
24 13. first tapered material type
25 3. number of pcon def 3 var/def
26-28 PCON1 : 351.00 71. 120.
29-31 PCON2 : 351.29 71. 115.
32-34 PCON3 : 351.32 71. 71.
35 13 second tapered mat. type
36 4. number of pcon def 3 var/def
37-39 PCON1 : 355.1 71. 160.
40-42 PCON2 : 355.55 71. 135.
43-45 PCON3 : 355.59 71. 85.
46-48 PCON4 : 355.61 71. 71.
49 38. cables material
50.8 - thickness
51.8 - thickness

DETG COPE geometry parameters for reconstruction

----------------------------------------------------- entered file at 11-Nov-94 18: 3

Bank IDH DETG COPE geometry parameters for reconstruction

Author Marzio Nessi

ND 100

Up COPE -1

IO-Charac -F

----------------------------------------------------- Description of the data words -----------------------------------------------------

1-100 default: description (if known!)

1 1. - position index

2 ETAMAC

3 2.

4 RMI

5 RMA?

11 RAD1+ZPO

12 ETAGR1

13 PHIGR1

14 TCKACT1

21 RAD2+ZPO

22 ETAGR2

23 PHIGR2

24 TCKACT2

## Appendix C

[MISSING_PAGE_EMPTY:37]

- electronics material
* thickness first layer
* thickness second layer
* 18 25 dead material
* thickness first layer
* thickness second layer
* 21 37 supp material
* thickness first layer
* thickness second layer
* 24 13 first tapered material type
* 25 4 number of pcon def (3 var/def)
* 26-28 PCON1 : 0. 137. 137.49
* 29-31 PCON2 : 78. 137. 137.31
* 32-34 PCON3 : 100. 137. 137.24
* 35-37 PCON4 : 175. 137. 137.0
* 38 13 second tapered material type
* 39 6 number of pcon def (3 var/def)
* 40-42 PCON1 : 0. 142.1 142.49
* 43-45 PCON2 : 50. 142.1 142.48
* 46-48 PCON3 : 150. 142.1 142.30
* 49-51 PCON4 : 178. 142.1 142.29
* 52-54 PCON5 : 260. 142.1 142.03
* 55-57 PCON6 : 270. 142.1 142.03
* 58 38 cables material
* thickness in
* thickness out

DETG COPS geometry parameters for reconstruction

--------------------------------------------------------- entered file at 11-Nov-94 18: 3 Bank IDH DETG COPS geometry parameters for reconstruction Author Marzio Nessi ND 100 Up COPS -1 IO-Charac -F ------------ Description of the data words ---------------------------------------------------------

1-100 default: description (if known!)
1 1 position index
2 ETAMAC
3 2.
4 ZMI
5 ZMA
11 RAD1
12 ETAGR1
13 PHIGR1
14 TCKACT1
21 RAD2
22 ETAGR223 PHIGR2

24 TCKACT2

DETA COPE/COPS GENERIC analysis parameters

------------------------------------------------------ entered file at 11-Nov-94 18: 3 Bank IDH DETA COPE/COPS GENERIC analysis parameters

Author M.Nessi

ND 100

Up COPS -1

IO-Charac -F

------------------------------------------------------ Description of the data words ------------------------------------------------------

1 - not used

2 0. EM barrel cell threshold

3 0. End cap cell thereshold

4 1. calibration mode

5 0. EM barrel cell nois

6 0. End cap cell nois

## Appendix D

[MISSING_PAGE_EMPTY:41]

- electronic thickness (front)
* electronic thickness (back )
* Material of support (27??)
* support thickness (front)
* support thickness (back)
* support thickness (back)
* Material INTER (MATINTE)
* thickness front (TCKINTER)
* thickness back
* Dead material (MATDEAD)
* Thickness dead (front)
* thickness dead (back) (0)
* Material CLAD
* Thickness CLAD (pb+glu+fe)
* Material sho
* Material glue (27)
* tck sho
* thickness glue (TCKGLUE)

* glue thickness (TCKGLU)

* cell thereshold(GeV)
* cell noise(GeV)

DETG ECAL geometry parameters for reconstruction

------------------------------------------------------------- entered file at 11-Nov-94 18: 3 Bank IDH DETG ECAL geometry parameters for reconstruction ND 100 Up ECAL -1 IO-Charac -F ------------- Description of the data words ------------------------------------------------------------
1-100 default: description (if known!)
2 - RMI
3 - RMA
4 - ETAGR
5 - PHIGR
6 - ETASHO(NETAL)
7 - (float) NRGR
8 - (float) NETAL
12 - (float) JLAYT/NRGR+i, (i=1,NRGR, last is JLAYT!)
22 - ETASHO(I), I=1,Netal

DETA GENERIC shower reconstruction parameters

------------------------------------------------------------- entered file at 11-Nov-94 18: 3 Bank IDH DETA GENERIC shower reconstruction parameters Author P.NevskiND 100 Up ECAL -1 IO-Charac -F ------------ Description of the data words ------------
1-14 default: description:
1 0 - not used
2 10 - Cluster Et Threshold
3 0 - cell threshold
4 7 - First pass threshold Et
5 1 - Calibration mode (-1 - no calibration)
6 0 - EM cell noise in barrel
7 0 - EM cell noise in end cap
8 2 - baseline box type for preclustering (1-3x3 2-5x5,3-7x7)
9 4 - number of isolation cones to be proceed (<=5)
10.15 - Radius of the first isolation cone
11.20 - - " - of the second
12.30 - - " - of the third
13.40 - - " - of the fourth
14 0 - - " - of the fivth
# Electrical Tests of SCT Hybrids and Modules

ATLAS project Document

Institute Document No.

Created: 14/11/00

Page: **1 of 69**

**ATL-INDET-**

Modified: 19/03/03

Rev. No.: 3.38

Electrical Tests of SCT Hybrids and Modules

###### Abstract

This document aims to describe each of the electrical (readout) tests of SCT hybrids and modules that will be performed during production. A number of test sequences designed to simplify the task at hand are also presented.

The methodology of each test and the subsequent analysis of its data are outlined. A number of possible defect types that can be identified by each test is given, and a table of values to be recorded in the ATLAS SCT production database is defined. In each case an example is included of the ASCII file output by the analysis software and designed to be read into the production database.

Prepared by:

**Peter W Phillips, RAL**

**Lars Eklund, Uppsala University**

Checked by:

**Bruce Gallop, Birmingham / RAL**

**Didier Ferrere, Geneva**

Distribution List

\begin{tabular}{|c|c|c|c|} \hline \multicolumn{4}{|c|}{**HTLAS Project Document**} & Page: **2 of 72** \\ \multicolumn{4}{|c|}{**ATL-INDET-**} \\ \hline \hline \multicolumn{4}{|c|}{**HTLAS Project Document**} \\ \hline \multicolumn{4}{|c|}{**ATL-INDET-**} \\ \hline \hline \multicolumn{4}{|c|}{**HTLAS Project Document**} \\ \hline \multicolumn{4}{|c|}{**ATL-INDET-**} \\ \hline \hline \multicolumn{4}{|c|}{**HTLAS Project Document**} \\ \hline \multicolumn{4}{|c|}{**ATL-INDET-**} \\ \hline \hline \multicolumn{4}{|c|}{**HTLAS Project Document**} \\ \hline \multicolumn{4}{|c|}{**ATL-INDET-**} \\ \hline \hline \multicolumn{4}{|c|}{**HTLAS Project Document**} \\ \hline \multicolumn{4}{|c|}{**HTLAS Project Document**} \\ \hline \multicolumn{4}{|c|}{**ATL-INDET-**} \\ \hline \hline \multicolumn{4}{|c|}{**HTLAS Project Document**} \\ \hline

[MISSING_PAGE_FAIL:3]

[MISSING_PAGE_EMPTY:4]

[MISSING_PAGE_EMPTY:5]

## 1 Introduction

The ATLAS SemiConductor Tracker (SCT) will be composed of a mosaic of 4088 silicon microstrip detector modules: 2112 barrel modules mounted on four cylinders and 1976 end-cap modules mounted on eighteen disks. For the purposes of detector module assembly the SCT collaboration is organised into a number of clusters. As an essential part of the production, thorough Quality Assurance (QA) procedures have been defined for use by the barrel [1] and end-cap [2] communities. Within each cluster, assembly tasks and QA responsibilities are distributed between the member institutes and universities.

This note describes the electrical measurements performed on the detector modules during production. Under the QA scheme, such tests are performed at many points in the production sequence. A basic set of tests has been defined, from which two standard test sequences have been drawn. The short sequence (ConfirmationTest) is optimised for fast execution, focusing on detecting failures that might occur on detector modules. The long sequence (CharacterisationTest) gives a more complete characterisation of the module, to detect more subtle deviations from the specification and provide a reference data set for macro assembly of detector modules onto barrels and end-cap disks.

In addition to this, three long-term tests have been devised. These are performed to provoke infant mortality and to demonstrate the long-term stability of each detector module under nominal operating conditions. The test sequences are designed to monitor failures that might occur and to track the evolution of certain critical parameters.

Electrical tests are performed using the SCTDAQ system as described in Section 2. The results of each test may be uploaded into the SCT Production Database [3], used to trace components, store results from QA procedures and register actions performed on modules during the production. The interaction between SCTDAQ and SCTDB is also outlined in Section 2.

## 2 System Overview

### The electrical characteristics of the SCT detector module

An SCT module comprises two planes of silicon microstrip detectors glued back to back. Small angle stereo geometry is used to provide positional information in two dimensions, an angle of 40 mrad being engineered between the axes of the two sides. The barrel module uses two pairs of rectangular detectors with parallel strips to give an active strip length of approximately 12cm. Three designs of different radial geometries are used in the end-cap region: inner, middle and outer modules.

A module is read out by 12 ABCD3TA ASICs [4] mounted on a copper/kapton hybrid circuit. Manufactured in the radiation hard DMILL process [5], each chip provides sparsified binary readout of 128 detector channels. The amplified and shaped input signal is compared to a programmable threshold having two components: a single 8-bit DAC applied across the whole chip, and a channel specific 4-bit DAC designed to compensate for channel-to-channel variations. The resulting hit pattern is transferred into a binary pipeline, 132 cells deep. Upon receipt of a Level 1 Accept (L1A) trigger, the pipeline output is transferred into a de-randomising buffer that can store up to 8 events.

The first chip on each side of the module, designated as the master chip, is responsible for the electrical transmission of data to the read-out system. Within the module a token passing scheme is used to control the transfer of data to the master chip for onward transmission. This scheme incorporates several redundancy options such that, should any single chip fail, the remaining chips can still be read out.

In ATLAS, an optical scheme will be used to communicate with SCT detector modules. In the barrel region the conversion between the optical and electrical domains takes place entirely off the module, hence a full production test of a barrel module may be performed using simple LVDS clock and command signals. In the end-cap module, some components of the optical link are mounted directly on the hybrid leaving the PIN diode receiver and VCSEL diode transmitters to be added by means of an "opto plug-in". To perform a complete functional test of an end-cap module one needs to use an opto plug-in or an electrical simulation thereof. For production testing it is proposed to do the latter.

### The SCTDAQ system

During production testing, a set of custom VME modules is used to read out the detector modules. A schematic diagram of the readout system is shown in Figure 1. The CLOAC MASTER module provides the system wide 40.08MHz clock and generates fast commands such as L1A. Fast commands may be generated in response to an external trigger source or as a burst comprising a specified number of triggers at a designated frequency, however for the majority of the electrical tests performed during module production individual triggers are generated in response to VME commands. SLOG distributes the clock and fast command signals generated by CLOAC to up to 12 detector modules. It also generates the slow command data needed to configure the detector modules. MuSTARD receives data from up to 6 detector modules, or 12 data streams, decodes the events and creates histograms the data. Individual events may be transferred to the host computer if more detailed analysis is required. Each SCTLV module provides low voltage power for two detector modules and reads out the NTC thermistors mounted upon the SCT modules. The companion module SCTHV provides detector bias for four detector modules at up to 500V.

Within ROOT, the system is started by running an interpreted macro that calls upon the functions of the shared library to initialise the VME boards and configure the SCT detector modules to their default operating conditions. Simple tests and configuration changes may be performed directly from the CINT console. Each electrical test has been implemented in the form of a discrete ROOT macro which may be run by pressing a button within the menu system, by running an overall "sequence macro" or by direct user input at the command prompt. At the end of each scan a ROOT file is generated which contains the scan data for each module, records of error and event counters and some module configuration and DCS information.

Analysis of the raw data from each test is performed by a separate root macro that appends results to a text file, one per hybrid or module per day, such that the results of each test in the sequence are kept together in one file. The Java application jSCTDAQ [8], called by the ROOT macro DBUpload.cpp, is used to prepare the data for upload directly into the SCT production database. Many tests also generate results in the form of plots within a postscript file. These may be stored on web server of a cluster's own choice, in which case a link to each plot can be placed into the database entry for the corresponding test. In future the software may be revised to keep a number of the derived histograms for each module together in a separate root file.

Figure 1: Schematic showing SCTDAQ system

### Test results and the SCT Database

The following table is reproduced from the list of SCT Database table definitions [9].

**TESTS:** General Details of Tests on Items

\begin{tabular}{|l|l|l|} \hline
**Column Name** & **Type** & **Description** \\ \hline _SER_NO_ & _Long int_ & Atlas serial no. of item_ \\ \hline _TEST_NO_ & _Long int_ & _ID no. of test_ \\ \hline _RUN_NO_ & _Char(80)_ & _Data taking run no._ \\ \hline _TEST_NAME_ & _Char(20)_ & _Name of test_ \\ \hline _TEST_DATE_ & _Date_ & _Date of test_ \\ \hline _LOCN_NAME_ & _Char(50)_ & _Location of test_ \\ \hline _INITLS_ & _Char(4)_ & _Initially of user_ \\ \hline _PASS_ & _Boolean_ & _Passed unconditionally?_ \\ \hline _PROBLEM_ & _Boolean_ & _Problems encountered?_ \\ \hline _SUBSYST_ & _Char(1)_ & _Subsystem code_ \\ \hline _LAST_MOD_ & _Date_ & _Date record last updated_ \\ \hline _OWNER_ & _Char(30)_ & _Owner institute of the record_ \\ \hline _Primary Key:_ & _TEST_NO_ & \\ \hline _Foreign Key:_ & _SER_NO_ & _ITEMS(SER_NO)_ \\ \hline _Foreign Key:_ & _TEST_NAME_ & _TEST_DESCR(TEST_NAME)_ \\ \hline _Foreign Key:_ & _LOCN_NAME_ & _LOCN(LOCN_NAME)_ \\ \hline _Foreign Key:_ & _INITLS_ & _PERSONS(INITLS)_ \\ \hline \end{tabular}

For each electrical test performed upon a hybrid or module an instance of the above object will be added to the database, hence the serial number, run number, location and tester are always recorded.

Digital tests will set the "PASS" field to "NO" if more than a specified number of defects are found: many of the analogue tests do not make use of this field. The "PROBLEM" field is not used by the electrical test software and is set to "NO" in all cases. The remaining fields shown in the above table are for internal use by the database.

Information specific to each electrical test is recorded in one or more data tables, defect objects and/or raw data files, all of which are linked to the relevant instance of the basic test object described above.

A number of utility tables have been designed to store information that it is desired to record for a number of tests, such as monitored DCS parameters. This has greatly simplified the definition of the tables needed to store the results of each specific test, since all common factors have been removed. The definitions of the utility tables can be found in appendix 1.

In addition to the utility tables, a table has been designed to record the results of each test. These tables are defined in appendix 2. There is a direct link to each table from the relevant section of the text. The list of defects that may be identified by each test are detailed in the test and summarised in appendix 3.

Additional configuration information or more detailed results may be stored in the form of (ASCII) raw data. A list of all database tables specific to the electrical testing of hybrids and modules, showing their implementation status, can be found in appendix 4.

### Purpose of the Test Sequences

The electrical measurements performed as part of detector module Quality Assurance are drawn from a pool comprising around 13 component tests. Each test has been designed to determine a certain set of parameters and/or to identify a number of specific defects or failure modes. The full set of measurements demonstrates the complete functionality of a module and provides measurements of all electrical parameters judged important to monitor module quality. Used in conjunction with the SCT database query tool, this information can be used to track points of failure and to evaluate yield statistics. As all measurements and actions performed on a detector module will be registered in the database, failures can be correlated with steps of the assembly and QA sequence.

As mentioned previously, the individual digital and analogue tests described in sections 5 and 6 have been grouped into two test sequences which may be used as part of three long-term tests. The Characterisation Test is outlined in section 3.3 and the Confirmation Test is described in section 3.4. The three long-term tests are outlined in section 3.5 and detailed in section 7. Several tests have been defined which are not part of the standard sequences, since their application is dependent upon the device under test (e.g. IV Curve) or upon the state of the set-up (e.g. Stream Delay Test): these tests are outlined in section 3.2 and detailed in section 4. Finally, section 3.7 gives references to other module test activities that, although beyond the scope of this document, form part of our QA procedures on a sampling basis.

### Standardone Tests - not included in the standard test sequences

The following tests do not apply in all scenarios, hence they have been omitted from the characterisation and confirmation sequences. It is left to the user to run them manually as required by means of the menu system.

* IVCurve.cpp This test records the leakage current as a function of the applied detector bias. The bias voltage is increased in discrete steps of typically 25 volts until the requested upper limit is reached. At each step of the voltage ramp the leakage current is measured and the data is stored as a text file for upload to the SCT database and shown graphically as an IV curve.
* StreamDelay.cpp Stream Delay is a parameter internal to MuSTARD that adjusts the relative phase between each input data stream (from a detector module) and the system clock. It should be set such that the data is sampled well away from the transition regions. Its value is dominated by system considerations such as cable length; hence this test is usually performed only when setting up a readout system2. The stream delay settings should then be copied into the system configuration file such that they are used each time the system is started. It is not necessary to run this test before each test sequence.

* [leftmargin=*]
* Opto Functionality Tests (not yet implemented) This measurement will be used to verify the functionality of the optical link components that are mounted on the end-cap hybrid. It does not apply to barrel hybrid or modules.

### CharacterisationTest.cpp

**The Characterisation Sequence** aims to verify the basic digital functionality of a hybrid or module, and to fully characterise its analogue performance. The results will be used to determine whether a module is of sufficient quality to be used in ATLAS, and will also serve as a reference data set for subsequent measurements at macro assembly sites. The menu system contains a button to start the sequence, which comprises the following tests:

* **Digital Tests:*
* HardReset.cpp The module/hybrid is clocked and the power is switched on. Using an oscilloscope connected to monitor points provided on the MuSTARD front panel, the operator must verify that each dualink responds with CLK/2 and that, after the chips have been configured, the clock feedthrough signal stops. The analogue and digital currents are then recorded. Finally Hard Reset is issued to bring back the CLK/2 signal. This test verifies that the Clock, Command and Hard Reset signals are received correctly, that the chips can be configured and that the current consumption is reasonable. The test will identify modules/hybrids with severe failures and/or cases where devices have been connected incorrectly. Every module must pass this test without error. This is the only test that would normally require operator intervention.
* **RedundancyTest.cpp** The chips are configured to return the contents of the Mask Register and a burst of triggers is issued for each of the Primary and Redundant Clock and Command options. Prior to each event, a different bit pattern is loaded in the Mask Register such that consecutive events are not the same. By comparing the received data with expectation it is verified that both the Primary and Redundant Clock and Command signals are received correctly and that the top address bit of each chip changes as the Clock/Command source is varied, as specified in the module design. This test will identify modules/hybrids with faulty command reception or addressing errors. Modules/hybrids with such defects would be considered to have failed pending further investigation and possible network.
* **FullBypassTest.cpp** A trigger burst is recorded with the module/hybrid programmed to each of a number of different configurations, sufficient to exercise all data/token passing links between the chips. In each case the chips are configured to return the contents of the Mask Register such that the expected data is accurately known. The test is repeated across a range of digital supply voltages to determine the minimum value of the digital supply voltage needed for the correct functionality of each of the data/token passing links. Any link that did not work at the nominal supply voltage of 4.0V, which could not be identified as being due to a missing wirebond and subsequently repaired, would cause a module/hybrid to be rejected.
* **PipelineTest.cpp** For this test, a Soft Reset command is sent to reset the pipeline followed a certain number of clock periods later by a Pulse Input Register command and L1A trigger. In this way, a known pattern is injected into a given location in the pipeline. By varying the distance between the Soft Reset and Pulse Input Register commands it can be verified that each of the eleven blocks within the pipeline is free of defects. The pipeline is scanned twice: once with all channels enabled to identify dead cells and dead channels; once with all channels disabled to identify stuck cells and stuck channels. Modules/hybrids with a large number of dead or stuck cells or channels will be rejected.

#### 3.3.2 Analogue Tests:

* StrobeDelay.cpp This scan is performed to determine the correct Strobe Delay setting, corresponding to the timing of the charge injection pulse, to be used during the Analogue Tests.
* ThreePointGain.cpp (untrimmed) Threshold scans are taken for three injected charges to facilitate a quick measurement of gain, noise and the discriminator offset. Pathological channels are categorised as FAULTY if the defect would result in the channel having a reduced but non-zero detection efficiency in ATLAS, or as LOST if the defect would result in the channel having zero efficiency: _Lost: Dead, Stuck, Unbonded or Noisy channels Faulty: Inefficient, Low Gain or Partially Bonded channels_ Modules/hybrids having any chips with abnormal gain or high noise will be rejected and put aside for potential rework, as will those with large numbers of pathological channels.
* TrimRange.cpp For each of the four possible TrimRange settings, a series of Threshold scans are performed for a subset of the sixteen possible TrimDAC settings, all with 1fC injected charge. For each TrimRange setting a straight line is fitted to the data for each channel to characterise the TrimDAC response and to determine the TrimDAC slope. The number of trimmable channels and the spread of the resultant trimmed thresholds are also recorded. The optimised TrimDAC settings and a list of (untrimmable and noisy) channels to be masked are produced for use in the subsequent analogue tests. The chips used to build modules will have been selected such that all channels may be trimmed using TrimRange 0 or 1. Modules for which less than 99% of the channels meet this specification will be rejected and put aside for potential rework, as will those where a particular TrimRange has a slope other than that expected.
* ResponseCurve.cpp Threshold scans are performed for a series of input charges and, for each channel, an appropriate function is fitted to the resulting response curve. From this the Gain, Noise and discriminator Offset are extracted. The parameters from the fit are stored since they describe the correspondence between the Threshold, in mV, and input charge, in fC. The categorisation of pathological channels is repeated as described for the Three Point Gain measurement. Modules/hybrids with a large number of pathological channels will be rejected.
* NO.cpp A high statistics Threshold scan is performed at the nominal ATLAS trigger rate of 100kHz, without any injected charge, to determine the Noise Occupancy of each channel as a function of Threshold. The analogue and digital current consumption as a function of Threshold is recorded. Channels with high Noise Occupancy will be added to the list of masked (lost) channels.
* Timewalk.cpp This test performs a series of Strobe Delay scans with the Threshold set to 1 fC, varying the input charge from 1.25 to 10 fC. In each case a fit is made to the rising edge of the pulse to determine the Strobe Delay value needed to obtain 50% occupancy. The Timewalk is defined as the time variation in the crossing of a threshold of 1fC over a signal range of 1.25 to 10.0fC. This parameter is calculated and recorded.

### ConfirmationTest.cpp

**The Confirmation Sequence** aims to verify, as quickly as possible, that the performance of a hybrid or module has not deteriorated, perhaps as a result of handling or shipping. The test sequence is a sub-set of the Characterisation Sequence described in Section 3.3.

The digital tests that are part of this sequence are chosen to help identify damaged wirebonds and the analogue tests, whilst sufficient to demonstrate that the basic performance is as expected, avoid the more time consuming tasks such as trimming or a measurement of the noise occupancy. The menu system contains a button to start the sequence, which comprises the following tests:

#### 3.4.1 Digital Tests:

\begin{tabular}{l l}
* HardReset.cpp \\
* RedundancyTest.cpp \\
* FullBypassTest.cpp \\
* PipelineTest.cpp \\
3.4.2 Analogue Tests: \\
* StrobeDelay.cpp \\
* ThreePointGain.cpp (trimmed or untrimmed, as appropriate) \\ \end{tabular}

### Long-term tests

Three long-term tests with electrical readout are performed as part of the Barrel Hybrid/Module Quality Assurance scheme:

* HybridLTT.cpp The hybrid is operated at an elevated temperature to provoke infant mortality of its components, notably the ASICs. Initially the duration of the test will be 90 hours, however this time may be adjusted in response to production experience. Voltages, currents, temperatures and noise occupancy are monitored throughout the test. This test sequence must be performed on every readout hybrid before it may be accepted for use in a detector module.
* HybridColdTest.cpp Running at the nominal ATLAS SCT operating temperature, each hybrid is tested to demonstrate its correct, stable operation at low temperature. Initially the duration of this test will be 10 hours, however this time may be adjusted in response to production experience. Voltages, currents, temperatures and noise occupancy are monitored throughout the test. This test sequence must also be performed on every readout hybrid before it may be accepted for use in a detector module.
* ModuleLTT.cpp Running at the nominal ATLAS SCT operating temperature, each module is tested to demonstrate its correct, stable operation at low temperature, including the stability of the leakage current in the silicon sensors. Initially the duration of this test will be 24 hours, however this time may be adjusted in response to production experience. Voltages, currents, temperatures and noise occupancy are monitored throughout the test. This test sequence must be performed on every module before it may be accepted for use in ATLAS.

[MISSING_PAGE_FAIL:14]

[MISSING_PAGE_FAIL:15]

#StrobeDelay

#DELAY
#MOS1S2S3S4E5 -1-1-1-1617

#HMBSS9S10S11S1S12E13
171516161618

A list of defects is generated if any defects were found by the test. The types of defect that are identified by each test are described in the corresponding section of this document and summarised in appendix 3. Each defect is prefaced by the tag "%Defect".

Here is a list of defects found by the StrobeDelay test:

#Defect DEFTNAME : SD_LO FIRSTCHANNEL : 0 LASTCHANNEL : 127 #
#Defect DEFTNAME : SD_HI FIRSTCHANNEL : 128 LASTCHANNEL : 255 #

Now we list any raw data files which are to be associated with the test3.

#TESTRawdata FILENAME : D:{sctvar}results{20220170100016_rc_246-12.txt} There are two other types of valid SCT production database objects that may be generated by the electrical test software. Comments may be added to the results file in the event that an error occurred during the test. This is done by the Long Term Test: if the test should be stopped before the scheduled end, the reason for its failure will be stated in the form of a comment.

#Comment COMENT : TestfailedduetHighVoltageTrip Finally, at the discretion of the user, any PS files generated by a test may be listed such that they will appear in the SCT production database in the form of web links.

#Weblink DESCRIPTION : Plots(postscript) URL : [http://my.server/~mydir/myscript.pl?file=filename.ps](http://my.server/~mydir/myscript.pl?file=filename.ps) This is intended such that a database user can have direct access to the plots, however this requires that each test site or cluster chooses to store its plots on a publicly accessible web server, and provides a suitablescript to locate and return the requested plot. This functionality must be enabled by the user, who does so by editing the value of the parameter WEB_KEY in the file sctdaq/macros/parameters.h.

Further examples are given throughout the remainder of the document.

## 4 Description of Standalone Tests

### IVCurve.cpp

This test has been designed for users of the SCTHV high voltage power supply module. Those without access to this module may wish to perform a similar test using other hardware. If the results are stored in the same format, they may still be uploaded to the database.

#### 4.1.1 Method

A menu is presented from which a number of options for the IV curve may be selected:

```
RecordIVCurvetowhichuppervoltage: 0-don'tbother 1-200Vin10Vsteps,10swait,endat200V 2-350Vin19Vsteps,10swait,endto200V 3-500Vin10Vsteps,10swait,endto200V(estimate13min40sec) 4-500Vin25Vsteps,088wait,endat200V(estimate04min25sec) 5-500Vin25Vsteps,04swait,endat200V(estimate03min05sec) 6-500Vin25Vsteps,04swait,rampdownandSWITCHOPHV 7-200Vin25Vsteps,04swait,endat200V 8-350Vin25Vsteps,04swait,endto200V (Timeestimatesassumethatramprate2isselected.)
```

For the initial production test of each SCT module, option 4 is recommended. Option 6 is provided for users wishing to demonstrate that an SCT hybrid may withstand the full bias voltage of 500V. It is recommended that the number of times for which the module bias is taken to 500V should be kept as low as is possible: to this end options 7 and 8 have been provided. A firmware current limit of 100 \(\upmu\)A, set high to allow for charging currents, is imposed throughout the sequence. If this limit is exceeded, the voltage will trip off. Once the requested voltage has been reached, the current is recorded after the desired setting (wait) time has elapsed. In addition, should a module draw more than 10 \(\upmu\)A current after the alloted settling time, the voltage applied to that module will not be raised further.

At any point during the test, the user may push the ABORT button to cancel the test and ramp down the high voltage. If the STOP button is pressed the high voltage will ramp directly to the chosen end point, typically 200V. During production testing this test would usually be performed before the chip bias has been applied but there may be exceptions to this rule, hence it is necessary to record the voltages supplied to, and the currents drawn by, the hybrid. This is achieved by sampling all monitored DCS parameters when the bias voltage has reached its highest point. The information is recorded within an instance of the database table TSTDCSINFO.

#### 4.1.2 Analysis

If a current drawn by a module exceeds the lower limit of 10\(\upmu\)A, the defect IV_LIMIT is recorded. If the high voltage supply connected to a module trips off, the defect IV_TRIP is recorded.

#### 4.1.3 Database

The following information should be stored in the SCT database:

```
TSTDAOINFO:hostandversioninformation
```

monitored voltages, currents and temperatures TSTMODIV:leakagecurrentsat150Vand350V ```

[MISSING_PAGE_FAIL:19]

[MISSING_PAGE_EMPTY:20]

#### 4.2.4 Hardware Notes

Very rarely, the PHOS4 QUAD delay chips used on MuSTARD may lock incorrectly to the system clock at startup. Under such circumstances each step of its 4 Stream Delay registers will not be equal to the design value of 1nS but \(\sim\)0.6nS (if the PHOS4 is in "FAST" mode) or \(\sim\)1.8nS (if it is in "SLOW" mode). If this has happened, the stream delay settings in the configuration file may or may not yield usable sampling of the received data.

To check the operation of the 3 PHOS4 chips in the MuSTARD, perform a Stream Delay scan and observe that the transition regions occur at the expected delay settings. Note that in "SLOW" mode there will be 2 narrow transition regions, while in "FAST" mode there may be no transition region, or a single region that is shifted and wider than expected. Note also that any such effects occur in blocks of 4 streams: it is possible (but very rare) that streams [0:3] are "FAST", [4:7] are "SLOW", and [8:11] "NORMAL". Power cycling the VME crate usually cures the problem.

A hardware and firmware fix for these effects has been found, but there are no plans to implement it for the many MuSTARDs in use throughout the Atlas community, in view of the disruption that would be incurred, and because it does not appear to be a serious problem. Any MuSTARD found to be particularly susceptible to this problem can have its PHOS4 chips replaced. Contact Maurice Goodrick for further information.

### HardReset.cpp

#### 5.1.1 Method

* The power is cycled such that all chips return to the power on condition. With the aid of an oscilloscope and following the guidance given by the software, the user must verify that each Master chip outputs clock divided by 2. Once this has been completed the currents I\({}_{\text{cc}}\) and I\({}_{\text{dd}}\) are recorded (ICC_NOCONFIG, IDD_NOCONFIG).
* A series of configuration commands is issued to set the clock feedthrough bit high and to program all DACs to nominal values as shown in the table below. The user is prompted to confirm that output of clock/2 by each Master chip has stopped. The currents I\({}_{\text{cc}}\) and I\({}_{\text{dd}}\) drawn in this configuration are recorded within an instance of the TSTDCSINFO table.
* The HARD RESET signal is issued. The user is prompted to check that once more each master chip outputs clock/2.
* The clock is momentarily turned off, and the analogue and digital currents I\({}_{\text{cc}}\) and I\({}_{\text{dd}}\) are recorded (ICC_NOCOLORK, IDD_NOCLOCK).

#### 5.1.2 Analysis

If either datalink should fail to output the clock/2 signal upon power up, that will be recorded as the defect HR_NOCLK. If clock/2 output does not cease upon transmission of the configuration sequence, the defect HR_NOCON is recorded. Finally, if clock/2 does not return after the HARD RESET signal, that is recorded as the defect HR_NORST.

#### 5.1.3 Database

The following information should be stored in the SCT database:

**TSTDAOINFO:**: host and version information
**TSTDCSINFO:**: monitored voltages, currents and temperatures
**TSTHYBRESET:**: digital and analogue currents when not configured or when clock interrupted

DEFECTS:

[MISSING_PAGE_EMPTY:23]

[MISSING_PAGE_EMPTY:24]

#### 5.2.2 Analysis

Each channel is categorised according to occupancy as follows:

\begin{tabular}{|c|c|l|} \hline nhits \({}_{0}\) (select = 0) & nhits \({}_{1}\) (select = 1) & \\ \hline
50 & 50 & Good channel \\ \hline
100 & 100 & Stuck channel \\ \hline
0 & 0 & Dead channel (not yet able to resolve if pipeline or mask defect) \\ \hline
50 & 0 or 100 & ID4 addressing error when select = 1 \\ \hline
0 or 100 & 50 & ID4 addressing error when select = 0 \\ \hline
50 & 0 \(<\) n \(<\) 100 & Command reception is not reliable when select = 1 \\ \hline
0 \(<\) n \(<\) 100 & 50 & Command reception is not reliable when select = 0 \\ \hline other & other & Command reception is never reliable \\ \hline \end{tabular}

During the second stage of the analysis the numbers of channels of each chip which fall into each of the above categories is tallied leading to the categorisation of each chip as shown below. All failures are recorded as defects.

IF ((nch_good>120) AND (remainder STUCK OR DEAD))

**PASS code 0**

ELSE IF (nch_addressing_error_0>120)

**FAIL** code 1 (defect CLK_ADDR0)

ELSE IF (nch_addressing_error_1>120)

**FAIL** code 2 (defect CLK_ADDR1)

**ELSE IF (nch_command_error_0>120)

**FAIL** code 3 (defect CLK_COMM0)

**ELSE IF (nch_command_error_1>120)

**FAIL** code 4 (defect CLK_COM1)

**ELSE FAIL** code 5 (defect CLK_ERROR)

#### 5.2.3 Database

The following information should be stored in the SCT database:

**ISTDAOINFO:**

host and version information

**ISTDCSINFO:**

monitored voltages, currents and temperatures

DEFECTS:

**Defect**

**First Channel**

**Last Channel**

CLK_ADDR0**

**Chip * 128**

**((Chip+1) * 128) -1**

CLK_ADDR1**

**Chip * 128**

**((Chip+1) * 128) -1**

CLK_COMM0**

**Chip * 128**

**((Chip+1) * 128) -1**

CLK_COM1**

**Chip * 128**

**((Chip+1) * 128) -1**

CLK_ERROR**

**Chip * 128**

**((Chip+1) * 128) -1**

#### 5.2.4 Acceptance

None of the defects found by this test are allowable on production modules, hence the "PASS" field will be set to "NO" if any defects are found.

#### 5.2.5 Sample Output from the Results File

NewTest

Serial NUMBER : 20220330200011 TEST MODE BY : PWP LOCATION NAME : RAL Run number : 533-7 TEST_DATE : 21/01/2003 PASSED : YES PROBLEM : NO #

*PDENT3*
#VERSION *3.34*
#OUT *Barrel_Module*
#TIME *17:28:07*

#DCS_INFO #

#T1

27.0 28.0
#VDET IDET 200.0 0.84
#VCC JCC 3.50 950 WVDD IDD 4.00 500 #TIME_POWENED

#RedundancyTest

#RedundancyTest Summary - not for the database
#chip pass good stuck dead adrodr1 com com com com com com
1 218 0 0 0 0 0 0 0 # 1 1 128 0 0 0 0 0 0 # 2 1 128 0 0 0 0 0 0 0 # 3 1 128 0 0 0 0 0 0 0 # 4 1 128 0 0 0 0 0 0 0 # 5 1 128 0 0 0 0 0 0 0 # 6 1 128 0 0 0 0 0 0 0 # 7 1 128 0 0 0 0 0 0 0 # 8 1 128 0 0 0 0 0 0 0 # 9 1 128 0 0 0 0 0 0 0 0 # 10 1 128 0 0 0 0 0 0 0 # 11 128 0 0 0 0 0 0 0 # 11 128 0 0 0 0 0 0 0 #No defects found!

### FullBypassTest.cpp

The module is programmed to each possible configuration with regard to the routing of token and data between the chips. Since the irradiation programme has shown that different chips can have different susceptibilities to radiation damage effects with regard to the token passing, this test is performed over a range of digital voltages, Vdd. In this way the minimum value of Vdd required for the correct operation of each bypass link can be determined, and any inherent difference in the performance of the various links is known upon production.

The number of configurations to be tested is greater for forward hybrids than for barrel hybrids since more redundancy links have been implemented in the forward design.

#### 5.3.1 Method

\begin{tabular}{|c|c|l|c|} \hline \multicolumn{2}{|c|}{} & \multicolumn{1}{c|}{**Method**} \\ \hline \multirow{5}{*}{**ALL-INDET-**} & \multirow{5}{*}{Configuration} & Master/Slave/End & (variable) SEE BELOW & \\ \cline{3-4}  & & Edge Detect & OFF \\ \cline{3-4}  & & Data Compression & X1X \\ \cline{3-4}  & & Mode & MASK + Data Taking & Mode \\ \cline{3-4}  & Select & & 0 \\ \cline{3-4}  & & Masked Channels & None \\ \cline{3-4}  & \multirow{2}{*}{DACs} & Ipreamp & 220\(\upmu\)A \\ \cline{3-4}  & & Ishaper & 30\(\upmu\)A \\ \cline{3-4}  & & Threshold DAC & 500mV \\ \cline{3-4}  & & Calibration DAC & 10mV (1.0fC) \\ \cline{3-4}  & & Delay Register & - \\ \cline{3-4}  & & TrimRange & 0 \\ \cline{3-4}  & & TrimDAC & 0 \\ \cline{3-4}  & \multirow{2}{*}{TRKGER} & Sequence & L1A \\ \cline{3-4}  & & Frequency & - \\ \hline \multirow{5}{*}{**ALL-INDET-**} & \multirow{5}{*}{LOOPS} & \(1-\text{Vdd}\) & 4.0, 3.9, 3.8, 3.7, 3.6, 3.5 \\ \cline{3-4}  & & \(2-\text{Configuration}\) & 
\begin{tabular}{l} Barrel hybrid or module: cases 0 - 35 \\ Forward hybrid or module: cases 0 - 62 \\ \end{tabular} \\ \cline{3-4}  & & nTriggers & 100 \\ \hline \end{tabular}

#### 5.3.2 Analysis

For each configuration, the number of dead channels of each chip is tallied. Chips having more than 120 dead channels are considered to have returned no data, otherwise they are considered to have returned good data. This matrix is then compared with expectation to determine the minimum value of Vdd needed for the correct operation of each bypass link.

A PASS is recorded if all token/data links function correctly at 4.0V. A PROBLEM is recorded if any token/data links fail at lower voltages. Any token/data link that fails will be recorded as a DEFECT, irrespective of the voltage at which this occurs. Each defect will be accompanied by a database comment giving more information about the defect.

Vdd_min will be recorded as 10.0V in the case where a token/data link is not functional at 4.0V. If a link cannot be tested due to a failure elsewhere in the chain, Vdd_min will be recorded as 0V.

#### 5.3.3 Database

The following information should be stored in the SCT database:

**TSTDAQINFO**:

host and version information

**TSTDCSINFO**:

monitored voltages, currents and temperatures

**TSTHYBBPASS**:

minimum Vdd required for operation of each token/bypass link

DEFECTS:

**Defect**

**First Chan**

**Last Chan**

TOKEN **Chip * 128** ((Chip+1) * 128) -1

RTOKEN **Chip * 128** ((Chip+1) * 128) -1

#### 5.3.4 Acceptance

A global "PASS" will be recorded if no defects are found.

#### 5.3.5 Sample Output from the Results File

#NewTest

**SEERIAL NUMBER : 20220330200011 TEST MADE BY : PWP LOCATION NAME : RAL Run number : 533-1 TEST_DATE : 21/01/2003 PASSED : YES PROBLEM : NO

#DA_INFO

*PDNN?' EVERSION '3.34'

#OUT
*Barrel_Module"
#TIME '17:18:00"

#DCS_INFO

#T1

27.0 28.0
#VDET IDF 200.0 0.84 WCC ICC 3.52 930 WVD IDD 3.50 440
#TIME_PONREED.

[MISSING_PAGE_EMPTY:29]

The mask patterns to be used are as follows:

\begin{tabular}{l l}
0. & no channels masked (to identify dead cells) \\
3. & all channels masked (to identify stuck cells) \\ \end{tabular}

#### 5.4.2 Analysis

The number of channels that return data for each scanpoint is tallied - corresponding to the number of good channels. If for a given channel all 12 cells are found to be dead or stuck, then a defect type of DEAD4 or STUCK is recorded. If for any channel the number of dead cells or stuck cells is greater than zero but less than 12, each individual defect is noted as either type DEADCELL or STUCKCCELL.

Footnote 4: In the event that this test finds a channel to be dead, a fault in the mask register would be one possible cause. In combination with the data set from the Redundancy Test it would be possible to identify dead cells in the mask register – but this has not yet been implemented.

#### 5.4.3 Database

The following information should be stored in the SCT database:

\begin{tabular}{l l}
**TSTDAOINFO:** & host and version information \\
**TSTDCSINFO:** & monitored voltages, currents and temperatures \\
**TSTHYPPIPE:** & the number of good pipeline cells in each chip \\ \end{tabular}

DEFECTS:

[MISSING_PAGE_EMPTY:31]

## 6 Description of Analogue Tests

### StrokeDelay.cpp

This test aims to establish the optimum setting of the delay register for each chip, to be used during all subsequent analogue tests. The size of each delay step is known to vary as a function of temperature, hence the strobe delay setting must always be re-optimised each time a device is operated at a different temperature. Sufficient time must always be allowed for the powered, configured hybrid or module to reached thermal equilibrium with its surroundings before this test may be undertaken.

Running with Edge Detect ON, compression 01X, a 4.0fC signal is injected for a threshold of 2.0fC. A functional fit is made to both the rising and falling edges to give the points at which 50% efficiency is achieved. The operating point is chosen to be 25% of the distance between these two points with reference to the rising edge of the strobe delay peak, which corresponds to the falling edge of the signal. By setting the timing some distance behind this edge, good efficiency can be ensured even for small signals. (This method gives answers in close agreement with a point 20% of the way along the plateau for a module of typically 1450 ENC noise.)

#### 6.1.1 Method

The macro first performs a threshold scan with 2fC injected charge and set the threshold of each chip in accordance with the calculated mean VT50 values. Next the actual delay scan is performed as described below:

\begin{tabular}{|c|c|l|c|c|c|c|c|c|c|c|c|c|c|c|c|} \hline  & Configuration & Master/Slave/End & M & S & S & S & S & E & M & S & S & S & S & E \\ \cline{2-19}  & & Edge Detect & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & Data Compression & & & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & Mode & & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & Select & & & & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & Masked Channels & & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & DACs & Ipreamp & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & Ishaper & & & & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & Threshold DAC & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & Calibration DAC & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & Delay Register & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & TrimRange & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & TrimDAC & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & TRKGER & Sequence & & & & & & & & & & & & & & & & & & & & & \\ \cline{2-19}  & & Frequency & & & & & & & & & & & & & & & & & & & & & \\ \hline \end{tabular}

\begin{tabular}{|c|c|c|} \hline ATLAS Project Document & Page: **32 of 72** \\ \hline \multicolumn{1}{|c|}{**ATL-INDET-**} & Rev. No.: 3.38 \\ \hline \end{tabular}

#### Analysis

The analysis as described below is repeated for each chip in turn.

An error function is fitted to the rising edge of a strobe delay peak, corresponding to the falling edge of the signal. Similarly a complementary error function is fitted to the falling edge, corresponding to the rising edge of the signal. The width of the strobe delay peak is now known and the strobe delay register is set to a point 25% of the distance between the two edges, such that the electronics remain efficient for smaller signals.

If the fit to the rising edge of the strobe delay peak returns a value below the permitted minimum of 0 or the fit to the falling edge returns a value above the permitted minimum of 35, the defect SD_LO is recorded. Similarly \(\bar{\mathbf{f}}\) the fit to the falling edge of the strobe delay peak returns a value above the permitted maximum of 63, the defect SD_HI is recorded.

#### Database

The following information should be stored in the SCT database:

\begin{tabular}{l l}
**TSTDAQINFO:** & host and version information \\
**TSTDCSINFO:** & monitored voltages, currents and temperatures \\
**TSTHYBDELAY:** & Strobe delay setting for each chip \\ \end{tabular}

DEFECTS:

\begin{tabular}{l l l}
**Defect** & **First Channel** & **Last Channel** \\ \hline SD\_LO & Chip * 128 & ((Chip+1) * 128) -1 \\ \hline SD\_HI & Chip * 128 & ((Chip+1) * 128) -1 \\ \end{tabular}

#### Acceptance

None of the defects found by this test are allowable on production modules, hence the "PASS" field will be set to "NO" if any defects were found. The database reporting structure should also provide the possibility to set acceptance cuts on the range of delay values.

#### Sample Output from the Results File

#NewTest

SEERIAL NUMBER : 20220330200011 TEST NADE BY : PWP LOCATION NAME : RAL Run number : 533-11 TEST_DATE : 21/01/2003 PASSED : YES PROBLEM : NO #

#DAQ_INFO #
#HOST "PPDN":
#VERSION ".3.34"
#DUT "Barrel_Module" FILIN "17:20:12" #

#DCS_INFO #

#T1

28.029.0
#VEDT IDET 200.0.90
#VCC ICC 3.50 940 WVDD IDD 4.00 500 #TIME_PORERED #

#Strobelay #
#DELAY #NO S1 S2 S3 S4 E5
12 12 13 12 12 13

#MS S9 S10 S11 S12 E13
13 14 12 13 13 14

#No defects found!

### ThreePointGain.cpp

Threshold scans are taken for three injected charges to facilitate a quick measurement of gain and noise and to give an estimation of the discriminator offset. Notably in the case of a module, threshold scans taken with small charges (<1.5fC) yield scurves which are distorted at low thresholds due to noise occupancy. Fitting the complementary error function to such an s-curve, the noise is under estimated. For this reason, it is best to make noise measurements with injected charges of 1.5fC or more.

#### 6.2.2 Analysis

A complementary error function is fitted to each threshold scan to yield values of VT50 and output noise for each channel. A straight line is fitted to each set of three VT50 points to determine the gain and offset of each channel. The input noise can now be calculated by dividing the output noise measured at 2fC by the calculated gain.

Anomalous channels are categorised as follows:

\begin{tabular}{|l|l|c|} \hline
**Defect** & **Condition** & **Default value of cut** \\ \hline DEAD & No output & - \\ \hline STUCK & Continuous output & - \\ \hline LO\_GAIN & Gain \(<\) (0.75 * mean\_chip\_gain) & - \\ \hline HI\_GAIN & Gain \(>\) (1.25 * mean\_chip\_gain) & - \\ \hline LO\_OFFSET & Offset \(<\)**MIN\_OFFSET** & -100 (mV) \\ \hline HI\_OFFSET & Offset \(>\)**MAX\_OFFSET** & 120 (mV) \\ \hline UNBONDED & Noise \(<\)**BONDED\_NOISE** & 800 (ENC) \\ \hline PARTBONDED & Noise \(<\)**MIN\_INNSE** & 1100 (ENC) \\ \hline NOISY & Noise \(>\) (1.15 * mean\_chip\_noise) & - \\ \hline INEFFICIENT & Maximum efficiency \(<\)100\% & (not yet implemented) \\ \hline \end{tabular} Channels with the following defects are now masked at the end of a ThreePointGain test to reduce the probability of problems related to these defects being carried over to subsequent tests:* low gain (\(<\) 0.75
* chip_mean_gain) + high noise (\(>\) 1.15
* DEAD
* STUCK
* high offset (\(>\)120mV)
* _very low gain_ (\(<\) 0.3

In each case a DB comment is written to the results file.

#### 6.2.3 Database

The following information should be stored in the SCT database:

**TSTDAOINFO:**: host and version information
**TSTDCSINFO:**: monitored voltages, currents and temperatures
**TSTSCANINFO:**: number of scan points and corresponding charge values
**TSTHYBRC:**: response curve, gain, noise and offset information

DEFECTS:

**Defect**: **First Channel**: **Last Channel**:

_DEAD_ _First Channel_ _Last Channel_

_STUCK_ _First Channel_ _Last Channel_

_LO_GAIN_ _First Channel_ _Last Channel_

_HI_GAIN_ _First Channel_ _Last Channel_

_LO_OFFSET_ _First Channel_ _Last Channel_

_HI_OFFSET_ _First Channel_ _Last Channel_

_UNBONDED_ _First Channel_ _Last Channel_

_PARTBONDED_ _First Channel_ _Last Channel_

_NOISY_ _First Channel_ _Last Channel_

_INEFF_ _First Channel_ _Last Channel_

RAW DATA:

CHANNEL_DATA (mandatory)

#### 6.2.4 Acceptance

The "PASS" field is set to "NO" if one or more of the following criteria is fulfilled:

* A single chip is DEAD, STUCK or INEFFICIENT
* A single chip has gain \(<\) 0 or gain \(>\) 100
* More than 8 consecutive bad strips
* More than 15 bad strips in total

In each case the reason why the test has failed is stated in the results file in the form of a DB comment.

The database reporting structure must provide the possibility to set additional acceptance cuts on the mean and rms of VT50, gain, offset and noise, together with cuts on the maximum number of allowable channel defects falling into each of the following two categories:

A) LOST DEAD, STUCK, UNBONDED, NOIS

B) FAULTY LO_GAIN, HI_GAIN, LO_OFFSET, HI_OFFSET,

PARTBONDED, INFFICIENT

[MISSING_PAGE_FAIL:37]

[MISSING_PAGE_EMPTY:38]

[MISSING_PAGE_EMPTY:39]

[MISSING_PAGE_FAIL:40]

#### 6.3.2 Analysis

Each scan is fitted in turn to yield a matrix giving the threshold needed to obtain 50% efficiency (VT50) for 1fC input charge as a function of TrimDAC setting. For each combination of TrimRange and channel number, a straight line is fitted to the data to determine the step size and offset of the corresponding TrimDAC characteristic. Any points for which the s-curve fitting returned an error are ignored but the present version of the code does not include a noise cut at this stage.

For each TrimRange, a range of targets (2.5mV to 300mV in 2.5mV steps) is studied to determine the maximum number of channels that can be brought into line. For each channel in turn, the fitted TrimDAC characteristic is solved to determine the TrimDAC setting needed to reach the studied targets. If the calculated value is within the range of possible TrimDAC settings, the channel is considered to be trimmable for that combination of TrimRange and target.

At a second pass, the TrimRange value for each chip is chosen to maximise the number of trimmable channels. By default this is done such that all channels of the module are trimmed to the same target value, but the option exists to allow each chip to be trimmed to a different target.

For each TrimRange setting, an ASCII file is generated listing the TrimDAC values for each chip. For historical reasons this takes the form of a floating point number between 0 and 1, but this may change to a more logical format such as an integer between 0 and 15. A fifth trim file is generated listing the TrimRange and TrimDAC settings found to be best overall for the hybrid or module under test.

In each of the above five cases a corresponding mask file is generated listing those channels to be masked and the reasons why. In addition to untrimmable channels, dead, stuck and particularly noisy channels are also masked. (In this instance a particularly noisy channel is defined to be one with output noise more than 125% of the mean output noise of the parent chip.)

Defective chips and/or channels are categorised as follows:

\begin{tabular}{|l|l|l|} \hline
**Defect** & **Description** & **Condition(s)** \\ \hline \multirow{3}{*}{TR\_RANGE} & A chip for which the mean step size & TR0: step \(<\) 1.5 or step \(>\) 5.05 \\  & A chip for which the mean step size & TR1: step \(<\) 5.0 or step \(>\) 8.5 \\  & is not as expected for the presently & TR2: step \(<\) 8.5 or step \(>\) 12.0 \\  & selected TrimRange & TR3: step \(<\) 12.0 or step \(>\) 15.5 \\ \hline \multirow{3}{*}{TR\_STEP} & A channel for which the step size & Step \(<\) (mn\_step - (3* rms\_step)) \\  & differs from the mean step size of & \(\boxed{}\) \\  & that chip & Step \(>\) (mn\_step + (3* rms\_step)) \\ \hline \multirow{3}{*}{TR\_OFFSET} & A channel for which the offset & Offset \(<\) (mn\_offset - (3* rms\_offset)) \\  & differs from the mean offset of that & Offset \(>\) (mn\_offset + (3* rms\_offset)) \\ \cline{1-1} \cline{2-4}  & chip & \\ \hline \end{tabular}

\begin{tabular}{|l|l|l|} \hline
**Defect** & **Description** & **Condition(s)** \\ \hline \multirow{3}{*}{TR\_RANGE} & TR0: step \(<\) 1.5 or step \(>\) 5.05 \\  & A chip for which the mean step size & TR1: step \(<\) 5.0 or step \(>\) 8.5 \\  & is not as expected for the presently & TR2: step \(<\) 8.5 or step \(>\) 12.0 \\  & selected TrimRange & TR3: step \(<\) 12.0 or step \(>\) 15.5 \\ \hline \multirow{3}{*}{TR\_STEP} & A channel for which the step size & Step \(<\) (mn\_step - (3* rms\_step)) \\  & differs from the mean step size of & \\ \cline{1-1} \cline{2-4}  & that chip & Step \(>\) (mn\_step + (3* rms\_step)) \\ \hline \multirow{3}{*}{TR\_OFFSET} & A channel for which the offset & Offset \(<\) (mn\_offset - (3* rms\_offset)) \\ \cline{1-1} \cline{2-4}  & differs from the mean offset of that chip & Offset \(>\) (mn\_offset + (3* rms\_offset)) \\ \hline \end{tabular}

\begin{tabular}{|l|l|l|} \hline
**Defect** & **Description** & **Condition(s)** \\ \hline \multirow{3}{*}{TR\_RANGE} & TR0: step \(<\) 1.5 or step \(>\) 5.05 \\  & A chip for which the mean step size & TR1: step \(<\) 5.0 or step \(>\) 8.5 \\  & is not as expected for the presently & TR2: step \(<\) 8.5 or step \(>\) 12.0 \\  & selected TrimRange & TR3: step \(<\) 12.0 or step \(>\) 15.5 \\ \hline \multirow{3}{*}{TR\_STEP} & A channel for which the step size & Step \(<\) (mn\_step - (3* rms\_step)) \\  & differs from the mean step size of & \\ \cline{1-1} \cline{2-4}  & that chip & Step \(>\) (mn\_step + (3* rms\_step)) \\ \hline \multirow{3}{*}{TR\_OFFSET} & A channel for which the offset & Offset \(<\) (mn\_offset - (3* rms\_offset)) \\ \cline{1-1} \cline{2-4}  & differs from the mean offset of that chip & Offset \(>\) (mn\_offset + (3* rms\_offset)) \\ \hline \end{tabular}

\begin{tabular}{|l|l|l|} \hline
**Defect** & **Description** & **Condition(s)** \\ \hline \multirow{3}{*}{TR\_RANGE} & TR0: step \(<\) 1.5 or step \(>\) 5.05 \\  & A chip for which the mean step size & TR1: step \(<\) 5.0 or step \(>\) 8.5 \\  & is not as expected for the presently & TR2: step \(<\) 8.5 or step \(>\) 12.0 \\  & selected TrimRange & TR3: step \(<\) 12.0 or step \(>\) 15.5 \\ \hline \multirow{3}{*}{TR\_STEP} & A channel for which the step size & Step \(<\) (mn\_step - (3* rms\_step)) \\  & differs from the mean step size of & Step \(>\) (mn\_step + (3* rms\_step)) \\ \cline{1-1} \cline{2-4}  & & Step \(>\) (mn\_step + (3* rms\_step)) \\ \hline \multirow{3}{*}{TR\_OFFSET} & A channel for which the offset & Offset \(<\) (mn\_offset - (3* rms\_offset)) \\ \cline{1-1} \cline{2-4}  & differs from the mean offset of that chip & Offset \(>\) (mn\_offset + (3* rms\_offset)) \\ \cline{1-1} \cline{2-4}  & strip & \\ \hline \end{tabular}

\begin{tabular}{|l|l|l|} \hline
**Defect** & **Description** & **Condition(s)** \\ \hline \multirow{3}{*}{TR\_RANGE} & TR0: step \(<\) 1.5 or step \(>\) 5.05 \\  & A chip for which the mean step size & TR1: step \(<\) 5.0 or step \(>\) 8.5 \\  & is not as expected for the presently & TR2: step \(<\) 8.5 or step \(>\) 12.0 \\  & selected TrimRange & TR3: step \(<\) 12.0 or step \(>\) 15.5 \\ \hline \multirow{3}{*}{TR\_STEP} & A channel for which the step size & Step \(<\) (mn\_step - (3* rms\_step)) \\  & differs from the mean step size of & Step \(>\) (mn\_step + (3* rms\_step)) \\ \cline{1-1} \cline{2-4}  & strip & Step \(>\) (mn\_step + (3* rms\_step)) \\ \hline \multirow{3}{*}{TR\_OFFSET} & A channel for which the offset & Offset \(<\) (mn\_offset - (3* rms\_offset)) \\ \cline{1-1} \cline{2-4}  & differs from the mean offset of that chip & Offset \(>\) (mn\_offset + (3* rms\_offset)) \\ \cline{1-1} \cline{2-4}  & strip & \\ \hline \end{tabular}

\begin{tabular}{|l|l|l|} \hline
**Defect** & **Description** & **Condition(s)** \\ \hline \multirow{3}{*}{TR\_RANGE} & TR0: step \(<\) 1.5 or step \(>\) 5.05 \\  & A chip for which the mean step size & TR1: step \(<\) 5.0 or step \(>\) 8.5 \\  & is not as expected for the presently & TR2: step \(<\) 8.5 or step \(>\) 12.0 \\  & selected TrimRange & TR3: step \(<\) 12.0 or step \(>\) 15.5 \\ \hline \multirow{3}{*}{TR\_STEP} & A channel for which the step size & Step \(<\) (mn\_step - (3* rms\_step)) \\  & differs from the mean step size of & Step \(>\) (mn\_step + (3* rms\_step)) \\ \cline{1-1} \cline{2-4}  & strip & Step \(>\) (mn\_step + (3* rms\_step)) \\ \hline \multirow{3}{*}{TR\_STEP} & A channel for which the offset & Offset \(<\) (mn\_offset - (3* rms\_offset)) \\ \cline{1-1} \cline{2-4}  & differs from the mean offset of that chip & Offset \(>\) (mn\_offset + (3* rms\_offset)) \\ \cline{1-1} \cline{2-4}  & strip &

\begin{tabular}{|l|l|l|} \hline \multicolumn{3}{|c|}{Untrimmable channels are also listed as defects:} \\ \hline
**Defect** & **Description** & **Condition(s)** \\ \hline TR\_NORTIM & A channel that may not be trimmed & Untrimmable Channel \\ \hline \end{tabular}

#### 6.3.3 Database

The results of this test should be stored in the SCT database using five instances of the following table, with TRIM\_TYPE = {0,1,2,3,-1} corresponding to TrimRange=0, TrimRange=1, TrimRange=2, TrimRange=3, and with optimised TrimRange settings. In each case the trim and mask files should be uploaded to the database for future reference.

\begin{tabular}{l l} **TSTDAOINFO:** & host and version information \\ **TSTDCSINFO:** & monitored voltages, currents and temperatures \\ **TSTSCANINFO:** & number of scans and corresponding TrimDAC settings \\ **TSTHYPIRIM:** & trim summary \\ \hline \end{tabular}

DEFECTS:

\begin{tabular}{l l l} \hline
**Defect** & **First Channel** & **Last Channel** \\ \hline _TR\_RANGE_ & _Chip * 128_ & _((Chip+1) *128)-1_ \\ \hline _TR\_STEP_ & _First Channel_ & **Last Channel** \\ \hline _TR\_OFFSET_ & _First Channel_ & **Last Channel** \\ \hline \end{tabular}

RAW DATA:

TRIM\_DATA (mandatory)

#### 6.3.4 Acceptance

The "PASS" field is set to "NO" if any defect of type TR\_RANGE has been recorded, or if there are any untrimmable channels.

The database reporting structure should also provide the possibility to set acceptance cuts on the number of trimmable channels, the mean and rms of the distribution of vt50 values after trimming, the TrimDAC offset and the TrimDAC step size.

#### 6.3.5 Sample Output from the Results File

**Example 1: with all chips set to TrimRange 0**

\begin{tabular}{l l} \hline
**\#** \\
**SNewTest** \\
**\#** \\
**Serial NUMBER** : _20220330200011_ \\
**TEST MADE BY** : PWP \\
**LOCATION NAME** : PAL \\
**Run number** : _533-15_ \\
**TEST\_DATE** : _21/01/2003_ \\
**PASSED** : NO \\
**PROBLEM** : NO \\ \hline \end{tabular}

#BDA_INFO
#HOST
*PPONT3*
#SVENSION
*3.34*
#OUT
*Barrel_Module*
#TIME
*17:23:16*

#BDCS_INFO

#BTO T1
#29.0 29.0
#VDET IDET
200.0 0.90
#VC ICC
3.50 940
#VDD IDD
4.00 490
#TIME_POWNED

#SCAN_INFO

#POINT_TYPE
#TermDAC (bits)*
#N_POINTS
16
#POINTS
0.00 1.00 2.00 3.00 4.00 5.00 6.00 7.00
#0.00 9.00 10.00 12.00 13.00 14.00 15.00

#Yrim

#TRIM CHARGE TYPE ALGORHM
1.0 0 0
#(trimwholemodule)

#rangetargetntrimvt50vt50vtemstr_offoff_rmstr_stepstep_rms
#NO #NO #0 90.0 127 90.0 1.23 -19.7 2.8 3.53 0.17
#S1 0 90.0 127 90.1 1.29 -20.5 3.4 3.41 0.17
#S2 0 90.0 128 90.0 1.34 -17.9 2.0 4.03 0.20
#S3 0 90.0 128 90.0 1.19 -19.8 2.3 3.51 0.16
#S4 0 90.0 128 90.2 1.23 -19.2 2.3 3.68 0.14
#E5 0 90.0 128 90.3 1.28 -19.4 2.2 3.51 0.18
#NB 0 90.0 128 90.1 1.43 -17.7 1.8 3.89 0.18
#S9 0 90.0 128 90.1 1.18 -20.4 2.3 3.48 0.15
#S10 0 90.0 128 89.8 0.95 -19.9 2.5 3.18 0.18
#S11 0 90.0 128 90.2 1.36 -18.2 2.3 3.57 0.17
#S12 0 90.0 128 90.2 1.31 -19.8 2.4 3.43 0.17
#S13 0 90.0 128 90.2 1.31 -19.4 2.2 3.64 0.18

[MISSING_PAGE_EMPTY:44]

[MISSING_PAGE_EMPTY:45]

[MISSING_PAGE_EMPTY:46]

\begin{tabular}{|l|l|c|} \hline \multicolumn{3}{|c|}{Anomalous channels are categorised as follows:} \\ \hline
**Defect** & **Condition** & **Default value of cut** \\ \hline DEAD & No output & - \\ \hline STUCK & Continuous output & - \\ \hline LO\_GAIN & Gain \(<\) (0.75 * mean\_chip\_gain) & - \\ \hline HI\_GAIN & Gain \(>\) (1.25 * mean\_chip\_gain) & - \\ \hline LO\_OFFSET & Offset \(<\)**MIN\_OFFSET** & -100 (mV) \\ \hline HI\_OFFSET & Offset \(>\)**MAX\_OFFSET** & 120 (mV) \\ \hline UNBONDED & Noise \(<\)**BONDED\_NOISE** & 800 (ENC) \\ \hline PARTBONDED & Noise \(<\)**MIN\_INNSE** & 1100 (ENC) \\ \hline NOISY & Noise \(>\) (1.15*mean\_chip\_noise) & - \\ \hline INEFFICIENT & Maximum efficiency \(<\)100\% & (not yet implemented) \\ \hline \end{tabular}

No Channels are masked as a result of the ResponseCurve test.

#### 6.4.3 Database

This test has the same inputs and outputs as ThreePointGain_cpp:

**ISTDAQINFO:** & host and version information \\ \hline
**ISTDCSINFO:** & monitored voltages, currents and temperatures \\ \hline
**ISTSCANINFO:** & number of scan points and corresponding charge values \\ \hline
**ISTHYBRC:** & response curve, gain, noise and offset information \\ \hline DEFECTS: & \multicolumn{1}{c|}{} \\ \hline
**Defect** & \multicolumn{1}{c|}{} & \multicolumn{1}{c|}{} \\ \hline DEAD & First Channel & Last Channel \\ \hline STUCK & First Channel & Last Channel \\ \hline LO\_GAIN & First Channel & Last Channel \\ \hline HI\_GAIN & First Channel & Last Channel \\ \hline LO\_OFFSET & First Channel & Last Channel \\ \hline HI\_OFFSET & First Channel & Last Channel \\ \hline UNBONDED & First Channel & Last Channel \\ \hline PARTBONDED & First Channel & Last Channel \\ \hline NOISY & First Channel & Last Channel \\ \hline INEFF & First Channel & Last Channel \\ \hline \end{tabular}

RAW DATA:

CHANNEL_DATA (mandatory)

#### 6.4.4 Acceptance

The "PASS" field is set to "NO" if one or more of the following criteria are fulfilled:

* A single chip is DEAD, STUCK or INEFFICIENT
* A single chip has gain \(<0\) or gain \(>100\)
* More than 8 consecutive bad strips
* More than 15 bad strips in total

In each case the reason why the test has failed is stated in the results file in the form of a DB comment.

The database reporting structure must provide the possibility to set additional acceptance cuts on the mean and rms of VT50, gain, offset and noise, together with cuts on the maximum number of allowable channel defects falling into each of the following two categories:

A) LOST DEAD, STUCK, UNBONDED, NOISY

B) FAULTY LO_GAIN, HI_GAIN, LO_OFFSET, HI_OFFSET,

PARTBONDED, INEFFICIENT

#### 6.4.5 Sample Output from the Results File

#NewTest

SERIAL NUMBER : 20220330200011 TEST MADE BY : PWP LOCATION NAME : RAL RUN number : 533-43 TEST_ATE : 21/01/2003 PASSED : YES PROBLEM : NO #

#DAQ_INFO #

#HOST *PENT3* #VERSION *3.34*
#DUT *Barrel_Module*
#TIME *17:47:36*

#DCS_INFO #

#T0 T1 28.0 29.0
#VDZT IDET 200.0 1.04 #VCC ICC 3.48 9800 WVD IDD 4.00 490 #TIME_POWEEED. #

#SCAN_INFO #

#POINT_TYPE *QCAL (fC)*
#N_POINTS 10
#POINTS

\begin{tabular}{|c|c|c|} \hline ATLAS Project Document & Page: **49 of 72** \\
**ATL-INDET-** & Rev. No.: 3.38 \\ \hline \end{tabular}

\begin{tabular}{|c|c|c|} \hline ATLAS Project Document & Page: **49 of 72** \\
**ATL-INDET-** & Rev. No.: 3.38 \\ \hline \end{tabular}

[MISSING_PAGE_EMPTY:50]

[MISSING_PAGE_EMPTY:51]

[MISSING_PAGE_EMPTY:52]

[MISSING_PAGE_EMPTY:53]

[MISSING_PAGE_EMPTY:54]

[MISSING_PAGE_EMPTY:55]

\begin{tabular}{|l|l|l|} \hline \multicolumn{3}{|c|}{Anomalous timewalk values are categorised as defects as follows:} \\ \hline
**Defect** & **Condition** & **Default value of cut** \\ \hline TW\_LO & Timewalk \(<\)**MIN\_TW** & 5 \\ \hline TW\_HI & Timewalk \(>\)**MAX\_TW** & 16 \\ \hline \end{tabular}

#### 6.6.3 Database

The following information should be stored in the SCT database:

\begin{tabular}{l l}
**TSTDAOINFO:** & host and version information \\ \hline
**TSTDCSINFO:** & monitored voltages, currents and temperatures \\ \hline
**TSTSCANINFO:** & number of scans and corresponding charge values \\ \hline
**TSTHYBTW:** & timewalk (nS) and calibration factor of each chip \\ \hline \end{tabular}

**DEFECTS:**

\begin{tabular}{l|l|l} \hline _Defect_ & _First Channel_ & _Last Channel_ \\ \hline _TW\_LO_ & _First Channel_ & _Last Channel_ \\ \hline _TW\_HI_ & _First Channel_ & _Last Channel_ \\ \hline \end{tabular}

#### 6.6.4 Acceptance

The "PASS" field will be set to "NO" if any defects are found.

The database reporting structure should provide the possibility to set more stringent acceptance cuts on the calculated value of the timewalk and the strobe delay calibration factor.

#### 6.6.5 Sample Output from the Results File

*NewTest

**STRIAL NUMBER** : _2022033020001_

TEST NADE BY : PWP LOCATION NAME : RA RA Run number : _533-55_

TEST_DATE : _21/01/2003_

PASSED : YES PROBLEM : NO

*NAO\_INFO #

*HOST *PDUNT3*
#VERSION *'3.34'
*BDV *Barrel_Module'

*FIME *'18:06:08'

[MISSING_PAGE_EMPTY:57]

* _Description of Other Electrical Tests_

### HybridLTT.cpp

#### 7.1.1 Method

This is a "warm" test of 90 hours duration. For a barrel hybrid, the temperature is controlled such that the hybrid thermistors report 37\({}^{0}\)C. Every five minutes the temperatures and currents are monitored and a short burst of triggers is sent to monitor the noise occupancy of the hybrid at 1fC threshold. Every two hours a confirmation test is performed and, at the end of the test, a characterisation sequence is initiated.

During the test, the monitored temperatures are checked against an upper limit. If they exceed that limit the power is switched off and the test is stopped. Upon completion of a warm test the power is switched off.

#### 7.1.2 Analysis

The results of each confirmation sequence will be compared against earlier data to identify the occurrence of any new defects.

#### 7.1.3 Database

The following information should be stored in the SCT database:

\begin{tabular}{l l} TSTDAQINFO: & host and version information \\ TSTDCSINFO: & monitored voltages, currents and temperatures at the end of test \\ TSTHVBLTT: & minimum and maximum temperatures and currents during the test \\ DEFECTS: & as for the individual test components \\ RAW DATA: & \\ LTT\_MONITOR\_DATA (mandatory) \\ \end{tabular}

#### 7.1.4 Sample Output from the Results File

#NewTest

SEERIAL NUMBER : 20220330200013 TEST NADE BY : dgc LOCATION NAME : Birmingham Run number : 1016-1 TEST_DATE : 30/07/2002 PASSED : YES PROBLEM : NO #

#DAC_INFO

#HOST "EPA7-" EVERSION ".3.34" #DUT "Barrel_Hybrid" FILN "17:08:39" #

#DCS_INFO #

#T1

36.0 36.0 FVDT IDET 0.0 0.0 0.00 FVCC ICC 3.50 970 WVDD IDD 4.00 530 #TIME_PORERED :

#LongTermTest #

#Puration

90.0
#Time of first failure -1.0
#T0 min max 36.0 38.0
#T1 min max 35.0 37.0
#ICc min max 940 1010 #Hdd min max 510 540 #Hdot min max... #

#TEST Rawdata FILNAME : D:\(\)_scrvar\results\(|\)20220330200013_tt\(\_\)1016-1.txt

### HybridColdTest.cpp

#### 7.2.1 Method

This is a "cold" test of 10 hours duration. For a barrel hybrid, the temperature is controlled such that the hybrid thermistors report 0C. Every five minutes the temperatures and currents are monitored and a short burst of triggers is sent to monitor the noise occupancy of the hybrid at 1fC threshold. Every two hours a confirmation test is performed and, at the end of the test, a characterisation sequence is initiated.

During the test, the monitored temperatures are checked against an upper limit. If they exceed that limit the power is switched off and the test is stopped. Upon completion of a cold test the power is left on.

#### 7.2.2 Analysis

The results of each confirmation sequence will be compared against earlier data to identify the occurrence of any new defects.

#### 7.2.3 Database

The following information should be stored in the SCT database:

\begin{tabular}{l l}
**TSTDAOINFO**: & host and version information \\
**TSTDCSINFO**: & monitored voltages, currents and temperatures at the end of test \\
**TSTHYBLTT**: & minimum and maximum temperatures and currents during the test \\
**DEFECTS**: & as for the individual test components \\
**RAW DATA**: & \\
**LTT\_MONITOR\_DATA (mandatory)** \\ \end{tabular}

[MISSING_PAGE_FAIL:61]

### ModuleLTT.cpp

#### 7.3.1 Method

For the test duration of 24 hours, a module is maintained at the operating temperature expected in ATLAS. Every five minutes the temperatures and currents are monitored and a short burst of triggers is sent to monitor the noise occupancy of the module at 1fC threshold. Every two hours a confirmation test is performed and, at the end of the test, a characterisation sequence is initiated.

During the test, the monitored temperatures are checked against an upper limit. If they exceed that limit the power is switched off and the test is stopped. Similarly in the event of a high voltage trip, the test is stopped. The low voltage power is left on at the end of the test.

#### 7.3.2 Analysis

The results of each confirmation sequence will be compared against earlier data to identify the occurrence of any new defects.

#### 7.3.3 Database

The following information should be stored in the SCT database:

\begin{tabular}{l l}
**TSTDAOINFO**: & host and version information \\
**TSTDCSINFO**: & monitored voltages, currents and temperatures at the end of test \\
**TSTHYBLTT**: & minimum and maximum temperatures and currents during the test \\ \end{tabular}

**DEFECTS**: & as for the individual test components \\
**RAW DATA**: & \\ LTT\_MONITOR\_DATA (mandatory)

[MISSING_PAGE_EMPTY:63]

## 8 Appendices

### Appendix 1 - Definitions of Utility Tables

TSTDAQINFO: tag "%DAQ_INFO"

Column Name & Representation & Range & Comment

HOST & O Char(30) & & & Hostname of test PC

VERSION & O Char(10) & & & Software Version, e.g. 3.20

DUT & O Char(20) & & & Device Under Test eg.

"Barrel Hybrid" or

"Barrel Module"

TEST_TIME & O Char(10) & & & Time the test started

TSTDCSINFO: tag "%DCS_INFO"

Column Name & Representation & Range & Comment

T0 & O Float & -100 to 200 & Module Temp. 0 ("C)

T1 & O Float & -100 to 200 & Module Temp. 1 ("C)

Vdet & O Float & 0 to 500 & Detector Voltage (V)

Idet & O Float & 0 to 5200 & Detector Current ("A")

Vcc & O Float & 0 to 10 & Analogue Voltage (V)

Icc & O Float & 0 to 10 & Analogue Current (A")

Vdd & O Float & 0 to 10 & Digital Voltage (V)

Idd & O Float & 0 to 10 & Digital Current (A")

TIME_POWERED & O Float & 0 - inf. & (hours)8

Footnote 8: Not yet implemented

TSTSCANINFO: tag "%SCAN_INFO"

Column Name & Representation & Range & Comment

POINT_TYPE & M Char(20) & & Scan point descriptor

N_POINTS & M Int (8 bit) & 0 to 16 & Number of scans

[MISSING_PAGE_POST]

### _Appendix 2 - Definitions of Result Tables_

TSTMODIV: tag "%DetModIV"9

Footnote 9: Prior to version 3.21, the tag “%ModIVScan” was used, however the tag “%DetModIV” is required for DB compatibility. When uploading old data, this change is affected by the java upload application “iSCTDAQ”.

\begin{tabular}{|l|l|l|l|l|} \hline \multicolumn{1}{|c|}{**Column Name**} & \multicolumn{2}{c|}{**Representation**} & \multicolumn{1}{c|}{**Range**} & \multicolumn{1}{c|}{**Comment**} \\ \hline TEMPERATURE & M & Float & & For compatibility with \\  & & & existing IV table (=T0) \\ \hline I\_LEAK\_150 & M & Float & 0 to 5200 & Leakage Current (\(\mu\)A) \\ \hline I\_LEAK\_350 & M & Float & 0 to 5200 & Leakage Current (\(\mu\)A) \\ \hline \end{tabular}

TSTHYBRESET: tag "%HardReset"

\begin{tabular}{|l|l|l|l|l|} \hline \multicolumn{1}{|c|}{**Column Name**} & \multicolumn{2}{c|}{**Representation**} & \multicolumn{1}{c|}{**Range**} & \multicolumn{1}{c|}{**Comment**} \\ \hline ICC\_NOCONFIG & M & Float & 0 to 2000 & Analogue Current (mA) \\ \hline IDD\_NOCONFIG & M & Float & 0 to 2000 & Digital Current (mA) \\ \hline ICC\_NOCLOCK & M & Float & 0 to 2000 & Analogue Current (mA) \\ \hline IDD\_NOCLOCK & M & Float & 0 to 2000 & Digital Current (mA) \\ \hline \end{tabular}

TSTHYBIPPE: tag "%PipelineTest"

\begin{tabular}{|l|l|l|l|l|} \hline \multicolumn{1}{|c|}{**Column Name**} & \multicolumn{2}{c|}{**Representation**} & \multicolumn{1}{c|}{**Range**} & \multicolumn{1}{c|}{**Comment**} \\ \hline M0\_NOGOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline S1\_NOOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline S2\_NOOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline S3\_NOOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline S4\_NOOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline E5\_NOGOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline M8\_NOOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline S9\_NOOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline S10\_NOGOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline S11\_NOGOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline S12\_NOGOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline E13\_NOGOD & M & Int (8 bit) & 0 to 128 & No. good channels \\ \hline \end{tabular}

TSTHYBBPASS: tag "%FullBypassTest"

\begin{tabular}{|l|l|l|l|l|} \hline \multicolumn{1}{|c|}{**Column Name**} & \multicolumn{2}{c|}{**Representation**} & \multicolumn{1}{c|}{**Range**} & \multicolumn{1}{c|}{**Comment**} \\ \hline M0\_TOKEN & M & Float & 0 to 10 V & \\ \hline M0\_RTOXEN & M & Float & 0 to 10 V & \\ \hline S1\_TOKEN & M & Float & 0 to 10 V & \\ \hline S2\_TOKEN & M & Float & 0 to 10 V & \\ \hline S2\_RTOXEN & M & Float & 0 to 10 V & \\ \hline S3\_TOKEN & M & Float & 0 to 10 V & \\ \hline S3\_RTOXEN & M & Float & 0 to 10 V & \\ \hline S4\_TOKEN & M & Float & 0 to 10 V & \\ \hline \end{tabular}

TSTHYBRC: tags "%ThreePointGain" and "%ResponseCurve"

\begin{tabular}{|l|l|l|l|} \hline
**Column Name** & **Representation** & **Range** & **Comment** \\ \hline
**Loop A** & & & \\ \hline
**A_RC_FIT** & **M** & _Float2_ & _0 to 255_ & _Fit function type_ \\ \hline
**A_RC_P0** & **M** & _Float_ & _-inf to inf_ & _Fit parameter 0_ \\ \hline
**A_RC_P1** & **M** & _Float_ & _-inf to inf_ & _Fit parameter 1_ \\ \hline
**A_RC_P2** & **M** & _Float_ & _-inf to inf_ & _Fit parameter 2_ \\ \hline  & \multicolumn{3}{|c|}{**Where A ={M,S1,S2,S3,S4,E5,M8,S9,S10,S11,S12,E13}**} \\ \hline
**Loop B** & & & \\ \hline
**B_RC_MN_VT50** & **M** & _Float_ & _0 to 640_ & _Mean VT50 at 1fC (mV)_ \\ \hline
**B_RC_RMS_VT50** & **M** & _Float_ & _0 to 30_ & _RMS VT50 at 1fC (mV)_ \\ \hline
**B_RC_MN_GAIN** & **M** & _Float_ & _0 to 100_ & _Mean gain at 2fC(mV/fC)_ \\ \hline
**B_RC_RMS_GAIN** & **M** & _Float_ & _0 to 30_ & _RMS gain at 2fC (mV/fC)_ \\ \hline
**B_RC_MN_OFFSET** & **M** & _Float_ & _-100 to 120_ & _Extrapolated Offset(mV)_ \\ \hline
**B_RC_RMS_OFFSET** & **M** & _Float_ & _0 to 30_ & _RMS Ext. Offset(mV)_ \\ \hline
**B_RC_MN_NSE** & **M** & _Float_ & _0 to 120_ & _Mean output_ \\ \hline
**B_RC_MN_ENC** & **M** & _Float_ & _0 to 5000_ & _Mean input_ \\  & & & & _noise at 2fC (ENC)_ \\ \hline
**B_RC_RMS_ENC** & **M** & _Float_ & _0 to 1000_ & _RMS input_ \\  & & & & _noise at 2fC (ENC)_ \\ \hline  & \multicolumn{3}{|c|}{**Where B ={M,S1,S2,S3,S4,E5,M8,S9,S10,S11,S12,E13}**} \\ \hline
**Loop C** & & & & \\ \hline
**B_RC_COMMENT** & **M** & **Char(20)** & **-** & _Comment_ \\ \hline  & \multicolumn{3}{|c|}{**Where C ={M,S1,S2,S3,S4,E5,M8,S9,S10,S11,S12,E13}**} \\ \hline \end{tabular}

TSTHYBNOISE: tag "%NO"

\begin{tabular}{|l|l|l|l|} \hline
**Column Name** & **Representation** & **Range** & **Comment** \\ \hline
**ICC_MAX** & **M** & **Float** & **0 to 2000** & _Highest Icc (mA)_ \\ \hline
**IDD_MAX** & **M** & **Float** & **0 to 2000** & _Highest Idd (mA)_ \\ \hline
**ICC_TYP** & **M** & **Float** & **0 to 2000** & _Icc at 1fC (mA)_ \\ \hline
**IDD_TYP** & **M** & **Float** & **0 to 2000** & _Idd at 1fC (mA)_ \\ \hline
**Loop A** & & & & \\ \hline
**A_NO_OFFSET** & **M** & **Float** & _-100 to_ & _Noise occupancy_ \\  & & & _120_ & _offset (mV)_ \\ \hline
**A_NO_MN_OCC** & **M** & **Float** & _0 to 1_ & _Mean Noise occupancy_ \\  & & & & _at 1fC_ \\ \hline
**A_NO_RMS_OCC** & **M** & **Float** & _0 to 1_ & _RMS Noise occupancy_ \\  & & & & _at 1fC_ \\ \hline
**A_NO_NSE** & **M** & _Float_ & _0 to 5000_ & _Estimated noise (ENC)_ \\ \hline  & \multicolumn{3}{|c|}{**Where A ={M0,S1,S2,S3,S4,E5,M8,S9,S10,S11,S12,E13}**} \\ \hline \end{tabular}

[MISSING_PAGE_FAIL:69]

[MISSING_PAGE_FAIL:70]

### Appendix 4 - Database table implementation status

\begin{tabular}{|l|c|c|c|c|} \hline  & **Table** & & **File format** & \\
**Table** & **approved for addition** & **Table added** & **approved for** & **Java Application** \\  & **for addition** & **to DB** & **Java** & **Implemented** \\  & **to DB** & & **Application** & \\ \hline TSTDAQINFO & **YES** & **YES** & **YES** & **YES** \\ \hline TSTDCSINFO & **YES** & **YES** & **YES** & **YES** \\ \hline TSTSCANINFO & **YES** & **YES** & **YES** & **YES** \\ \hline TSMODIV & \multicolumn{4}{|c|}{_Already exists as TSTDETIV_} \\ \hline TSTHYBRESET & **YES** & **YES** & **YES** & **YES** \\ \hline TSTHYBCLOCK & **YES** & **YES** & **YES** & **YES** \\ \hline TSTHYBBPASS & **YES** & **YES** & **YES** & **YES** \\ \hline TSTHYBPIPE & **YES** & **YES** & **YES** & **YES** \\ \hline TSTHYBDELAY & **YES** & **YES** & **YES** & **YES** \\ \hline TSTHYBRC & **YES** & **YES** & **YES** & **YES** \\ \hline TSTHYBRTIM & **YES** & **YES** & **YES** & **YES** \\ \hline TSTHYBNOISE & **YES** & **YES** & **YES** & **YES** \\ \hline TSTHYBTW & **YES** & **YES** & **YES** & **YES** \\ \hline TSTHYBLTT & **NOT YET** & **-** & **-** & **-** \\ \hline \end{tabular}

### Appendix 5 - Changes to the upload file format between versions 3.20 and 3.21

Between SCTDAQ/document versions 3.20 and 3.21, implementation of the DB tables and java upload applications has started. A few minor inconsistencies have been found which have required changes to be made to the format of the results file. These are outlined below. For users wishing to upload data created with SCTDAQ version 3.20, corrections are applied by the java upload application "jSCTDAQ".

IVCurve.cpp

The results of this test are stored in the table TSTDETIV, which already exists in association with the tag "%DetModIV". Hence to eliminate the need to change the java upload application, the tag has been changed to match that which had already been defined.

SCAN_INFO utility table

This table contains 16 fields in which scan point settings may be recorded. For DB upload, all unused fields in the results file must be filled with a dot. They had previously been left blank.

HybridLTT.cpp, HybridColdTest.cpp and Module LTT.cpp

In version 3.20 of the interpreted class TLTT, which underpins these tests, the "%TEST Rawdata" tag was not generated correctly. This has now been fixed.

## References

* [1] ATLAS SCT Barrel Module FDR, ATLAS-SCT-BM-FDR-7
* [2] The Quality Assurance of the ATLAS SCT End-Cap Detector Modules, ATL-IS-QA-0004
* [3] The Atlas SCT Production Database, ATL-INDET-2002-015
* [4] W. Dabrowski et al., "The ABCD Binary Readout Chip for Silicon Strip Detectors in the ATLAS Silicon Tracker", CERN/LHCC/98-36, p175
* [5] RD29 Status Report: "DMILL, A Mixed Analog-Digital Radiation Hard Technology for High Energy Physics Electronics", CERN/LHCC/97-15
* [6][http://sct-testdaq.home.cern.ch/sct-testdaq/sctdaq.html](http://sct-testdaq.home.cern.ch/sct-testdaq/sctdaq.html)
* [7][http://root.cern.ch/](http://root.cern.ch/)
* [8][http://www.hep.phy.cam.ac.uk/~silicon/iSCTDAQ.html](http://www.hep.phy.cam.ac.uk/~silicon/iSCTDAQ.html)
* [9][http://www.hep.man.ac.uk/groups/atlas/SCTdatabase/TableDef.html](http://www.hep.man.ac.uk/groups/atlas/SCTdatabase/TableDef.html)
* [10][http://www-ucif.troja.mff.cuni.cz/~sct/tests/beta/](http://www-ucif.troja.mff.cuni.cz/~sct/tests/beta/)
* [11][http://atlas.web.cern.ch/Atlas/GROUPS/INNER](http://atlas.web.cern.ch/Atlas/GROUPS/INNER) DETECTOR/SCT/testbeam/
* [12][http://atlas-sct-irradiation.web.cern.ch/atlas-sct-irradiation/default.htm](http://atlas-sct-irradiation.web.cern.ch/atlas-sct-irradiation/default.htm)
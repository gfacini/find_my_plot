_ATLAS Muon Discussion Note_

_The Muon Software Simulation_

_in the OO era_

_Draft 1.0_

_A.Rimoldi, CERN & Pavia University/INFN_

## 0 Introduction

This document is meant to present the State of the Art and to share with the Muon Community some ideas about the new software in view of creating a new, up-to-date, satisfactory simulation of the Muon Spectrometer for the next years to come.

Here I will present the main actions that in my mind should be taken in order to tackle the problem, to change drastically the scale of our involvement, but preserving the continuation in the evolution.

Then I will try to emphasize the different points. In any case it is my intention to be as simple as possible at the cost to be to flat in the exposition of my thoughts.

### Preliminary Considerations

Our main ingredient in the past (and even in the present) simulation environment was GEANT as a toolkit for the detector simulation. It was born in the 80's as a tracking system then implemented to become a F77 framework for geometry and electromagnetic physics to meet the LEP requirements and with hadronic physics interfaced via external packages.

For the preparation of the Technical Proposals and for the Muon Spectrometer and the Detector and Physics Performance Technical Design Reports we used Geant 3.21(1994) still with hadronic physics from external packages and features modelled on the LEP energy scale. Our simulation program named DICE (it stands for Detector Integration for a Collider Experiment) was extensively used by the whole ATLAS community.

But now we cannot continue on the same line because our foreseen software for the Experiment is required to be robust and maintainable over the long life of the LHC experiments in the appropriate LHC environment.

The new OO analysis design and programming suggests a more suitable language and tools, then in the simulations we chose to go towards this direction by using the new toolkit available on the market, GEANT4, with C++ programming.

### 3.0 Geant4

GEANT4 (born in 1998 with first release last December) provides a complete set of tools for all the domains of detector simulation: geometry, tracking, detector response, run, event and track management, visualization and user interface.

GEANT4 exploits advanced software engineering techniques and Object Oriented technologies and hence provide the possibility of validating the physics results at the LHC scale.

The GEANT4 Object Oriented design allows the user to understand, customize or extend the toolkit in all the domains. At the same time, the modular architecture of Geant4 allows the user to load and use only the components needed.

Be careful in the reading: this is not advertising. Sometimes in the true life it will happen that not all the features listed above are well tested, implemented and developed.

This tool will be completely and extensively tested on a large scale application like the one of the LHC experiments. Not only ATLAS but also CMS is going in the same direction.

### 4.0 Main goals of the new software

A soon as we start (we already...), our aim is not to do a crude standalone exercise, but to move in a global design of which we are a component. We aim at decomposing our problem of global simulation of the detector in small pieces without loosing a global view, and then collecting all the pieces in a chain (not linear probably), prototyping, gaining in experience and learning by the job.

We also intend to test the present tools in connection with the true world: we need to compare the results of our simulations with true data (or the one we collected in the near past from the testbeams, or the one we are foreseen to take with the new testbeams on the module 0s that will start early next year).

Our exercise is not stopping here with a mere comparison with test beam data, but we have to tune the output of the simulation to something similar to the output of the true data acquisition. In this way we could also provide more suitable input to the reconstruction program and have a preview of the problems we will facing at when the experiment will be running.

### 5.0 Action items (long & short term)

At this point it is probably worthwhile to have clear in mind that we need to launch both a long term programme (time scale 5 years or more) and a short term one (time scale 1/2 years) simultaneously.

This subdivision is mainly related to the longer time scale necessary to have the complete software ready and running for the Experiment, while at a shorter time we are requested to use and test the new software in a complete, well organized, full (but reduced in scale) way: the testbeam environment, which is the unique place where this should happen.

In this phase primary importance should be put in discovering the unavoidable weaknesses and the possible problems connected with the new tools adopted.

#### Long term time scale

In this area we have to launch the simulations for the various subdetectors (precision chambers, both MDT and CSC and trigger, both RPC and TGC) as part of a global simulation of the detector, always bearing in mind that first we have to profit from the experience coming from our analysis design and programming of the simulation of the various testbeam setups.

We have to be prepared to come back to a previous solution or to divert our thoughts (at least in the early time) whenever the adopted solution in not suitable or presents unavoidable problems.

#### Short term time scale

Here it is time to start with an analysis of the forthcoming activities connected with the arrival of the module0's. As soon as we are all aware of the changes in the H8 area and of the Test Programme (see document from J.Bensinger et al: Muon Spectrometer test Programme in H8) we should start the testbeam simulations with the aim of:

1- exercise ourselves on the new software

2- test the tool we have adopted

3- set the comparisons with the real data

4- prepare a full running software chain from the database reading, to simulation, to reconstruction.

In this framework we have to remember that this is the only exercise we can try to test our new OO software.

Aside, but on the same time scale, we can start a parallel activity towards a reanalysis of our past data set to allow comparisons with the old analyses done with GEANT3 in past testbeams.

A backward test of GEANT3 should be launched using the new data set (from module0s, to be clear) but applying the GEANT3 simulation to the new setups. This comparison could span a longer time scale, but it is also essential to test GEANT3 against GEANT4.

Nevertheless the testbeams could be used to have a feedback on particular fast answers that we need from simulation: in case of particular checks on tracking in materials or on particular physics processes in GEANT4 it could be profitable to add layers of specific materials in the testbeams and then simulate/reconstruct/compare true data with the simulation. In these cases use the testbeams to validate the simulations in a simple setup.

This list should be enlarged and these examples are put here only to give an idea about the potential of these tests.

A better communication between the GEANT4 developers team and the ATLAS community of software developers should be encouraged through this kind of exercises.

### 6.0 Our Present Approach

To come to our present environment it should be said that the running version of the simulation program using GEANT4 in a complete C++ environment uses as input an ASCII database. This database is simplified respect to the standard ASCII database used in the TDR (named AMDB which stands for Atlas Muon DataBase).

For historical reasons (simplicity, faster updating, malleability for particular urgent and specific studies as extra chambers in the ribs, crack at \(\eta\)=0, etc.) AMDB' was largely used, essentially by myself. Then, when I decided to convert myself to the new software, it was easier for me to continue with this familiar tool, because my primary problem was essentially to implement the geometry of the muon system, learn a new language and familiarize myself with the new tools.

In a parallel way the more complete database (AMDB) was developed for the standard DICE simulation and reconstruction.It was also renovated and modified in order to include new descriptions of other subdetectors (inner detector, calorimeter, dead materials or the infrastructures).It therefore became more and more suitable to describe the spectrometer and hits evolution during the design of the apparatus.

For this reason it was adopted in the standard DICE and MUONBOX (the package for the reconstruction of muons).

Now we propose to link this database (AMDB) to the new software too, temporarily, at least, or enough to wait for the new OO database interface. Here I think that the most probable time scale before we use the OO transient interface is of the order of 1 or 2 years, but I could be less, in that case our use of AMDB will be shortened.

In this way on one hand we can avoid delays in the design and setting up of our new simulation software due to the time spent in waiting for the new OO database, giving on the other hand time to the OO group for its own design and implementation procedures.

We have just launched such a project inside the muon community with the help of the Saclay Group and we hope to be ready with the core of a simulation program linked to the ASCII database AMDB in the near future (before the end of this year or even earlier).

Once done we aim at writing an ASCII file containing the hits from the simulation to be read and processed by the reconstruction program.

In the same time the complete chain of the simulation in the new OO environment will be available for exercising and testing or developing. This chain comprises the reading of the simplified database AMDB', the geometry description of the barrel and forward muon chambers as well as the RPC description on top (or bottom) of the related precision chambers. A complete geometry is simulated, feet region included. Up to now no OOTGC simulation exists, but efforts in that direction have been launched.

The end point of this chain is at the level of hits. Sensitive detectors are defined and information of hits is used to settle a comparison with previous studies done in the geometrical acceptance, where a similar simulation was done in the framework of GEANT3.

Comparison in the two environments was also done (with the restrictions due to the rough description of a muon chamber sensitive area, without simulation of the endplugs). Encouraging results show a good agreement between the acceptance distributions obtained in GEANT3 and in GEANT4.

### Prototyping and Test Beam

For the forthcoming activities connected with the delivery of module0s and the test area programmes we propose to adopt/adapt the SAME environment as the one used for the detector description.

So we propose to adapt the AMDB for the present needs with a simplified description of the test beam area, implementing in the AMDB framework the complete description of the setups and adapting the present code for the simulations of the various components.

### Backward compatibility

Tests of GEANT4 vs. GEANT3 should be allowed also in the future to confirm our past assumptions, to verify the correctness of our expectations and to control if the new features included in GEANT4 satisfy the requirements.

The use of the AMDB guarantees backward compatibility also for the use of GEANT3 through DICE/MUONBOX.

### Who? How? Why?

#### Who will be doing the job?

It is essential to spread out the use of the OO software all over the muon community not only to cope with the present requirements of standards in ATLAS, but also:

1- to promote a renewal of our backgrounds

2- to prepare young people for the outside world

3- to be ready to communicate with the outside world.

#### How?

The use of the OO software was decided in ATLAS about two years ago. Once accepted, we could profit from the past experience from the communities where this choice was done previously to avoid known errors.

#### Why?

This question is provocative. In front of us stays the biggest effort ever conceived in this field and the solution to our problems sometimes seems to be not the most conservative. But the reasons why this migration was conceived is the maintainability, and robustness over the long life time of this new software.

### 9.0 Communication & Training

#### 9.0.1 Communication

In a large community as ATLAS it is essential to use the web pages as a dictionary of the current facilities/activities at the risk, sometimes, to be obsolete in the communication, due to the fast evolution of the different environments.

On the web we should be aware that the information implemented is continuously in evolution and so we should follow through the web the evolution as a reader, but be active as a developer in updating the pages.

A visit to our web site is recommended: from the main ATLAS Muon Spectrometer web page ([http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/muon_page.html](http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/muon_page.html)) follow the link Software & Performance or go directly to:

[http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/muon_software.html](http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/muon_software.html).

Then you can find here a direct link to the simulation web page.

(shortcut: [http://home.cern.ch/muondoc/software/Simulation/muonsimulation.html](http://home.cern.ch/muondoc/software/Simulation/muonsimulation.html)).

#### 9.0.2 Training

Training is also crucial in this procedure of migration to a new software. For that reason we have organized a series of GEANT4 courses held at CERN with an attendance of ~20 people each time and focalized on the needs of the various subdetectors.

Two completely hands-on courses lasting one week each were organized last June and July for the muon community mainly. These courses were very well tuned to meet the needs of the community without the requirement of previous knowledge of C++.

The main difference from the standard courses in this area resides in the reverse way to design a course like that: the start is from the end-user-point-of view. It was excellent for a prompt application of the exercises given in the course on the related subdetector activity and for a continuation after the teaching week on the true software for the specific subdetector.

In addition or in parallel to this effort we aim at having also a training through the web for people spread out in the world outside CERN. There is a core for a training course through the web, but it is a very big project mostly time consuming.Feedback is needed from the users on this point.

### 10.0 Our Organisation in the Muon Software Group

We are presently organized in a tree structure like the one presented in the following table (Table 10-1).

## 11.0 Summary of short term actions

The following projects are going to be launched and they need to be addressed in a short time scale(Table 11-1).

### 12.0 Summary of long term actions

The following projects are going to be launched and they need to be addressed in a long time scale(Table 12-1).

### 13.0 Email me

I will be happy to answer to your questions, to collect your comments and to profit from your suggestions. Please take note of my mail address: adele.rimoldi@cern.ch.

\begin{table}
\begin{tabular}{l l l} \hline \hline
**task** & **who** & **by** \\  & & **(at least first results)** \\ \hline AMDB to G4 to reconstruction through persint & Saclay Group & December 1999 \\ AMDB\({}^{\prime}\)/AMDB to G4 (G4 vs. G3) acceptance studies & A.Rimoldi & March 2000 \\ testbeam simulation H8 (+ G4 vs. G3) & & June 2000 \\ testbeam simulation test sites(+ G4 vs. G3) & & June 2000 \\ G4 vs. G3 (Phys. TDR figures) & & December 2000 \\ AMDB+ to G4 (RPC overlaps.) & & December 2000 \\ current simulation on test beam & O.Kortner & February 2000 \\ AMDB to G4 for TGCs & D.Lellouch & February 2000 \\ AMDB to G4 for CSCs & & February 2000 \\ XML to G4 for the Barrel (MDT+RPC) (XML vs. AMDB) & S.Goldfarb & April 2000 \\ Dead material, feet, shields in G4 with AMDB & S.Baranov & March2000 \\ \hline \hline \end{tabular}
\end{table}
Table 11.1: Software activities for the short time scale

\begin{table}
\begin{tabular}{l} \hline
**task** \\ \hline
**simulation of MDT,RPC,TGC,CSC in a global (ATLAS) scheme** \\
**simulation of dead material, supports, shields** \\
**performance studies to reproduce the Physics TDR figures** \\
**OO database interface** \\
**I/O** \\
**utilities \& tools** \\
**visualization** \\ \hline \end{tabular}
\end{table}
Table 12-1: Software activities for the long time scale
**Alignment of the Silicon Tracking Detector using Survey Constraints**

**Tobias Golling (Tobias.Golling@cern.ch)**

**Lawrence Berkeley National Laboratory**

**Berkeley, CA 94720, USA**

**Abstract:** The purpose of this document is to describe an alignment method for the ATLAS silicon inner detector based on survey data taken before the detector components are installed into the ATLAS detector. The method constrains the position of the detector elements locally to what is measured in the survey, taking into account the corresponding statistical and systematic uncertainties. This survey constraint algorithm is implemented as an Athena AlgTool which is supposed to be used in conjunction with any of the other tracking based alignment algorithms.

Introduction

The ATLAS silicon inner tracking system, consisting of the ATLAS Pixel detector and the Semiconductor Tracker (SCT), serves to reconstruct and measure the four momenta as well as the interaction vertices of charged particles. Both detectors consist of a central part of concentric cylindrical layers, referred to as barrel, in between two endcaps, which are made of layers of disks. Each layer is covered by close-fitting silicon sensors of rectangular shape and a length scale of roughly 10 cm.

The trajectories of charged particles are reconstructed from their intersection points with the silicon sensors, referred to as hits. The precision of this track reconstruction depends strongly on the alignment of the detector, both locally and globally. There are six degrees of freedom (DOF) per detector element (three translations and three rotations). Given the large amount of modules a total of almost 35 thousand DOF's have to be determined (see Table 1).

The track reconstruction itself can be used to align the detector by correlating detector elements traversed by a charged particle. However, the tracking information does not fully constrain the system of unknowns. External constraints, such as the survey data, help constraining weakly determined modes. In particular at the beginning of the ATLAS data taking period the number of charged particles for alignment will be limited so the survey constraint alignment [1] is expected to dominate the local alignment.

It will be shown in the following that the survey data of the relative positions of modules on rigid structures, such as sectors, disks or staves, is very precise and improves the tracking based alignment. Single barrels or disks are not rigidly coupled, so their relative positions are not well controlled and are not used for alignment purposes. Survey information of Pixel staves and sectors

\begin{table}
\begin{tabular}{l c c c c} \hline  & \multicolumn{2}{c}{Pixel} & \multicolumn{2}{c}{SCT} \\  & barrel & endcap & barrel & endcap \\ \hline \hline number of layers/disks & 3 & 2\(\times\)3 & 4 & 2\(\times\)9 \\ number of modules & 1456 & 2\(\times\)144 & 2112 & 2\(\times\)988 \\ sub total & 1744 & & 4088 \\ total & & 5832 & & \\ total number of DOF & & 34992 & & \\ \hline \hline \end{tabular}
\end{table}
Table 1: Number of layers, modules (detector elements) and number of degrees of freedom (DOF) in the silicon inner tracking device.

is not used since the improvement over the tracking based alignment only is found to be negligible. After discussing the survey data in Section 2, the method will be explained in detail in Section 3 and the performance results will be presented in Section 4, followed by a conclusion in Section 5.

## 2 Survey Data

During the assembly of the inner tracking sub-detectors detailed survey data are taken to measure the precise positions of the detector elements. The exact procedure to generate the survey measurements varies slightly from sub-detector to sub-detector.

This survey data is transformed into alignment data which consists of three translations in \(x\), \(y\) and \(z\) and three rotations about these axes, referred to as \(\phi_{x}\), \(\phi_{y}\) and \(\phi_{z}\). Here and throughout the whole document the local module coordinate system is used, where \(x\) and \(y\) are in the sensor plane, \(x\) describing the precision coordinate, and \(z\) is orthogonal to the sensor plane. Additional non-planarities of the modules are not taken into account in the survey constraint alignment. They are found to be negligible for the endcaps. Limited survey data of larger structures such as sectors, disks or staves are available but in particular the latter two are afflicted with large uncertainties, originating from mechanical instability associated with the further assembly and the installation. Thus, this data is not usable for alignment purposes.

An X-ray survey was scheduled for the SCT sub-detector but it is not going to be carried out due to a tight production and installation schedule. For the SCT barrel no alternative survey data is available. An attempt had been made to extract some useful survey information from a combination of a survey of the carbon-fiber cylinders prior to module mounting, using a touch probe CMM (Coordinate Measurement Machine), and the robotic assembly data. The positions of the plastic inserts to which each module is mounted were surveyed using the touch probe CMM. The robotic assembly data was not designed to survey the module positions, only to mount the modules precisely on their brackets. Both data sets are afflicted with systematic uncertainties larger than the positioning precision, which makes this data unusable for alignment purposes [2]. Instead the nominal positions are used with the appropriate uncertainties estimated from the precision of the positioning procedure.

Optical survey measurements are performed for the Pixel barrel, endcap and the SCT endcap using a so-called smart scope CMM. Two sets of measurement points are taken: One in the sensor plane and one for the out-of-planealignment. This is described here for the Pixel endcap: The measurement of \(x\) and \(y\) of survey targets at the 4 corners of each module allow one to calculate \(x\), \(y\) and \(\phi_{z}\) (in-the-plane alignment). 32 \(x\), \(y\), \(z\) points on the top side of each module (16 along one long edge, 16 along the other long edge) in the vicinity of the first and last chip ID pads of each front-end chip serve to calculate the remaining three alignment parameters \(\phi_{x}\), \(\phi_{y}\) and \(z\) (out-of-plane), as well as additional non-planarities, which are, however, not utilized for the survey constraint alignment.

The survey measurements and the extraction of the alignment parameters are currently ongoing and no final numbers are available yet. Once ready the six alignment parameters per module will be stored as deviations from the nominal positions in the ATLAS COOL conditions database [3].

Estimated preliminary statistical and systematic uncertainties on the survey alignment parameters are given in Table 2. The statistical uncertainty refers to the survey measurement precision. The systematic uncertainties, such as thermal and moisture expansion, dominate. Only the uncertainties on the relative positions and orientations of modules on a given structure (Pixel stave, Pixel sector, SCT stave and SCT disk) are shown. The uncertainties on the global alignment of these structures are irrelevant for the survey constraint alignment and are not considered. Here and in the following 'global' refers to the alignment of these structures.

## 3 Method

The survey constraint alignment method [1] exploits the fact that the survey data describes a test module's relative position with respect to reference

\begin{table}
\begin{tabular}{c c c c c} \hline  & Pixel stave & Pixel sector & SCT stave & SCT disk \\ \hline \hline \(\Delta x\) & 50 \(\mu\)m & 4.6 \(\mu\)m & 150 \(\mu\)m & 32 \(\mu\)m \\ \(\Delta y\) & 20 \(\mu\)m & 4.7 \(\mu\)m & 150 \(\mu\)m & 41 \(\mu\)m \\ \(\Delta z\) & 50 \(\mu\)m & 12.7 \(\mu\)m & 150 \(\mu\)m & 50 \(\mu\)m \\ \(\Delta\phi_{x}\) & 1.7 mrad & 0.3 mrad & 2.5 mrad & 1 mrad \\ \(\Delta\phi_{y}\) & 5 mrad & 0.7 mrad & 5 mrad & 1 mrad \\ \(\Delta\phi_{z}\) & 1.7 mrad & 0.12 mrad & 2.5 mrad & 0.09 mrad \\ \hline \end{tabular}
\end{table}
Table 2: Estimated preliminary statistical and systematic uncertainties on the survey alignment parameters for modules on a Pixel barrel stave [4], modules on a Pixel endcap sector [5], modules on an SCT barrel stave [2] and modules on an SCT endcap disk [6]. The systematic uncertainties dominate.

modules. It contains no information about a module's absolute position. The method was developed and used by the BaBar experiment [7]. Figure 1 depicts the current geometry (which is to be aligned) of four modules (gray), and their positions as measured in the survey (white). The survey constraint alignment is performed module by module. It consists of two steps, here exemplified for the first module on the left (module under test):

1. Global alignment of the three modules on the right (reference modules): In an iterative \(\chi^{2}\) fit the distance between the two sets of reference modules (current and survey) is minimized by moving all modules of a set together keeping their relative positions fixed. The module under test is excluded from the fit to avoid biases. This step is illustrated in Fig. 2 and results in a prediction for the position of the module under test (white module on the left).
2. The transformation of the module under test from the current (gray module on the left) to the predicted survey position (white module on the left) represents the alignment correction for the module under test.

The other three modules are aligned accordingly.

The philosophy of the survey constraint alignment [1] resembles the one of the tracking based alignment. Both approaches impose constraints on the relative positions and orientations of subsets of detector elements.

For the tracking based alignment the subset is given by the sum of all modules traversed by a charged particle. The collection of the resulting reconstructed hits is fitted to a track. To have an unbiased measure of the alignment parameters the layer which is to be aligned is excluded from the track fit. The distance between the track's intersection point with the detector and the reconstructed hit itself is used as a figure of merit for the alignment. The final alignment parameters are derived by minimizing this distance in a \(\chi^{2}\) approach which depends on the six alignment parameters per module. The analogy with the survey constraint alignment is outlined in Table 3.

It should be emphasized that the survey constraint algorithm is only designed to resolve local misalignments of modules in a close proximity, and is not applicable to resolve global misalignments (e.g. of whole layers). The reason is that the uncertainties on the global positions associated with the survey and the installation are found to be too large to make any contribution to the tracking based alignment.

The survey constraint algorithm is integrated into the tracking based alignment algorithms as an additional pseudo-hit per detector element. This is straightforward given the mentioned analogies in Table 3.

## 4 Performance Results

The results which are presented in the following are derived using ATLAS_RELEASE version 11.0.3 and the following code tags from CVS: InDetSurveyConstraintTool-00-01-03, SiRobustAlignAlgs-00-00-14, SiRobustAlignEvent-00-00-01, SiRobustAlignTools-00-00-06, InDetAlignGenTools-00-01-05 and InDetRecExample-01-00-68.

Section 4.1 describes which subsets of modules are chosen for the survey constraint alignment. In sections 4.2 and 4.3 the alignment performance is

Figure 1: Current alignment of four modules (gray), and their positions as measured in the survey (white).

Figure 2: Current alignment of four modules (gray), and their positions as measured in the survey (white) after the first step of the survey constraint alignment (see text). The white module on the left represents the predicted position and orientation of the module under test.

shown both for the survey constraint alignment standalone, and in conjunction with the tracking based Chi2AlignAlg [8], respectively.

### Scope of local survey constraint alignment

The choice of the subset of modules used for the local survey constraint alignment is driven by two contrary effects. On the one hand the larger the number of modules the more stable the algorithm is against single huge misalignments. On the other hand the dominant systematic uncertainties (in particular thermal and moisture expansion) on the survey constraints increase with the distance between modules, i.e. with the number of modules. The second effect is dominant. Therefore the smallest rigid structures are chosen to define the subset of modules used for the survey constraint alignment: a stave made of 13 modules for the Pixel barrel, a sector made of 6 modules for the Pixel endcap, a stave made of 12 modules for the SCT barrel and a disk for the SCT endcap, which varies between 40 and 52 modules.

### Standalone survey constraint alignment

The geometry is misaligned randomly according to Gaussian distributions with widths as given in Table 2. This represents an estimate of the geometry

\begin{table}
\begin{tabular}{c|c c} \hline  & tracking based alignment & survey constraint alignment \\ \hline \hline
1 & modules traversed by & modules in close proximity, \\  & a charged particle & mounted on rigid structure \\ \hline
2 & track fit & fit global position of \\  & & survey reference modules \\ \hline
3 & exclude module under test & exclude module under test \\  & from track fit & from fit (step one) \\ \hline
4 & predicted intersection point of & predicted position of module \\  & charged particle with sensor layer & under test from survey \\ \hline
5 & reconstructed hit & position of module under test \\  & & in current alignment \\ \hline
6 & minimization of distance & transformation of module under \\  & between hit and track & test from current to survey \\ \hline \end{tabular}
\end{table}
Table 3: Analogy between the tracking based alignment and the survey constraint alignment: set of modules used for alignment constraint (row 1), fitting technique (row 2), unbiased fit (row 3), predicted position (row 4), actual position (row 5) and alignment parameter determination (row 6).

of the as-installed detector, given a survey alignment which is chosen to be the nominal alignment. This simplification is done for convenience but does not represent a special case.

The survey constraint algorithm is applied iteratively four times. The residual misalignments after each iteration are shown in Fig. 3 - 5. As a reminder only local module coordinates are used.

Figure 3: Initial and residual misalignments after each iteration for modules on a Pixel barrel stave (please note the different scales on the \(y\)-axes). Initial misalignments are produced in \(x\) according to a Gaussian distribution with a width of 50 \(\mu\)m as given in Table 2. “module \(\eta\)” (from 0 to 12) identifies the \(\eta\) position of the module along the stave.

Figure 3 shows the initial and the residual misalignments after each iteration for modules on a Pixel barrel stave. Here only misalignments in the \(x\) coordinate are implemented. The following can be learned from these plots:

* The algorithm converges
* A misalignment in \(x\) results in visible but negligible misalignments in the other coordinates (please note the different scales on the \(y\)-axes in Fig. 3). The modules on the structures are not lying in a plane (e.g. the six modules on each side of a stave are rotated about the \(x\)-axis to allow for module overlaps). This results in small out-of-plane misalignments. Analogously the same is true for the other coordinates.
* The algorithm converges locally but not globally on the survey alignment. This residual global misalignment is expected to be present due to the finite number of modules used, which leads to non-zero mean values of the modules' global alignment parameters.

Whereas the first two items are trivial, the last one needs some explanation. It was mentioned in Section 3 that the algorithm is not expected to resolve global misalignments. To identify the residual misalignment as a global one it is necessary to visualize the geometry and the symmetries of a stave.

A global translation is easily identified as a constant off-set of all modules in \(x\), \(y\) or \(z\). Global rotations are a bit harder to identify. Given the symmetry of a stave a global rotation about the \(y\)-axis, which runs in the sensor plane through all modules, is represented by a constant rotation of all modules about \(\phi_{y}\), which can be identified in Fig. 3. A global rotation about the other axis in the sensor plane, the \(x\)-axis, is a bit more complicated described in local module coordinates: It corresponds to a constant off-set of all modules in \(\phi_{x}\) together with a misalignment in \(z\) which increases proportionally to the distance from the stave's origin of symmetry. A tiny misalignment of this kind is visible in Fig. 3. Finally, a global rotation about the out-of-plane \(z\)-axis is again represented by a constant rotation of all modules about \(\phi_{z}\) together with a misalignment in \(x\) which increases proportionally to the distance from the stave's origin of symmetry. This can be identified in Fig. 3. The length of a Pixel stave is roughly 800 mm, the off-set in \(x\) between the first and the last module is roughly 80 \(\mu\)m. This corresponds to a global rotation of the whole stave about \(\phi_{z}\) of 0.1 mrad. The constant local rotation about \(\phi_{z}\) of 0.1 mrad in Fig. 3 compensates any residual local alignment.

Figure 4 shows the initial and the residual misalignments after each iteration for an SCT endcap disk. Here only the misalignment in the \(y\) coordinate is implemented. Again one can see that the algorithm converges. The residual

misalignment is only a global misalignment: Both global translations of the whole disk within the \(x\)-\(y\) plane and rotations about \(\phi_{z}\) produce sinusoidal translations in the local \(x\) and \(y\), the latter also produces a constant local rotation about \(\phi_{z}\). Similar correlations exist between the out-of-plane alignment parameters \(z\), \(\phi_{x}\) and \(\phi_{y}\).

Figure 5 shows the initial and the residual misalignments after each iteration

Figure 4: Initial and residual misalignments after each iteration for modules on an SCT endcap disk (please note the different scales on the \(y\)-axes). Initial misalignments are produced in \(y\) according to a Gaussian distribution with a width of 41 \(\mu\)m as given in Table 2. “module \(\phi\)” (from 0 to 51) identifies the \(\phi\) position of the module on the disk.

for a Pixel endcap sector with local misalignments in all coordinates as expected from the survey. The same conclusions can be drawn as in the other two scenarios. Also, it can be seen that the speed of convergence increases with the number of modules per structure by comparing Fig. 3 (13 modules), Fig. 4 (52 modules) and Fig. 5 (6 modules).

Figure 5: Initial and residual misalignments after each iteration for modules on a Pixel endcap sector. Initial misalignments are produced according to Gaussian distributions with widths as given in Table 2. “module \(\phi\)” (from 0 to 47) identifies the \(\phi\) position of the module on the disk.

### Survey constraint + tracking based alignment

The previous Section 4.2 demonstrated that the survey constraint algorithm can recover the expected as-installed local misalignments. In this section the performance of a tracking based alignment algorithm, the Chi2AlignAlg [8], is compared with the combination of that algorithm and the survey constraint algorithm.

The geometry is misaligned according to Gaussian distributions with widths as given in Table 2. This represents an estimate of the geometry of the as-installed detector. This misaligned geometry is used both for the track fitting and for the survey alignment. The assumption that these two alignments are identical is a realistic scenario: At the beginning of data taking the survey alignment will be used both to reconstruct the data and for the survey constraint algorithm.

Reconstructed tracks are taken from a single pion Monte Carlo simulation with both charges and in bins of constant energy of 3, 5, 10, 20, 50, 100, 200, 500 and 1000 GeV. A total of 150000 events are generated and simulated with 10.3.0 and reconstructed with 11.0.3. They use the so-called "Post-Rome" geometry which consists of only two layers of Pixel detector instead of three layers as envisioned at the moment. All events are simulated and reconstructed with the nominal geometry. To guarantee a good quality of reconstructed tracks they are required to have a transverse momentum \(p_{T}>2\) GeV, not more than one hole and no shared hits.

The performance of the tracking based algorithm depends a lot on the number of tracks traversing a module. The available single pion statistics is not sufficient to obtain the optimum performance for all modules. Consequently, no absolute comparison is attempted here but only a relative comparison. It will be shown that the alignment improves when the survey information is added, but no comment is made on the absolute performance improvement.

The improvement is illustrated in Fig. 6 and Fig. 7 showing the residual misalignments after each iteration for the Pixel barrel modules using only the tracking based alignment (Chi2AlignAlg), and in combination with the survey constraint alignment, respectively. Table 4 and Table 5 show the residual alignment deviations from the actual nominal alignment after four iterations for the Pixel and the SCT detector, respectively. Both the figures and the tables show that the deviations for the combined alignment are always smaller than for the tracking based alignment only. The improvements are particularly large when the survey precision \(\Delta(\textit{survey})\), see Table 2, is much better than the alignment resolution from tracks only \(\Delta(\textit{tracks})\), as for example for \(\phi_{x}\) of the Pixel endcap, see Table 4: \(\Delta\,\phi_{x}(\textit{survey})=0.3\) mrad, \(\Delta\,\phi_{x}(\textit{tracks})=8.3\) mrad, and the combined alignment deviation from the nominal is \(\Delta\phi_{x}=0.31\) mrad1. For the Pixel barrel in the contrary \(\Delta\phi_{z}(\textit{survey})=1.7\) mrad and \(\Delta\phi_{z}(\textit{tracks})=0.53\) mrad, so the combined alignment deviation from the nominal is dominated by the tracks: \(\Delta\phi_{z}=0.47\) mrad.

Footnote 1: \(\Delta(\textit{survey})\) representing uncertainties on the survey alignment parameters, \(\Delta(\textit{tracks})\) and \(\Delta\) representing the widths of Gaussian fits to the module residual misalignment.

Figure 6: Initial and residual misalignments after each iteration for Pixel barrel modules using the Chi2AlignAlg only.

[MISSING_PAGE_EMPTY:14]

mation about the structures' absolute position. In the standalone mode the algorithm recovers initial local misalignments. The alignment performance of tracking based alignment algorithms, as shown for the Chi2AlignAlg[8], improves in combination with the survey constraint algorithm.

## 6 Acknowledgments

Many thanks to David Brown for inspiring discussions about the alignment procedures at BaBar, Richard Hawkings for giving me a hand with the ATLAS conditions database, Stephen Gibson, Murdock Gilchriese, Vadim Kostyukhin, Ron Madaras and Steve Snow for providing the estimated sta

\begin{table}
\begin{tabular}{c c c c c} \hline \hline  & Pixel stave (barrel) & \multicolumn{2}{c}{Pixel sector (endcap)} \\  & w/o survey & w/ survey & w/o survey & w/ survey \\ \hline \hline \(\Delta x\) & 42.4 \(\mu\)m & 22.0 \(\mu\)m & 14.3 \(\mu\)m & 5.2 \(\mu\)m \\ \(\Delta y\) & 103 \(\mu\)m & 28.3 \(\mu\)m & 119 \(\mu\)m & 6.7 \(\mu\)m \\ \(\Delta z\) & 87.5 \(\mu\)m & 30.5 \(\mu\)m & 433 \(\mu\)m & 18.9 \(\mu\)m \\ \(\Delta\phi_{x}\) & 1.14 mrad & 0.87 mrad & 8.3 mrad & 0.31 mrad \\ \(\Delta\phi_{y}\) & 4.16 mrad & 3.51 mrad & 19.0 mrad & 0.71 mrad \\ \(\Delta\phi_{z}\) & 0.53 mrad & 0.47 mrad & 0.42 mrad & 0.21 mrad \\ \hline \hline \end{tabular}
\end{table}
Table 4: Widths of Gaussian fits to the module alignment deviations from the actual nominal alignment for the Pixel detector after four iterations using the Chi2AlignAlg alignment only (w/o survey), and in combination with the survey constraint alignment (w/ survey).

\begin{table}
\begin{tabular}{c c c c c} \hline \hline  & SCT stave (barrel) & \multicolumn{2}{c}{SCT disk (endcap)} \\  & w/o survey & w/ survey & w/o survey & w/ survey \\ \hline \hline \(\Delta x\) & 123 \(\mu\)m & 103 \(\mu\)m & 20.4 \(\mu\)m & 13.7 \(\mu\)m \\ \(\Delta y\) & 830 \(\mu\)m & 378 \(\mu\)m & 193 \(\mu\)m & 52 \(\mu\)m \\ \(\Delta z\) & 435 \(\mu\)m & 300 \(\mu\)m & 696 \(\mu\)m & 59 \(\mu\)m \\ \(\Delta\phi_{x}\) & 8.8 mrad & 5.6 mrad & 14.2 mrad & 1.4 mrad \\ \(\Delta\phi_{y}\) & 7.3 mrad & 6.3 mrad & 14.2 mrad & 1.5 mrad \\ \(\Delta\phi_{z}\) & 2.21 mrad & 1.83 mrad & 0.34 mrad & 0.24 mrad \\ \hline \hline \end{tabular}
\end{table}
Table 5: Widths of Gaussian fits to the module alignment deviations from the actual nominal alignment for the SCT detector after four iterations using the Chi2AlignAlg alignment only (w/o survey), and in combination with the survey constraint alignment (w/ survey).

tistical and systematic uncertainties on the survey data, and thanks a lot to the people in the ATLAS alignment group, in particular Adlene Hicheur, Stefan Kluth and Jochen Schieck, for their feedback.

## References

* [1][http://atlas-sw.cern.ch/cgi-bin/viewcvs-atlas.cgi/offline](http://atlas-sw.cern.ch/cgi-bin/viewcvs-atlas.cgi/offline) /InnerDetector/InDetAlignTools/InDetSurveyConstraintTool
* [2] Private communication with Stephen Gibson.
* [3] Private communication with Richard Hawkings and [https://uimon.cern.ch/twiki/bin/view/Atlas/InDetAlignHowTo](https://uimon.cern.ch/twiki/bin/view/Atlas/InDetAlignHowTo)
* [4] Private communication with Vadim Kostyukhin.
* [5] Private communication with Murdock Gilchriese and Ron Madaras at LBNL.
* [6] Private communication with Steve Snow.
* [7] Private communication with David Brown at LBNL.
* [8][http://atlas-sw.cern.ch/cgi-bin/viewcvs-atlas.cgi/offline](http://atlas-sw.cern.ch/cgi-bin/viewcvs-atlas.cgi/offline) /InnerDetector/InDetAlignAlgs/SiRobustAlignAlgs
# Description of the TRT Readout Scheme

F. Luehring

Version 1.6

December 1, 2002

###### Abstract

This paper documents the TRT detector readout scheme. A description is provided of the data buffers used in the TRT readout chain: the single TRT channel output data format, the DTMROC output data buffer format, the TRT-ROD input FIFO data format, the TRT-ROD output buffer format, and the ROB output buffer data format. Also documented are the current designs for the TRT-ROD zero suppression and data compression schemes. A proposal is presented for ordering the data generated by individual TRT channels suitably for Level-2 triggering, Level-3 triggering and offline data processing.

## 1 Introduction

The TRT detector readout uses a chain of readout chips and modules. Charged particles generate current pulses as they cross the TRT straws. These current pulses are discriminated by a front-end chip, the amplitude shaper discriminator baseline restorer (ASDBLR). A second front-end chip, the drift time measurement and readout chip (DTMROC), records the timing of the digital signals generated by the ASDBLR and also buffers the data in a pipeline until a Level-1 trigger accept occurs. When an accept occurs, the DTMROC chip transmits data for 16 TRT channels to the TRT readout driver (TRT-ROD) module. The TRT-ROD forms a buffer of up to 1664 TRT channels (sent by up to 104 DTMROCs) and reduces the data size to fit within the ATLAS readout bandwidth. The TRT-ROD sends its buffer to a readout buffer (ROB) module that holds the data until the Level-2 trigger processor is ready to process it. The Level-2 trigger processes data from several TRT-RODs for a defined trigger region of interest (ROI) within the detector. Figure 1 shows the organization of the TRT readout chain.

## 2 Single Channel TRT Readout

When an ATLAS Level-1 trigger accept occurs, data collected during the 75 ns following the start of the bunch crossing generating the Level-1 accept is sent to the readout stream. The 75 ns readout period is three times the 25 ns separation between LHC beam crossings; these 25 ns periods are referred to as "time-slices". The signal from each TRT straw is continually being digitized synchronously with the LHC beam bunch crossings (40 million crossings per second - one every 25 ns) and put into a FIFO pipeline in the DTMROC. The Level-1 trigger accept selects which part if the data stored in the pipeline is sent to the readout stream. Two front-end chips, the ASDBLR and the DTMROC, do this signal digitizing and buffering.

Figure 1: shows a simplified drawing of the dataflow within the TRT readout chain.

### _Signal Discrimination by ASDBLR Chip_

The first front-end chip, the ASDBLR, produces two digital signals for each of the eight input straws: a tracking output using a lower (-200 eV) discriminator threshold and an electron identifying output using a second, much higher (-5000 eV) discriminator threshold. To reduce the number of outputs, the ASDBLR encodes the low and high threshold logic signals for a single channel into a single tri-level output ("the ternary output"). Separate circuits with different peaking times are used to shape the input signals to the two discriminators: a ~7.5 ns peaking time is used for the low threshold input and a ~10 ns peaking time for the high threshold input. Both the high and low discriminators have a minimum output width of ~6 ns. The outputs of the discriminators take ~1.5 ns to turn off after the input signal drops below the threshold. While the ASDBLR has essentially no dead time, there is a ~2 ns dead time in the time measurement introduced by the input stage of the DTMROC (the second front-end chip) used to receive the ASDBLR ternary output signal. The effective threshold for the low-level discriminator is temporarily increased for a short (order of 50 ns) period after the discriminator output turns on. The size and duration of the threshold increase depends logarithmically on the amplitude of the pulse firing the discriminator. For two input pulses that are closely spaced in time, the second pulse needs to be larger than normal to trigger the discriminator. For example, when the low threshold discriminator processes a 2 keV input pulse with a 200 eV low threshold, it takes a 330 eV pulse to fire the discriminator 25 ns after the leading edge of the initial 2 keV pulse. The size of the threshold shift falls off approximately exponentially with time. The channel-to-channel variation of the discriminator thresholds is \(\pm\)10% and the size of the variation depends slightly on the threshold setting.

### _Single Channel Data Format for the DTMROC Chip_

In recording the lower threshold signal generated by the ASDBLR, the DTMROC uses eight bits for each of three consecutive time-slices. The eight bits divide each time-slice into eight time bins that are approximately 25 ns/8 = 3.125 ns wide. A bit is set to one if the low threshold discriminator was on during the corresponding time bin. This leads to 3 X 8 = 24 bits being used to record the low threshold data. There are two designs for the DTMROC: one in the DMI process and one in a deep submicron (DSM) process. For the DMII DTMROC, the width of the time bins is not uniform. Seven of the bins in one time-slice are equal to each other but not exactly equal to 3.125 ns and the eighth bin in the time-slice is longer or shorter to make the eight bins sum to 25 ns in total. The non-uniformity of the time bins varies from chip to chip. The DSM DTMROC uses an improved design that should produce time bins that will be essentially uniform.

In recording the higher threshold signal, the DTMROC transmits one bit for each time-slice. The bit is set to one if the high threshold discriminator was on at anytime during the slice. This leads to a total 3 X 1 = 3 bits being used to record the high threshold data.

The set of 27 bits (24 low bits plus 3 high bits) is known as the "full encoding" and contains data for three time-slices with the data of the earliest time-slice stored in the most significant bits as shown in Figure 2. The high and low threshold data for each time-slice are put into nine consecutive bits. The high threshold bit is stored in the most significant bit of the nine and the data for the eight low threshold time bins are stored from most significant (first time bin) to least significant (last time bin) in the remaining eight bits.

Figure 2: shows the encoding format of a single TRT channel into the 27 full encoding bits. The full encoding stores three time-slices (bunch crossings) of data with the earliest data occupying the highest order bits.

### _Single Straw to DTMROC Connections_

The data processed by a single DTMROC comes from a group of adjacent or nearly adjacent straws in several different layers. Figure 3 shows how the straws are connected in groups of sixteen to the DTMROCs used to readout the TRT barrel. The DTMROC groupings in the end-cap are simpler than the barrel. The end-cap groups are four rows wide in \(\phi\) by four rows wide in \(Z\) and located in single four-plane assembly. However, even in the end-cap some of the DTMROCs on an end-cap front-end board are rotated by 90 degrees with respect to others resulting in a different connection pattern. The output buffer contains the data in an order that reflects the physical connections to the straws on the front-end circuit board. The DTMROC output buffer does not order its output sequentially by straw and layer.

## 3 DTMROC Readout

The DTMROC is continually processing and buffering data for sixteen TRT straws. When a Level-1 trigger accept occurs, the DTMROC transmits the data captured during the three time-slices following the Level-1 trigger accept to the ROD.

### _DTMROC Output Buffer_

Since 16 channels are contained in one single DTMROC, a DTMROC sends 16 X 27 = 432 bits of high and low threshold data to the ROD. When transmitting the data, the DTMROC adds a 12-bit word (3-bit preamble and 9-bit header) preceding the data bits resulting in a data buffer that is 444 bits long. In addition to the data mode, the DTMROC has a second mode (the send-id mode) where instead of sending normal data, the DTMROC sends a unique 6-bit identity number for testing purposes. The identity number for the DTMROC is stored in a special register reserved for this purpose. The send-id mode is used to test that the DTMROC circuit boards are correctly connected to the ROD. As in the data readout, the buffer in this case also has a 12-bit preamble/header. The identification numbers are padded with three empty bits to match the 9-bit data length of a single time-slice of real data. There are 48 identification numbers sent, making the full buffer length be 444 bits (the same as the data mode).

The DTMROC readout buffer starts with a 3-bit preamble and a 9-bit header containing information about the buffer. The 3-bit preamble is always set to <101> and used to check that the DTMROC buffer is being transmitted correctly to the ROD. The first of the header bits (SENDID) indicates whether the buffer contains event data or numbers identifying which DTMROC created the buffer. The header then contains information from two roll-over counters that count the number of Level-1 trigger accepts received and the number of beam crossings. Since data from many DTMROCs are assembled into a single buffer in the ROD, these counters are used to check that the input DTMROC buffers came from the same Level-1 trigger accept. If the content of these registers does not match for all channels, an error condition occurs. From time to time,

Figure 3: shows the groups of straws in that corresponding to individual DTMROCs. This example is for the TRT barrel â€“ the correspondence for the TRT end-cap is considerably more regular.

both L1ID and BCID registers are forced to zero throughout the system to resynchronize them. The DTMROC header also contains an error bit. The definition of the error bit depends on which version of the DTMROC is in use. For the DMill version of the DTMROC, having the bit set indicates whether the delay lock loop (DLL) has produced sensible data. For the DSM version of the DTMROC, the bit is set if any one of several possible errors occur. These errors include memory overflows, parity errors on the threshold or configuration registers, a sanity check, and problems with the DLL circuit. Table 1 shows the 12-bit header added by the DTMROC.

### _DTMROC to ROD Connections_

The data received by a single ROD comes from either a stack of three barrel modules or parts of many end-cap wheels. Each ROD is connected to a \(\phi\) segment of the detector:

* The **barrel** is divided into 32 \(\phi\) readout segments for each end of the detector. Each \(\phi\) segment spans all layers in a three-module stack at one end of the barrel. The \(\phi\) segment reads out a set of three modules consisting of one type 1 module, one type 2 module, and one type 3 module. Since there are 329 straws in a type 1 module, 520 straws in a type 2 module and 793 straws in a type 3 module, a \(\phi\) segment contains 329+520+793=1642 channels.
* The **end-cap** is divided into 96 \(\phi\) readout segments for each end of the detector. Each \(\phi\) segment spans a wedge-shaped region in all layers at one end of the TRT. For the type A & B wheels, 1/96 of a straw layer is eight channels and for a type C layer it is six channels. Since the \(\phi\) segment contains six type A wheels with 16 layers each, eight type B wheels with 8 layers each, and four type C wheels with 16 layers each, it contains (8 X 6 X 16) + (8 X 8 X 8) + (6 X 4 X 16) = 1664 channels. The end-cap \(\phi\) segment may be arranged differently during the initial ATLAS data taking periods if the type C wheels are unavailable. Changing the arrangement would require modifications to the wiring harness and patch panels for the end-cap.

A single ROD services up to 104 DTMROCs, consequently a total 16 X 104 = 1664 inputs are possible. This number matches precisely what is required for an end-cap readout segment and is slightly more than the required number of inputs (1642) for the barrel stack.

## 4 ROD Readout

The ROD reduces the size of the event data and creates an output data buffer with a header and trailer to transmit the blocks of data to the readout buffer module (ROB). The size of the output data must be reduced during this formatting to stay within bandwidth constraints1 of the ROD to ROB link. The size reduction is achieved by two techniques:

1. **Zero Suppression** to eliminate the data from channels that are not hit ("empty channels").
2. **Data Compression** to reduce the size of the data from channels that are hit ("hit channels").

The size reduction is done using an FPGA that is referred to as the "zero suppression engine". The TRT detector uses a total of 256 RODs operating in parallel to process the TRT data. Each ROD is divided into four sections with each section processing one quarter of the input data. The four sections of the ROD operate in parallel with each other.

\begin{table}
\begin{tabular}{l|l|l} \hline \hline
**Field** & **Bits** & **Description** \\ \hline
**Preamble** & **3** & **\textless{}101\textgreater{}** \\ \hline
**SENDID** & **1** & **Set to 1 when sending chip identification information and 0 when sending data.** \\ \hline
**L1ID** & **3** & **3-bit counter of Level-1A accepts to check synchronization between channels.** \\ \hline
**BCID** & **4** & **4-bit counter of beam crossings used to check synchronization between channels.** \\ \hline
**Error** & **1** & **Set to 1 if DLL is sensible (DMill). Set to 1 for a various error conditions (DSM).** \\ \hline \hline \end{tabular}
\end{table}
Table 1: shows the contents of the DTMROC output buffer preamble and header.

### _ROD Input Raw Data FIFO_

Each of the four sections of the ROD has its own FIFO of 446 32-bit words that holds the input data from 26 DTMROCs. The 27 bits of the full encoding are always stored in the least significant bits of the 32-bit words in the FIFO. Table 2 shows the contents of the input FIFO for one of the zero suppression engines on the ROD. The ROD assembles this input FIFO using the data that it receives from the 26 DTMROCs that are connected to it. In addition to the headers and data from the DTMROCs, the FIFO contains startup status bit maps indicating which of the thirteen DTMROCs in the group transmitted their data within the required three clock cycles after the ROD received the first preamble from one of the DTMROCs.

\begin{table}
\begin{tabular}{|l|l|l|} \hline
**Word** & **Content** & **Comments** \\ \hline
1 & L1ID from TRT-TTC & All DTMROCs read by this ROD should have this Level-1A ID \\ \hline
2 & BCID from TRT-TTC & All DTMROCs read by this ROD should have this beam ID. \\ \hline
3 & Header DTMROC 25 & **9-bit header (no preamble). DTMROCs numbered 0-25.** \\ \hline
4 & Header DTMROC 24 & **9-bit header (no preamble).** \\ \hline : & : \\
15 & Header DTMROC 13 & **9-bit header (no preamble).** \\ \hline
16 & Startup Status 13-25 & Startup status for the previous 13 DTMROCs \\ \hline
17 & Data DTMROC 25 Straw 15 & 27 full encoding bits \\ \hline
18 & Data DTMROC 24 Straw 15 & 27 full encoding bits \\ \hline : & : \\ \hline
29 & Data DTMROC 13 Straw 15 & 27 full encoding bits \\ \hline
30 & Data DTMROC 25 Straw 14 & 27 full encoding bits \\ \hline
31 & Data DTMROC 24 Straw 14 & 27 full encoding bits \\ \hline : & : \\ \hline
42 & Data DTMROC 13 Straw 14 & 27 full encoding bits \\ \hline : & : \\ \hline
224 & Data DTMROC 13 Straw 0 & 27 full encoding bits \\ \hline
225 & Header DTMROC 12 & **9-bit header (no preamble)** \\ \hline
226 & Header DTMROC 11 & **9-bit header (no preamble)** \\ \hline : & : \\ \hline
237 & Header DTMROC 0 & **9-bit header (no preamble)** \\ \hline
238 & Startup Status 0-12 & Startup status for the previous 13 DTMROCs \\ \hline
239 & Data DTMROC 12 Straw 15 & 27 full encoding bits \\ \hline
240 & Data DTMROC 11 Straw 15 & 27 full encoding bits \\ \hline : & : \\ \hline
251 & Data DTMROC 0 Straw 15 & 27 full encoding bits \\ \hline
252 & Data DTMROC 12 Straw 14 & 27 full encoding bits \\ \hline
253 & Data DTMROC 11 Straw 14 & 27 full encoding bits \\ \hline : & : \\ \hline
264 & Data DTMROC 0 Straw 14 & 27 full encoding bits \\ \hline : & : \\ \hline
446 & Data DTMROC 0 Straw 0 & 27 full encoding bits \\ \hline \end{tabular}
\end{table}
Table 2: shows the format of the input FIFO for each of the four zero supression engines in the ROD. Each word in the FIFO contains 32 bits. The full encoding bits always occupy the 27 least significant bits of the 32-bit word.

### _ROD Output Buffer_

When the TRT is read out, each ROD formats data from the channels contained in the input data buffers into an output buffer by subdividing the data three times:

1. Each ROD is divided into **4 groups** corresponding to the 4 ROD zero suppression engines.
2. Each group is divided into **16 blocks**.
3. Each block contains data from at most **26 channels**.

\begin{table}
\begin{tabular}{l|l l|l l} \hline \hline
**Word** & **Content** & & **Source** & **Type** \\ \hline
0 & Beginning of Block Type & 0xB0B0rrrr & Data Flow Controller & Control \\ \hline
1 & Start of Header Marker & 0xEEEEEEE & Data Flow Controller & Header \\ \hline
2 & Header Size & 8 & Data Flow Controller & Header \\ \hline
3 & Format Version Number & 0x08xxxxxx & Data Flow Controller & Header \\ \hline
4 & ROD Module ID and Serial Number & Data Flow Controller & Header \\ \hline
5 & L1ID from TRT-TTC & Header FIFO & Header \\ \hline
6 & BCID from TRT-TTC & Header FIFO & Header \\ \hline
7 & TRIGGER TYPE from TRT-TTC & Header FIFO & Header \\ \hline
8 & Detector Specific Event Type (blank) & Header FIFO & Header \\ \hline

[MISSING_PAGE_POST]

tatus Block Position** & **0** & **Data Flow Controller** & **Service** \\ \hline N+M+L+K+28 & End of Block Type & 0xE0B0rrrr & Data Flow Controller & Control \\ \hline \hline \end{tabular}
\end{table}
Table 3: is the TRT ROD output event data format. See text for contents of DLL status words.

Each ROD output block holds the data for a given channel number from each of the 26 input DTMROCs. For example, the first block generated will contain the data for the first channel (out of sixteen) of each DTMROCs processed by the zero suppression engine. Structuring the output buffers this way represents a significant reordering of the data into a format that does not correspond simply to the actual TRT geometry. At lower luminosities when data compression is turned off, the ROD generates actual data blocks containing 32-bit data words for each channel in the block. The low luminosity block also has 32-bit header and trailer words. However, when the data compression is in use at higher luminosities, the ROD does not generate blocks with header and trailer words. Instead, the data is put into a bit stream with the channels in the same order as when blocks are in use (see section 4.3.2). This bit stream occupies the location of the data words in the output data buffer. With this caveat, for all schemes the ROD output buffer format follows the format shown in Table 3. Since the TRT ROD always puts the buffer status words before the data words, the status block position word is always set to zero.

### _ROD Data Processing (Zero Suppression and Data Compression)_

In building its output buffer, the ROD can use zero suppression and/or data compression to reduce the data size. Since the fraction of empty channels varies dramatically with luminosity (see reference 1), different zero suppression and compression algorithms will be applied depending on luminosity:

1. A mode for testing where all 27 full encoding bits for all channels are put into the output buffer (no compression or zero suppression).
2. A mode for use at low luminosity where all 27 full encoding bits are put into the output buffer for the hit channels only (no compression).
3. A compressed mode for use at higher luminosity where only information about leading and trailing edges is put into the buffer for hit channels meeting certain selection criteria. Only two or three bits of information are included the output buffer for the other channels.
4. A compressed mode for use at intermediate luminosity that uses the same selection criteria as the high luminosity mode to put the same leading and trailing edge into the output buffer. However, instead of including two or three bits of information for the channels not meeting the selection criteria, the number of channels skipped between the current channel and the next selected hit channel is encoded in the output buffer.

The next two subsections describe the uncompressed and compressed data formats.

#### 4.3.1 Uncompressed Data Format

The ROD operation mode that outputs the full encoding information without compression for all hit channels is known as the "transparent mode" and can only be used at low luminosity where there are relatively few hits in the detector. In transparent mode, zero suppression is done by completely removing the information about empty channels. As a result, the 27 full encoding data bits for each hit channel must be accompanied by a 5-bit address that encodes which of the 26 input channels produced the data. Since the number of data words in each block is variable, it is necessary to have a header and a trailer for each block of data. Data blocks containing no hits are written as empty blocks made of just a trailer and header word. If the entire ROD has no hit channels, the ROD still generates the full number of blocks but all of them are empty. Table 4 shows the structure of the words in these data blocks.

For testing purposes, it is also possible to turn off the zero suppression and send the full encoding for all channels (a total of 1664 data words). Each data word is still 32 bits long although it not necessary to use

\begin{table}
\begin{tabular}{l|l|l|l|l} \hline
**Word** & **Bits 27-31** & **Description** & **Bits 0-26** & **Description** \\ \hline
1 & \textless{}11110- & Start Block Code & \textless{}0...0GGBBBB- & Group number (2 bits) \& block number (4 bits) \\
2 & \textless{}SSSSS- & Channel ID (0-25) & 27 data bits & 27-bit full encoding data for channel. \\ \hline \multicolumn{3}{l}{} & \textless{} & \textless{} & \textless{} \\ \hline N+1 & \textless{}SSSSS- & Channel ID (0-25) & 27 data bits & 27-bit full encoding data for channels. \\ \multicolumn{3}{l}{} & \textless{} & \textless{}11111- & End Block Code & \textless{}0...0NNNNN- & Number of hit channels in block (5 bits) \\ \hline \end{tabular}
\end{table}
Table 4: shows data block format in transparent mode when zero suppression is in use. This block is for a case where N out of the 26 possible channels in the block contains data.

five bits to identify the channel. Sending the full encoding data for all channels can only be done for brief periods before reaching bandwidth and pipeline limitations.

#### 4.3.2 Compressed Data Format

When running the TRT at even modest luminosity, the limited bandwidth available between the ROD and ROB makes it necessary to reduce the amount of data transmitted more than the reduction achievable by zero suppression. The compression schemes divide the TRT channels into three categories:

1. **Valid channels** are those that are likely to have been hit by a stiff, in-time track because their discriminator was on during a short validity gate.
2. **Invalid channels** are those that have been hit by a track that was unlikely to have been a stiff, in-time track because their discriminator was on during the readout but not within the validity gate.
3. **Empty channels** are those that were not hit and their discriminator was not on within the readout period.

The valid channel data is reduced from the 27 raw bits to 11 bits by only transmitting the leading and trailing edge times and a single bit for the high threshold trigger (see below). Data from invalid and empty channels are reduced to just two or three bits. In this scheme, 32-bit words are not used to hold the data for a single channel. Instead, the data is serialized into a bit stream and data from more than one channel occupy a single 32-bit word. It is possible for data from a single channel to span a border between two 32-bit words.

A channel is marked as valid when its low discriminator is on during any of four time bins, forming a ~12.5 ns long gate that is matched to the end of the signal pulse generated by a stiff track. The basis of the validity gate is that the trailing edges of these stiff track pulses arrive at the TRT electronics with very stable timing. All tracks deposit ionization near the wall when they enter the straw. This ionization deposited near the straw wall takes the maximum drift time to reach the wire and defines the trailing edge of the signal pulse. The validity gate does not actually look for a trailing edge because this allows the data to be kept when ionization from a second, later track hitting the straw extends the pulse and shadows out the trailing edge. The description of the validity gate in this paragraph is of the baseline definition of the gate. The validity gate is programmable and can be set to select channels with a discriminator output of any length, a leading edge, or a trailing edge at any time. In addition, the validity gate can also be freely programmed to look for the edges or levels at any time within the 75 ns of data. The final definition of the validity gate will be set based on studies of real data taken in the transparent mode (i.e. without data compression).

Simulation indicates that most (~97%) of the stiff, in-time tracks cause the discriminator to be on during at least one of the four time bins of the baseline validity gate (see reference 1). The stability of the trailing edge is determined by variations in the ionization deposited near the straw wall and the dependence of the ASDBLR circuit response on the amount of charge deposited in the straw. The 4-bin width of the validity gate is based on simulations that may be too optimistic about the time stability of the low threshold signal. In the detector, the validity gate will probably have to be a bin or two wider to achieve high efficiency. However widening the gate has the undesirable result of including more background hits and enlarging data buffer size.

Two versions of the ROD data compression scheme have been suggested one for medium or moderate luminosities and one for high or very high luminosities. The high luminosity scheme will be used when LHC achieves a substantial fraction of its design luminosity of 1.0 x 10\({}^{34}\) cm\({}^{2}\)s\({}^{-1}\). The medium luminosity scheme (sometimes referred to as the Nick Ellis or NE scheme) will be used at intermediate luminosities where using transparent mode is unfeasible but the fraction of hit channels is still reasonably low. Table 5 illustrates the baseline version of the content of these two schemes for the three types of channels. The baseline high and medium luminosity compression schemes described below encode one leading and one trailing edge for valid straws. However, a number of alternatives for what information is encoded have been suggested. The most likely alternative would be to encode two leading edges (one in the first time-slice and one in the second time-slice) and a flag indicating whether there was a trailing edge in the second or third time-slices.

\begin{tabular}{|l|l|l|} \hline
**Channel Type** & **High Luminosity** & **Medium Luminosity (Nick Ellis)** \\ \hline
**Valid Channel** & **<10HLLLTTT>** & **<10NNNNHLLLLTTT>** \\ \hline
**Invalid Channel** & **<01H>** & **<01NNNNH>** \\ \hline
**Empty Channel** & **<00>** & **<00NNNN>** \\ \hline \end{tabular}

**Table 5** shows the baseline version of the two schemes used to compress the data of individual TRT channels (see the paragraph below for a description of what the symbols in the chart mean).

In both the high and medium luminosity data compression schemes, channels with a valid hit are encoded beginning with <10>, channels with invalid hits are encoded beginning with <01>, and empty channels are encoded beginning with <00>. A ROD containing no hit channels will generate a <00> code for all channels in its output buffer. Both valid and invalid channels set a bit labeled H indicating if there was a high threshold discriminator fired during any of the three time-slices. In addition, valid hits record leading and trailing edge times generated by the low threshold discriminator. Four bits labeled LLLL record the first leading edge position in time-slices 1 and 2. There are sixteen time bins in time-slices 1 and 2, leading to fifteen possible valid leading edge times. The earliest possible leading edge (coded as <0001>) is when there is a zero in the first time bin and a one in the second time bin. LLLL is coded as **<0010>** when the third time bin is the first non-zero time bin and so on. LLLL is set to **<0000>** if there was no leading edge present within the first two time-slices. Four bits labeled TTTT record the last trailing edge position in time-slices 2 and 3. There are sixteen time bins in time-slices 2 and 3 leading to fifteen possible valid trailing edge times. The earliest possible trailing edge time (coded as **<0000>**) is when there is a one in the first time bin and a zero in the second time bin. TTTT is coded as **<0001>** when the second time bin is the last non-zero time bin and so on. TTTT is set to **<1111>** if there was no trailing edge present within the last two time-slices. NB: It is possible to program freely which information is included in the readout data. While this data format is the current baseline design, it may not necessarily be the final scheme.

The medium luminosity scheme is identical to the high luminosity scheme except the data for each recorded channel contains an additional four bits (NNNN) that indicate the number of empty channels preceding it within its data block. The indicated number of channels is suppressed from the output stream rather than being recorded as a series of **<00>** codes. Since an input data group has 26 X 16 = 416 channels in it, it is possible for a gap to be bigger than the largest gap that can be represented with four bits (15 empty channels). In this case, output data for the empty channel in the 16th position will be encoded to extend the gap to its full length using the code **<00NNNN>**. For very large gaps, this process of extending the gap is repeated as many times as needed.

In the compressed mode, the data are serialized into a bit stream instead of being put into individual 32-bit words. Unlike the uncompressed case where the data are formatted into blocks containing a header word, a trailer word, and the data from 26 channels, in the compressed mode no blocks are created. The high luminosity scheme generates data for every channel so the header and trailer words are not needed (as long as the data is read out in the same order every time). The NE scheme does not generate data for every channel but since it records how many channels are skipped, again no header or trailer words are needed.

### _ROD to ROB Connection_

A single ROD supplies data to a single ROB, therefore the TRT uses the same number (256) of ROBs as RODs. The error codes generated by the SLINK connection between the ROD and ROB are described in section 0 and the error code locations are shown in Table 3. The sixteen least significant bits in the Beginning and End of Block Type words are reserved to store error codes generated by the S-LINK connecting the ROD and ROB. The bits must be set to zero by the ROD before the buffer is sent. Only two bits are used in these sixteen bits:

1. **Bit 0** is set if there is a transmission error in the data of the previous event.

2. **Bit 1** is set if there is a transmission error in the control word for the previous event.

Note: the beginning and end of block words are used to frame the buffer and are not considered part of the event.2

Footnote 2: [https://www.sds.org/](https://www.sds.org/)

\begin{table}
\begin{tabular}{|l|l|l|} \hline
**Channel Type** & **High Luminosity** & **Medium Luminosity (Nick Ellis)** \\ \hline
**Valid Channel** & **<10HLLLTTT>** & **<10NNNNHLLLLTTT>** \\ \hline
**Invalid Channel** & **<01H>** & **<01NNNNH>** \\ \hline
**Empty Channel** & **<00>** & **<00NNNN>** \\ \hline \end{tabular}
\end{table}
Table 5: The baseline version of the two schemes used to compress the data of individual TRT channels (see the paragraph below for a description of what the symbols in the chart mean).

## 5 ROB Readout

Table 6 shows the ROB output buffer format, which is a simple encapsulation of the ROD output buffer. The ROB output buffer serves as the input to the Level-2 trigger processor.

### _ROB Connection to Level-2 Trigger and Regions of Interest_

The Level-2 trigger region of interest (ROI) is defined by the calorimeter trigger towers which have \(\Delta\phi\) = 0.2 which is about 1/30\({}^{\text{th}}\) of detector in \(\phi\). In the barrel TRT where the natural \(\phi\) segmentation is 32, this means that a ROI spans 3 ROBs. In the end-cap TRT where the natural \(\phi\) segmentation is 96, this means that a ROI spans 4 ROBs.

## 6 Data Order at Level-2

The following section describes an ordering ("the offline ordering") for the data channels processed by a single ROD that is different from the ordering ("the online ordering") described previously for the content of the ROD output buffer. It is expected that the data order in the ROD output buffer will be modified in the Level-2 processors to conform to these rules. The data order suggested in this section produces a reasonable order for use in the Level-2 and Level-3 trigger processors and for recording the data for offline use. The proposed offline ordering uses the coordinate system described in the next subsection (6.1).

### _TRT Coordinate System_

Daniel Froidevaux asked that this document propose a coordinate system for the TRT system. The following is suggested:

1. We use the ATLAS standard of +X chosen to point at the center of the machine, +Y chosen to point upward (i.e. against gravity), and +Z chosen to make a right handed coordinate system.
2. We take \(\phi\) angle to be zero along the +X axis. The \(\phi\) angle increases towards +Y (making a right handed coordinate system). The angle \(\phi\) is defined to range between zero and 2\(\pi\) (no negative values). This rule applies to both the +Z and the -Z halves of the detector to ensure that events near Z=0 have the same definition of \(\phi\) for all tracks.
3. We number the channels from 0 to N-1 where N is the number of straws in the layer. The straw number increases with increasing \(\phi\). This rule applies to both the +Z and the -Z halves of the detector.
4. We take the first channel in each layer to be the straw whose wire is on the +X axis or if no wire is on the +X axis, the first wire above the +X axis in the +X, +Y quadrant.

\begin{table}
\begin{tabular}{|l|l|l|} \hline
**Word** & **Name** & **Description** \\ \hline
**0** & **Start of Header Marker** & **0xDDDDDDDD** \\ \hline
**1** & **Format Version Number** & **0x08xxxxxx** \\ \hline
**2** & **Header Size** & **8** \\ \hline
**3** & **ROB Module ID and Serial Number** & **24-bit Level 1 trigger ID from TRT-TTC** \\ \hline
**4** & **L1D** & **24-bit Level 1 trigger ID from TRT-TTC** \\ \hline
**5** & **BCID** & **8-bit Bunch Crossing ID from TRT-TTC** \\ \hline
**6** & **Level 1 Trigger Type** & **Trigger Type from TRT-TTC** \\ \hline
**7** & **Detector Event Type** & **To Be Defined** \\ \hline
**8** & **ROD Buffer Contents** & **Rod Buffer Contents** \\ \hline : & : & : \\ \hline
**N+8** & : & : \\ \hline
**N+9** & **No. of Status Words** & **0** \\ \hline
**N+10** & **No. of Data Words** & **N** \\ \hline
**N+11** & **Status Block Position** & **0** \\ \hline \end{tabular}
\end{table}
Table 6: shows the ROB buffer format when the ROD buffer N words long.

### _Offline Ordering for Barrel_

There are 32 RODs at each end (+Z and -Z) of the barrel. Each contains data from a three-module stack of one type 1 module, one type 2 module, and one type 3 module. The stack spans 1/32 of the barrel in \(\phi\) (though not exactly the same \(\phi\) range in each layer) and spans all 73 layers in R. The ROD data block for each ROD contains signals from 1642 straws (slightly less than the 1664 inputs on a ROD). The offline ordering starts with the lowest \(\phi\) straw in the inner layer. The straws in the layer are numbered with increasing \(\phi\). When all straws in the first layer are numbered, the straws in the next layer in r are numbered starting with the straw at lowest \(\phi\). This process is repeated until all straws in all layers are numbered. Table 7 shows the number of straws for each barrel layer contained within a ROD buffer.

### _Offline Ordering for End-Cap_

There are 96 RODs at each end (+Z and -Z) of the end-caps. Each contains data from a wedge-shaped region in all eighteen wheels - six type A, eight type B, and four type C. The wedge spans 1/96 of the end-cap in \(\phi\) (though not exactly the same \(\phi\) range in each layer) and spans all 224 layers in Z. The ROD data block contains signals for 1664 straws (exactly the number of inputs on a ROD). The offline ordering starts with the lowest \(\phi\) straw in the inner layer. The straws in the layer are numbered with increasing \(\phi\). When all straws in the first layer are numbered, the straws in the next layer in Z are numbered starting with the straw

\begin{table}
\begin{tabular}{|r|r|r|r|} \hline
**Layer** & **Type 1** & **Type 2** & **Type 3** \\  & **19 layers** & **24 layers** & **30 layers** \\ \hline

[MISSING_PAGE_POST]

 \end{tabular}
\end{table}
Table 7: shows the number of straws from each layer in a barrel module stack connected to a single ROD.

at lowest \(\phi\). This process is repeated until all straws in all layers are numbered. Table 8 shows how many straws for each end-cap layer are contained within a ROD buffer.

## 7 Appendix: Glossary of Abbreviations

Definitions for abbreviations used in this document:

ASDBLR The amplifier-shaper-discriminator baseline restorer is the first TRT front-end chip. It shapes the charge deposited in a straw and applies a low and high discriminator threshold to digitize the analog ionization signal. A single ASDBLR chip has eight channels.

DTMROC The drift-time measurement and readout chip is the second of the TRT front-end chips. It digitizes the ASDBLR output state in time, stores the digitized information in a pipeline and transmits the information to the ROD when a Level-1 trigger accept occurs. A single DTMROC chip has sixteen channels and processes data from two ASDBLRs.

ROB The readout buffer is a module that buffers the event data produced by the ROD in a pipeline for use in the Level-2 trigger. All ATLAS subdetectors use the same ROB (unlike the ROD, which is specific to the TRT).

ROD The readout driver is the back-end electronics card that receives information from 104 DTMROCs and applies compression / zero suppression to the data before forwarding the data to the ROB.

ROI The regions of interest are sub-zones of the ATLAS detector used for Level-2 triggering purposes.

TTC The trigger, timing, and control module supplies the slow control and timing signals to the ASDBLR, DTMROC and ROD.

## 8 Acknowledgements

The author has benefited greatly from discussions with Daniel Froidevaux, Paul Keener, and Peter Lichard. The author acknowledges the assistance of the David Francis of the DAQ/EF group in understanding the ROD and ROB buffer headers. Pauline Gagnon patiently provided detailed editorial comments.

\({}^{1}\) M. Dam, "A Study of ROD compression schemes for the TRT", ATLAS Inner Detector Note ATL-INDET-2001-009.

\({}^{2}\) C. Bee, et al., "The raw event format in the ATLAS Trigger and DAQ", ATLAS DAQ Note ATL-DAQ-98-129, p. 14.

\begin{table}
\begin{tabular}{|r|r|r|r|} \hline
**Layer** & **Type A** & **Type B** & **Type C** \\  & **6 Wheels** & **8 Wheels** & **4 Wheels** \\ \hline
**1** & **8** & **8** & **6** \\ \hline
**2** & **8** & **8** & **6** \\ \hline
**3** & **8** & **8** & **6** \\ \hline
**4** & **8** & **8** & **6** \\ \hline
**5** & **8** & **8** & **6** \\ \hline
**6** & **8** & **8** & **6** \\ \hline
**7** & **8** & **8** & **6** \\ \hline
**8** & **8** & **8** & **6** \\ \hline
**9** & **8** & **6** \\ \hline
**10** & **8** & **6** \\ \hline
**11** & **8** & **6** \\ \hline
**12** & **8** & **6** \\ \hline
**13** & **8** & **6** \\ \hline
**14** & **8** & **6** \\ \hline
**15** & **8** & **6** \\ \hline
**16** & **8** & **6** \\ \hline \end{tabular}
\end{table}
Table 8: shows the number of straws from each layer in one end of the end-cap connected to a single ROD. Recall that 6 type A, 8 type B layers, and 4 type C layers are connected single ROD.
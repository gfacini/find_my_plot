**ATLAS Muon Note**

**August 17, 2004**

**MDT Autocalibration using MINUIT**

**Ch. Amelung**

_Physics Department_

_European Laboratory for Particle Physics (CERN)_

A novel method for obtaining the space-drift time relationship \(r(t)\) of the ATLAS muon spectrometer monitored drift tubes (MDTs) from measured drift times, the so-called auto-calibration procedure, is presented. Unlike existing methods, it is mathematically well-funded and makes use of the standard minimization tool MINUIT. Its performance is superior to that of the existing methods, which is demonstrated both with a toy simulation and with real data collected in the X5 test beam line in 2003.

###### Contents

* 1 Introduction
* 2 Autocalibration Methods
	* 2.1 Existing Algorithms
	* 2.2 Features and Issues
	* 2.3 A Novel Algorithm - the MINUIT Method
* Using a Toy Simulation * 3.1 Toy Simulation Program * 3.2 Performance Evaluation * 3.3 Performance Expectations * 3.4 Performance Results
* Using X5 Data * 4.1 Data from the X5 Test Beam Area, and Modified Toy Simulation * 4.2 Pattern Recognition and Ambiguities * 4.3 Performance Results
* 5 Other Properties of the MINUIT Method
	* 5.1 Tests of Convergence
	* 5.2 On CPU Time Usage
	* 5.3 Potential
* 6 Summary

## 1 Introduction

The ATLAS muon spectrometer has been designed to provide a good stand-alone momentum measurement of muons up to the highest expected energies [1]: the transverse momentum \(p_{T}\) should be measured with a resolution of \(\Delta p_{T}/p_{T}=10\%\) at \(p_{T}=1\,\mathrm{TeV}\). The muon spectrometer consists of MDT (monitored drift tube) chambers, composed of two multilayers comprising 3-4 layers of cylindrical (30 mm diameter) aluminum drift tubes glued onto a support structure of cross plates and long beams. The MDT chambers are placed in an air-core toroidal magnetic field, which has the advantage of causing only slight multiple scattering due to the small amount of material present between chambers. The drawback of this design is the relatively low magnetic field strength that can be reached. For example, the bending of a 1 TeV muon track in the magnetic field is such that the track sagitta varies between 500 \(\upmu\)m at pseudorapidity1\(\eta=0\) (in the barrel) and 1 mm at pseudorapidity \(\eta=2\) (in the endcap). Consequently, in order to measure the momentum of a 1 TeV muon to 10%, the error on the sagitta measurement must be less than 50 \(\upmu\)m in the bending direction of the magnetic field (transverse to the MDT wires). Each track is detected in three almost equally spaced layers of chambers; thus the design MDT single-tube resolution of 80 \(\upmu\)m contributes a sagitta error of 40 \(\upmu\)m, and the additional error from the alignment of the MDT chambers must not exceed 30-40 \(\upmu\)m.

For the reconstruction of a track segment in a multilayer, the drift times measured by the MDT tubes are converted to drift radii, to which a straight line is fitted. This requires a good knowledge of the space-drift time relationship \(r(t)\). An error of \(r(t)\) translates directly to a systematic contribution to the single-tube resolution, which should be small2 compared to the design resolution of \(80\,\upmu\)m. An error of \(20\,\upmu\)m is usually regarded as the target figure for an acceptable \(r(t)\) relation. As \(r(t)\) is a function of many external parameters, like gas composition, temperature, pressure, and the magnetic field, an \(r(t)\) calibration is required at regular intervals and separately for each multilayer of each MDT chamber (possibly even for separate portions of a multilayer). Lacking any sufficiently precise external reference in ATLAS, the determination of \(r(t)\) can only be performed using data, i.e. measured drift times, recorded by the MDT tubes themselves during the passage of muon tracks. This task is known as autocalibration.

Footnote 2: Perhaps a more useful specification is that the systematic contribution to the error of intercept and slope of the track segment should be small.

The requirements for a good autocalibration method are driven by the need of a fine-grained calibration at short intervals (of the order of several hours up to one day). The method should produce reliable results using a small number of measured tracks (of the order of \(10^{3}\)-\(10^{4}\)), for a limited angular spread (corresponding to the angular spectrum of tracks originating at the ATLAS interaction point and traversing the chamber in question), and within an acceptable computing time (i.e. the calibration should not take longer than collecting the data used).

In this note a novel autocalibration method is presented, which, unlike the existing methods, is mathematically well-funded and makes use of the standard minimization tool MINUIT. Its performance is superior to that of the existing methods, which is demonstrated both with a toy simulation and with real data collected in the X5 test beam line in 2003. This note is organized as follows: in Section 2, existing autocalibration algorithms are discussed and the new method is introduced. In Section 3, the performance of the new method is evaluated using a toy simulation, somewhat inspired by the procedure of Ref. [2]; the comparison to the existing methods follows closely the approach of Ref. [3]. In Section 4, the performance is evaluated using real data, and the comparison to existing methods follows Ref. [4]. Section 5 discusses other properties of the new method, and Section 6 summarizes the results.

## 2 Autocalibration Methods

### Existing Algorithms

For a long time in the history of the ATLAS MDT project, essentially only one autocalibration method has been used and studied in detail, which will be referred to in this note as the "traditional method" (TM). It has been described in great detail many times [5], so only a short summary of the algorithm is given here:

* A start \(r(t)\) relation is assumed. Usually, this starting point is obtained by integrating the measured drift time spectrum, which yields an already quite good estimate, differing from the true \(r(t)\) relation by no more than a few hundreds of \(\upmu\)m. Several improvements of the simple integration method have been proposed in order to improve this estimate even further.
* Straight tracks are fitted to the drift circles that were obtained from measured drift times by using \(r(t)\).
* Histograms of track residuals \(\Delta r\) are filled in slices of the drift time \(t\). A common choice for the number of slices is 70; in this case, the width of a bin corresponds to approximately \(\pm 1\sigma\) of the average spatial resolution.

* The mean values of the residuals, \(\overline{\Delta r}(t)\), are used directly to correct \(r(t)\). This is motivated by the (incorrect) assumption that a deviation of the assumed \(r(t)\) relation from the true one by some amount \(\delta r\) would shift the mean of the residual by exactly that amount.
* The initial \(r(t)\) relation is replaced by the corrected one, and the procedure is iterated. The iterations are stopped when all corrections become negligible (below \(1\,\upmu\)m). This is then (wrongly) referred to as "convergence".

Recently, a new method has been proposed [3], which will be referred to as the "Deile method" (DM). It is identical to the traditional method but for a modification of the fourth step in the procedure: rather than to use the average residuals, \(\overline{\Delta r}(t)\), directly as a correction for \(r(t)\), the correction is computed in a more complex way (based on a matrix formalism and eventually invoking3 MINUIT [6] for a numerical minimization) that takes into account resolution effects and correlations between different drift time slices \(t\).

Footnote 3: This use of MINUIT is completely different from the one that will be proposed later in this note. Especially, the iterative improvement of \(r(t)\) and the decision when to stop the iterations are, like in the TM, done in the DM “by hand”, outside MINUIT.

### Features and Issues

The properties of the TM (shared by the DM due to its inherent similarity to the TM), have been studied in great detail. The most important results are summarized here:

* A single track does not contain sufficient information to unambiguously constrain the \(r(t)\) relation; many tracks are required.
* Even many tracks passing all at the same angle are not sufficient; a sample of tracks with some angular spread is required. The quality of the resulting \(r(t)\) relation degrades for decreasing angular spread, until, in the case of no angular spread, the TM and the DM do not converge at all.
* Autocalibration is particularly difficult when using the information from only three layers of MDT tubes; the quality of the resulting \(r(t)\) relation improves when four layers can be used, or even both multilayers of an MDT chamber.
* The most difficult angular region is at \(30^{\circ}\), where the drift radii in all tubes hit by the track are the same.

A number of issues of the TM have been identified during the years; except for the last one, they are again shared by the DM:

* The start \(r(t)\) relation must not be far away from the true \(r(t)\) relation, otherwise the autocalibration procedure does not find the correct \(r(t)\) relation (with sufficient accuracy) under difficult circumstances, i.e. for small angular spread. This means, in a mathematical sense, that TM and DM do not search the full phase space of possible \(r(t)\) relations. As a work-around, methods were developed to obtain in a non-iterative way a good starting point for the procedure, like the integration of the measured drift time spectrum. The iterative procedure then only needs to improve the start \(r(t)\) relation by the last few hundreds of \(\upmu\)m.
* The final \(r(t)\) relation depends on the initial one. This dependence is only weak under comfortable circumstances, i.e. for large angular spread. Results can be improved by choosing a start \(r(t)\) relation close to the correct one. Mathematically it appears rather unacceptable that (to put it to extremes) a procedure converges at the correct result only if the correct result is used already as input; the result of a well-defined minimization procedure must not depend at all on the starting parameters.
* The "convergence criterion" used by TM and DM, that corrections to \(r(t)\) become less than \(1\,\mathrm{\SIUnitSymbolMicro m}\), does in fact not guarantee convergence at all. As a trivial example, assume that after having stopped the iterations, in the 21 following iterations corrections of \(0.99\,\mathrm{\SIUnitSymbolMicro m}\) each would have been computed: the \(r(t)\) relation would have changed by \(20\,\mathrm{\SIUnitSymbolMicro m}\), and thus by a relevant amount. More general, the well-known fact that \(\sum 1/n=\infty\) shows that no criterion of this kind can be mathematically justified. In other words, the procedure "does not know" when it has converged, and it is the responsibility of the user to guess at which point there is no further improvement to be expected.
* The speed of convergence of the TM is observed to be rather slow, especially in cases of small angular spread. The problem is solved in the DM, which converges approximately at the same speed in such cases. This behavior can be understood such that the TM does not determine, at every iteration, the next step in the optimal way (i.e. such that, at least close to the final \(r(t)\), the next step leads exactly to the final \(r(t)\)); the correction of this mistake is just the improvement introduced by the DM.

### A Novel Algorithm - the MINUIT Method

Given that autocalibration is nothing else than a minimization problem, it seems to suggest itself to make use of the standard minimization tool of the HEP community - MINUIT. The MINUIT algorithm has all the desirable properties of a good minimization procedure, in contrast to the deficits of the existing "hand-made" algorithms discussed above. It is able to find a minimum even far away from the parameter starting values, produces results that are (for well-defined problems) independent of these starting values, it "knows" when it has converged (and, even better, warns the user when it cannot converge or is not sure of its convergence, e.g. for an ill-posed problem), and, finally, it provides fast convergence to the minimum. Moreover, MINUIT is very easy to use. The only piece of code to be written by the user is a \(\chi^{2}\) function to be minimized that depends on a number of free parameters \(p_{1},p_{2},\ldots p_{n}\); the whole minimization process is taken care of by MINUIT.

For the case of autocalibration, it is easily guessed how to proceed. The free parameters \(p_{1},p_{2},\ldots p_{n}\) are used to parametrize the \(r(t)\) relation to be fitted, and \(\chi^{2}(p_{1},p_{2},\ldots p_{n})\) is defined as a measure of the goodness of the track fits that can be obtained using \(r(t,p_{1},p_{2},\ldots p_{n})\). MINUIT is called in order to minimize \(\chi^{2}\), and the final values of \(p_{1},p_{2},\ldots p_{n}\) represent the final \(r(t)\) relation. The obvious advantage, apart from the simplicity, is that the task of the user is reduced to worrying about what to minimize, rather than how to. Thus his potential for making mistakes is much reduced, because the complex task of minimization is left to a specialized and well-tested software package.

For a concrete implementation of this idea, the following choices have been made. The \(r(t)\) relation is parametrized using Chebyshev polynomials, which are regarded in the literature as "the best polynomials around" [7] for fitting curves of _a priori_ unknown functional form:

\[r(t,p_{1},p_{2},\ldots p_{n})=\sum_{i=1}^{n_{\mathrm{max}}}p_{i}\,T_{i-1}(t^{ \prime}), \tag{1}\]

where

\[T_{0}=1,\quad T_{1}=t,\quad T_{2}=2t^{2}-1,\quad T_{n+1}=2tT_{n}-t_{n-1}, \tag{2}\]

and \(t\in[t_{0},t_{\mathrm{max}}]\) is mapped in the obvious way onto \(t^{\prime}\in[-1,+1]\), in which interval the polynomials should be used (although evaluating them slightly outside the limits of the interval does no harm). The choice of \(n_{\rm max}=20\) as the maximum degree for the polynomials is relatively arbitrary; some tests were performed suggesting that 10 is possibly too low, and 30 definitely too high.4 As optional constraints, \(r(t_{0})=0\) and \(r(t_{\rm max})=R\) are implemented, i.e. the assumptions that the drift radii corresponding to the minimum and maximum drift times are the obvious ones - at the wire and at the tube wall, respectively. As it is not clear _a priori_ that these assumptions (or more sophisticated versions of them) do not introduce any bias, the constraints can be released. Note that fitting \(r(t_{0})\) for fixed \(t_{0}\) is essentially equivalent to fitting \(t_{0}\) for fixed \(r(t_{0})\) (and accordingly for \(t_{\rm max}\)); therefore, \(t_{0}\) and \(r(t_{0})\) cannot be fitted simultaneously. Finally, the \(\chi^{2}\) function to be minimized is defined as

Footnote 4: The idea of the tests is to study the variation of the minimum \(\chi^{2}\) for increasing values of \(n_{\rm max}\): if \(\chi^{2}\) decreases by no more than one unit for one added free parameter, the addition of that parameter has not improved the fit quality. MINUIT works well for any (reasonable) choice of \(n_{\rm max}\), the only limitations being that the running time increases approximately like the square of the number of free parameters (for a moderate number of parameters), and that MINUIT is distributed in a version that allows for no more than 50 fitted parameters. It is, however, easy to modify the MINUIT source code to increase this limit.

\[\chi^{2}(p_{1},p_{2},\ldots p_{n})=\sum_{i=1}^{N}\chi_{i}^{2}, \tag{3}\]

where \(\chi_{i}^{2}\) represents the \(\chi^{2}\) of the straight line fit to the drift circles in event \(i\) that were obtained using \(r(t,p_{1},p_{2},\ldots p_{n})\). MINUIT is used to minimize this \(\chi^{2}\) function, and the algorithm defined by all these choices will be referred to in this note as the "MINUIT method" (MM).

It can easily be seen that this definition of the \(\chi^{2}\) to be minimized translates to the statement that "the \(r(t)\) relation to be determined by the fit is the one that minimizes the track residuals" (which is just the statement that usually goes with the TM). It should be noted, however, that the \(\chi^{2}\) defined here is a measure of the residuals that accounts for both the mean values and the widths of the distributions (as it should be), whereas the TM only considers mean values.

It has been argued by some that the MM be equivalent to the DM. While this may be true for the underlying ansatz of minimizing a \(\chi^{2}\) function defined by the track residuals, the DM resembles in its actual implementation much more the TM, and thus shares most of its shortcomings, especially the issues discussed in the previous section. Moreover, the complexity of the DM contrasts strikingly with the simplicity of the MM: while the MM can be exhaustively explained on the back of an envelope, the full derivation and description of the DM requires many pages. As a consequence, the implementation of the MM for the studies presented in this note required essentially no more than one day for writing the code, and one week for debugging.

## 3 Performance of the MINUIT Method - Using a Toy Simulation

### Toy Simulation Program

For the implementation and testing of the MINUIT method a small toy simulation program has been written. It correctly implements the geometrical and mathematical features of the problem, without making any effort to model mechanical details like the tube wall thickness and the wire diameter, or all the physics of tracks passing through drift tubes.

Events are simulated in an MDT detector that is assumed as consisting of three layers of MDT tubes, in order to study the most difficult case for autocalibration. The program generates \(N\) events, each containing a single straight track described by \(Z=aY+c\), with flat probability distributions in track intercept \(c\) and angle \(\alpha=\arctan a\), where \(\alpha\in[\alpha_{\rm min},\alpha_{\rm max}]\). The parameters \(N\), \(\alpha_{\rm min}\), and \(\alpha_{\rm max}\) can be chosen by the user. A hit is generated every time the track traverses a tube, i.e. when the distance of closest approach from the tube center, \(r_{\rm true}^{\rm d.c.a.}\), is less than \(R=15\,{\rm mm}\). Using the assumed position resolution function \(\sigma_{r}(t)=\sigma_{r}(r(t))\), \(r_{\rm true}^{\rm d.c.a.}\) is smeared yielding \(r_{\rm measured}^{\rm d.c.a.}\), which is then converted to \(t_{\rm measured}\) using the inverse of the true \(r(t)\) relation: \(t_{\rm true}(r)=r_{\rm true}^{-1}(t)\). In order to avoid bothering with pattern recognition and ambiguities, the sign of \(r_{\rm true}^{\rm d.c.a.}\), i.e. the information if the track passed left or right of the wire, can be optionally retained. Where the simulation is compared to data, however, this information is discarded, and a pattern recognition algorithm is run.

For the simulated \(r(t)\) relation, an analytic function has been chosen that is in reasonable agreement with the typical \(r(t)\) relation observed in real data, while being at the same time easily invertible to \(t(r)\), in which form it is needed in the simulation (Fig. 1):

\[r(t)=15\,{\rm mm}\cdot\frac{\sqrt{|t|/700\,{\rm ns}+0.05}-\sqrt{0.05}}{\sqrt{ 1.05}-\sqrt{0.05}}. \tag{4}\]

The functional form of the resolution function \(\sigma_{r}(t)\) has been obtained from a fit to the resolution observed in data [8] (Fig. 1):

\[\sigma_{r}(t)=\left(e^{-1.71-0.29\cdot|r(t)/{\rm mm}|}+0.05\right)\,{\rm mm}. \tag{5}\]

The resulting average single-tube resolution is approximately \(90\,\upmu{\rm m}\), and thus slightly pessimistic as compared to the design value, but well in line with several recent studies of the resolution in data. The parametrization of \(\sigma_{r}(t)\) in the form of \(\sigma_{r}(r(t))\) easily permits to calculate the resolution either as a function of time or of the radius, which again is needed in the simulation. On the other hand, it raises the question whether or not \(\sigma_{r}(r(t))\) should be adapted for a given \(t\) in an event whenever \(r(t)\) changes during the minimization process. Doing this has been found to make the fit less stable and even to degrade the results under certain conditions; therefore \(\sigma_{r}(t)\) is kept fixed during the minimization and set to the value of \(\sigma_{r}(r(t))\) that is obtained assuming the start \(r(t)\) relation.

### Performance Evaluation

In order to quantify the performance of autocalibration algorithms, the r.m.s. deviation of the final \(r(t)\) relation from the expected one is used as the figure of merit:

\[{\rm r.m.s.}=\sqrt{\frac{1}{t_{\rm max}-t_{0}}\int\limits_{t_{0}}^{t_{\rm max }}[\delta r(t)]^{2}\ dt}, \tag{6}\]

where

\[\delta r(t)\equiv r_{\rm final}(t)-r_{\rm expected}(t), \tag{7}\]

and

\[r_{\rm expected}(t)\equiv\bar{t}_{\rm true}^{-1}(r). \tag{8}\]

The quantity \(\bar{t}_{\rm true}(r)\) denotes the average value of the drift time \(t\) for a given drift radius \(r\), and deviates slightly from \(t_{\rm true}(r)=r_{\rm true}^{-1}(t)\) at small drift radii, i.e. near the wire; very close to the wire, the deviation is in addition different depending on if the left-right information was retained or not. Autocalibration always converges to \(r_{\rm expected}(t)\), not to \(r_{\rm true}(t)\). This is a feature, not an issue, because it is anyway \(r_{\rm expected}(t)\) that should be used in track reconstruction, and thus it is reasonable to quantify the performance by comparing to this function.

### Performance Expectations

It is instructive to roughly estimate the expected statistical error of \(r(t)\) for a given number of tracks, \(N\). For not too large angles, the majority of track fits has one degree of freedom (three given drift radii, two fitted parameters for track intercept and slope), so each of the \(N\) tracks contains on average one unit of information about \(r(t)\). For simplicity, \(\sigma_{r}(t)\) is assumed as constant and set to the average single-tube resolution of \(\sigma_{r}=90\,\upmu\)m. The range of possible drift radii from \(r=0\) to \(r=R=15\,\mathrm{mm}\) is subdivided into equidistant bins of width \(\pm 2\sigma_{r}\) (thus containing about 95% of the measured radii corresponding to the true radius at the bin center), into which the \(N\) tracks are assumed to be uniformly distributed. With the formula for the error of the mean value of a distribution with \(N\) entries and width \(\sigma\), \(\delta=\sigma/\sqrt{2N}\), one obtains finally \(\delta r=\sqrt{R\sigma_{r}/8N}=13\,\upmu\)m for \(N=10^{3}\) tracks. As expected for a purely statistical error, \(\delta r\) decreases like \(1/\sqrt{N}\), and thus goes down to \(4\,\upmu\)m at \(N=10^{4}\) and \(1.3\,\upmu\)m at \(N=10^{5}\).

MINUIT provides the user with its own estimation of statistical errors of the fitted parameters. With a modified parametrization of \(r(t)\) using linear interpolation between \(n\) drift time bins (rather than Chebyshev polynomials, in order to avoid having to deal with correlations between parameters) it has been verified that the MINUIT prediction agrees with the above rough estimate within a few \(\upmu\)m, for a sample of tracks with large angular spread, and that indeed \(\delta r(t)\propto\sqrt{\sigma_{r}(t)}\) (which may seem counter-intuitive). For a sample with small angular spread, however, MINUIT shows that the rough estimate is too optimistic, and that the dependence of \(\delta r(t)\) on \(\sigma_{r}(t)\) becomes more complex.

As a conclusion from these estimates, it should be possible to determine the \(r(t)\) relation with an accuracy of better than \(20\,\upmu\)m from a sample of significantly less than \(10^{3}\) tracks with large angular spread. Both the TM and DM are however known to require significantly more than \(10^{3}\) tracks even under such favorable circumstances, and so it can be concluded already at this point that they do not make the best possible use of the available information.

### Performance Results

The performance of the MM has been evaluated for different numbers of tracks (\(N=10^{3}/10^{4}/10^{5}\)) and for different angular regions. Two examples have been chosen for a more detailed discussion (following the procedure adopted in Ref. [3]), namely \(\alpha\in[0^{\circ},25^{\circ}]\) and \(\alpha\in[24.5^{\circ},32.5^{\circ}]\), the former being a representative of cases with a large angular spread and thus a comfortable situation for autocalibration in ATLAS, while the latter represents one of the most difficult cases in ATLAS, with a small angular spread distributed around \(30^{\circ}\). For this study, the left-right information has been retained, and the \(r(t)\) relation has been fixed at \(r(t_{0})=0\) and \(r(t_{\mathrm{max}})=R\) (again following the approach of Ref. [3], in order to be able to compare the MM results to the performance of DM and TM as reported there in great detail). To obtain results with sufficient statistical accuracy, the MM autocalibration procedure has been run several times for each value of \(N\) using statistically independent event samples. The r.m.s. deviation of the final from the expected \(r(t)\) relation has been averaged over the individual results, and a few (randomly chosen) results for \(\delta r(t)\) are displayed in Figs. 2 and 3.

For \(\alpha\in[0^{\circ},25^{\circ}]\), corresponding to the coverage of the BOL1 chamber in ATLAS, the MM produces exactly the expected result. MINUIT converges nicely, with \(\mathrm{prob}(\chi^{2},\mathrm{ndf})\) evenly distributed between 0% and 100%. The final \(r(t)\) is, on average, centered around the expected \(r(t)\), and the r.m.s. deviation agrees very well with the statistical error as predicted by MINUIT. The \(\chi^{2}\) probability distribution of individual track fits, \(\mathrm{prob}(\chi^{2}_{i},\mathrm{ndf}_{i})\), as obtained with the final \(r(t)\) relation, is perfectly flat between 0 and 1 (as it should be). All this indicates that the MM is mathematically correct and unbiased, that its behavior is fully understood down to the level of a few \(\upmu\)m, and that it is optimal, i.e. that it fully exploits the information provided by the data. Compared to the other methods at \(N=10^{4}\), the performance of the MM (\(4\,\upmu\)m r.m.s.) is significantly better than that of the DM (\(13\,\upmu\)m r.m.s.) and the TM (\(18\,\upmu\)m r.m.s.). The two latter numbers are taken from Ref. [3].

For \(\alpha\in[24.5^{\circ},32.5^{\circ}]\), corresponding to EOL6 in ATLAS, the result is more complex. MINUIT again converges without problems, however now with \(\mathrm{prob}(\chi^{2},\mathrm{ndf})\) biased towards high probability values, i.e. with a \(\chi^{2}\) that is systematically too good. The statistical error predicted by MINUIT is on average larger than that for the comfortable case by a factor of three and has a completely different dependence on \(t\). The larger error predicted by MINUIT is again well reflected by the observed r.m.s. width for \(N=10^{3}\) and \(N=10^{4}\). At \(N=10^{5}\), however, it becomes obvious that the final \(r(t)\) relation deviates systematically from the expected one; also, while the r.m.s. deviation decreases approximately like \(1/\sqrt{N}\) from \(N=10^{3}\) to \(N=10^{4}\), this is not true for the step to \(N=10^{5}\), where it remains nearly constant. The \(\chi^{2}\) probability distribution of individual track fits is not flat, but instead biased towards high values and peaks at 1. All this indicates that here the quality of the result is limited by systematics, not by statistics - the information contained in the data is not sufficient to constrain the \(r(t)\) relation to the correct one. In other words, this means that the \(r(t)\) relation that minimizes the residuals, as measured by \(\chi^{2}\), is not the correct \(r(t)\) relation - there is a slightly different one that minimizes \(\chi^{2}\) even further, and this is the one found by MINUIT. This is bad - but unavoidable, because it is just a consequence of the missing constraints provided by the data. Again, the performance can be compared to the other methods at \(N=10^{4}\): the MM (14 \(\upmu\)m r.m.s.) is essentially as good as the DM (16 \(\upmu\)m r.m.s.), and both of them are significantly better than the TM (41 \(\upmu\)m r.m.s.).

Interestingly enough, MINUIT even converges when the MM is applied (in this configuration, i.e. retaining the left-right information and imposing the constraints on \(r(t)\)) to track samples without any angular spread (that is, for one fixed value of \(\alpha_{\rm true}\); due to the non-zero single-tube resolution, such samples do have a very small spread in the reconstructed angle \(\alpha\)). The performance is acceptable (for example, at \(\alpha=0^{\circ}\), about 40-50 \(\upmu\)m r.m.s. for \(N=10^{4}\) tracks). This is an aspect where the performance of the MM is superior to the TM and DM not only at the quantitative, but even at the qualitative level. Note however that this changes once the left-right information is discarded (Section 4.2).

A more comprehensive performance comparison between the methods is shown in Table 1. The general observation is that the performance of the MM is significantly better than that of the TM, and better than that of the DM. The difference between MM and DM becomes less pronounced for the difficult cases, while DM and TM approach each other for the comfortable cases, where the MM is significantly better than both of them.5 The same table also shows the effect of releasing the constraint on the \(r(t)\) relation at \(r(t_{0})=0\) and \(r(t_{\rm max})=R\). While the change in performance is typically negligible, the deterioration can be quite large (one order of magnitude) in the region around \(30^{\circ}\).

Footnote 5: The comparison between MM on one side and DM and TM on the other side has an uncertainty of probably some \(\upmu\)m due to small differences in the performance evaluation procedure, the \(r(t)\) relations, and the resolution functions \(\sigma_{r}(t)\), between this study and Ref. [3].

## 4 Performance of the MINUIT Method - Using X5 Data

### Data from the X5 Test Beam Area, and Modified Toy Simulation

In the GIF (gamma irradiation facility) zone of the X5 test beam area at CERN, a BIL chamber was installed in 2003 on a rotating stand [4]. The data used for this analysis were taken in the 100 GeV muon beam of the X5 beam line on July 12-13, 2003, without additional irradiation from the radioactive source in the GIF zone, and at discrete angles in the interval \([-20^{\circ},+20^{\circ}]\), mostly in steps of \(2.5^{\circ}\) (Fig. 4). As tracks at \(+\alpha\) and \(-\alpha\) contain identical information about the \(r(t)\) relation, this is equivalent to the interval \([0^{\circ},20^{\circ}]\) for the purpose of autocalibration. The data files were translated to ASCII format using a small standalone program [9], and using dedicated \(t_{0}\) files [8] to correct the start drift time. In order to emulate the case of autocalibration in three layers, only the first three layers of the first multilayer were used in the analysis.

The toy simulation program was adapted in order to be able to make a realistic comparison to data: the information if the track passed left or right of the wire was discarded, and background was generated in such a way that, with some probability, additional fake hits could appear in the event (noise), real hits could disappear (inefficiency), or the drift time of real hits could be changed (deltas). The probability constant describing this was tuned until reasonable agreement with data was reached in the fraction of events passing the pattern recognition procedure described below; the performance of the MM was found to depend only weakly on the noise probability. In order to reproduce the discrete angular spectrum present in the data, the probability distribution of \(\alpha\) was modified accordingly (Fig. 4).

### Pattern Recognition and Ambiguities

Due to the presence of background and the missing left-right information in the data and in the adapted simulation, a pattern recognition procedure has to be performed, and the ambiguities have to be resolved. The following two-step approach has been chosen:

* In the first step, all tubes with hits, i.e. with a measured drift time in the interval \([-50\,\mathrm{ns},+750\,\mathrm{ns}]\), are used for a straight-line fit to the tube centers with an assumed error of \(\sigma_{r}=30\,\mathrm{mm}/\sqrt{12}\). If the \(\chi^{2}\) probability of the track is less than 2%, the tube with the largest contribution to \(\chi^{2}\) is discarded and the procedure is iterated. Events with less than three tubes remaining are discarded, all others are retained for the next step.
* In the second step, all tubes remaining in the event are used, and for all left-right combinations straight tracks are fitted to the drift circles using the resolution function \(\sigma_{r}(t)\) (initially multiplied with some tolerance factor, which is reduced in further steps to unity). The combination with the best \(\chi^{2}\) is used for the autocalibration procedure only if the \(\chi^{2}\) probability of the track fit is better than 2%. For X5 data, about 70-80% of all recorded events pass the two selection steps.

The MM autocalibration itself is modified such that, after the first run, the chosen left-right combinations for all tracks are reconsidered in view of the new (final) \(r(t)\) relation, and the autocalibration is restarted. The result stabilizes quickly, after less than five iterations.

The overall behavior of MM autocalibration is not significantly changed by the addition of the pattern recognition procedure, and the results presented in Section 3.4 remain valid. The only change to be noted is that the procedure does not converge any more for event samples without angular spread: the final \(r(t)\) relation after each iteration step does not stabilize and moves further and further away from the true relation. It seems therefore that this is not a feature of the autocalibration procedure itself, but rather of the pattern recognition procedure wrapped around it, which turns out to be unable to identify useful tracks for the autocalibration with sufficient efficiency and purity under such conditions.

As a side remark, one could consider to move the step where all left-right combinations are tried, and the one with the best \(\chi^{2}\) is selected, into the \(\chi^{2}\) function, rather than to perform it several times outside the autocalibration procedure. On one hand, this would certainly be much more elegant; on the other hand, it would make the \(\chi^{2}\) minimization more difficult for MINUIT, because the functional form of \(\chi^{2}\) as a function of its \(N\) parameters would become quite complex at the points where tubes switch from left to right and vice versa: in the current implementation, it is closer to the \(N\)-dimensional equivalent of a parabola. In addition, it would increase the required CPU time, because at every call of the \(\chi^{2}\) function \(2^{m}\) different left-right combinations would have to be tried for an event with \(m\) tubes, while in the current implementation this needs to be done less than five times, outside the \(\chi^{2}\) function.

### Performance Results

In the analysis of the X5 data, the first test is to compare the \(r(t)\) relation obtained with the MM to that from the TM (in the implementation of Calib [10]) using the identical data set [4]. This comparison is performed for the full angular spread \(\alpha\in[0^{\circ},20^{\circ}]\) of the data sample, and for a sufficiently large number of tracks to make statistical fluctuations negligible (MM: \(N=10^{5}\), TM: of order \(10^{5}\) or more). The result is shown in Fig. 5: the final \(r(t)\) relations from the two methods agree very well, with an r.m.s. difference of \(15\,\upmu\)m. The maximum difference is less than \(12\,\upmu\)m far away from the wire, while it goes up to \(45\,\upmu\)m in the bin nearest to the wire. While the question "which method is wrong near the wire" is not considered to be relevant (due to the small magnitude of the difference, and the negligible impact this has on track reconstruction), it could eventually be resolved using an external reference. It should be noted that near the wire the quality of \(r(t)\) from the TM has often been regarded as questionable; this, together with the good performance in simulation of the MM near the wire, suggests that more likely the TM is responsible for the difference.

To test the performance of the MM on the X5 data, the studies performed with the simulation as presented in Section 3.4 are repeated with data, and are also compared to results from the adapted simulation. As the true, and thus also the expected, \(r(t)\) relation is unknown for data, the \(r(t)\) obtained with \(N=10^{5}\) and full angular spread is used instead there, in line with the procedure adopted in Ref. [4]. This one should, according to the simulation studies, be identical to the expected \(r(t)\) within an r.m.s. of less than \(2\,\upmu\)m.

First, the performance as a function of the number of tracks is studied, using the full angular spread \(\alpha\in[0^{\circ},20^{\circ}]\) (Fig. 6). The result agrees well with the expectations: the r.m.s. deviations decrease approximately like \(1/\sqrt{N}\), are therefore of purely statistical origin, and the r.m.s. error is below the target of \(20\,\upmu\)m even for as few tracks as \(N=10^{3}\) (out of which some 700-800 were actually selected by the pattern recognition procedure). The adapted simulation produces results that are in good agreement with data.

After that, the performance is studied as a function of the angular spread, for \(N=10^{4}\) tracks and angular spreads of \(\alpha\in[0^{\circ},5^{\circ}]\), \(\alpha\in[0^{\circ},7.5^{\circ}]\), and \(\alpha\in[0^{\circ},10^{\circ}]\) (Fig. 7). As expected, the results get worse for decreasing angular spread, and systematic deviations start to show up. Still, even for the smallest angular spread, the r.m.s. deviations are below the target of \(20\,\upmu\)m (to be compared to about \(125\,\upmu\)m obtained with the TM [4]). Here, the adapted simulation produces results that are systematically too optimistic when compared to data: while qualitatively the general tendency to develop increasing systematic effects towards smaller angular spread is well reproduced, quantitatively their magnitude is underestimated by a factor of about 1.7. The agreement can be improved by assuming in the simulation a modified (more pessimistic) spatial resolution \(\sigma_{r}(t)\) (Fig. 1); there are however clear indications that this resolution function does not describe the data in an acceptable way, so it is unlikely that the resolution function can be blamed for the disagreement. Another possible explanation could be the small differences in the discrete angular spectrum between data and simulation (Fig. 4). As this issue is not regarded to be very relevant, it has not been investigated further. All the results are summarized and compared to the TM in Table 2.

## 5 Other Properties of the MINUIT Method

### Tests of Convergence

In order to demonstrate the ability of the MM to converge to a distant minimum, the start \(r(t)\) relation is chosen as a linear function (Fig. 1), thus deviating from the true \(r(t)\) relation by several mm in r.m.s., and the autocalibration is performed for several different angular ranges. It turns out that MINUIT still finds the minimum reliably, at the moderate price of an increaseof the required CPU time by a factor of about 1.5 as compared to a case where the start \(r(t)\) relation differs (like is mandatory for the TM and the DM to work at all) from the true \(r(t)\) by no more than a few hundreds of \(\upmu\)m.

However, while being a nice proof that the MINUIT method is a mathematically well-funded procedure, it is admitted that its ability to find a distant minimum is only of limited interest in a real-life situation: autocalibration, for example in ATLAS, will always start from the \(r(t)\) relation that was determined in the previous calibration cycle, and since changes of \(r(t)\) between calibration intervals are supposed to be small, the initial \(r(t)\) relation will, for all practical purposes, be very close to the final one.

### On CPU Time Usage

The CPU time usage of the MM is dominated by the number of evaluations of the \(\chi^{2}\) function required by MINUIT to compute the steps towards the minimum, and to verify the convergence at the end. For example, for 20 fitted parameters, the \(\chi^{2}\) function is called about 700-1000 times (depending on how close the initial \(r(t)\) relation is to the final one), and every single time the fit of all \(N\) straight tracks has to be repeated for a different \(r(t)\) relation. On a desktop computer from the year 2002 (1.8 GHz, Pentium 4 CPU), for \(N=10^{4}\) tracks, and starting from a linear \(r(t)\) relation, the complete autocalibration procedure is performed in 1.2/3.0 min (without/with pattern recognition and subsequent iterations, respectively). Compared to the TM and the DM, this is slower by a factor between 10 and 100; the two are usually stopped after 10-100 iterations, each of which corresponds in terms of CPU time approximately to one call (slightly more for the DM) of the \(\chi^{2}\) function in the MM.

However, several factors in favor of the MM have been neglected here. Most important, a fair comparison should be made in terms of the accuracy that is reached (or requested), not in terms of the number of tracks that are used. For example, the target of 20 \(\upmu\)m r.m.s. accuracy is reached for \(\alpha\in[0^{\circ},25^{\circ}]\) already with \(N=300\) tracks in the MM, to be compared to \(N=6000\) tracks (TM) and \(N=3000\) tracks (DM) [3]. This translates to a gain of a factor 10-20 for the MM. An additional factor of about 3-4 could be gained by parametrizing the \(r(t)\) relation with 10 instead of 20 free parameters, in case this is found to be sufficient to describe all details of the \(r(t)\) relation present in the data. Finally, autocalibration in ATLAS is a task that can be trivially parallelized by distributing the autocalibration of different chambers onto different computers. While this becomes impractical and expensive for large amounts of computers, certainly an additional factor of 10 could be gained by using 10 CPUs.

The limit where CPU time becomes a real issue is the time that it takes to collect the data used for the autocalibration, which is the maximum time that can be allowed for their processing in steady-state mode. A very crude estimate of the collection time, assuming a usable muon rate in ATLAS of 100 Hz and about 2400 multilayers to be calibrated using \(N=10^{4}\) tracks each, yields 11 hours to collect the data, to be compared to 8 hours for the autocalibration using a typical CPU available in 2007 (assumed to be a factor of six faster than the 1.8 GHz CPU from 2002). Taking all these considerations together, the increased CPU power required by the MM cannot be regarded as an important issue.

### Potential

A very attractive feature of the MM is that it easily allows the user to try out variations of the autocalibration algorithm, and thus to study and understand its performance in depth. As a very simple example, one could define a different \(\chi^{2}\) function to be minimized, for example using the residuals only from the middle layer of tubes rather than from all three, or using only the mean values of the residuals in the different time slices, thus emulating the TM. Equally simple would it be to parametrize \(r(t)\) in a different way, e.g. using a linear interpolation between a fixed number of drift time bins, like it was done to extract the estimate of the statistical errors from MINUIT. Constraints like the above used \(r(t_{0})=0\) and \(r(t_{\max})=R\) can be imposed or released by fixing/releasing MINUIT parameters for the fit.

As a more complex example, one could think of performing combined fits, like autocalibration in two multilayers of an MDT chamber, with an unknown relative alignment of the multilayers, and allowing for two possibly different \(r(t)\) relations. The only modification required to the \(\chi^{2}\) function would be to implement the effect of the additional fit parameters: those describing the misalignment of the two multilayers (i.e. shifts and rotations of the MDT tubes), and those parametrizing the \(r(t)\) relation of the second multilayer.

All these variations of the algorithm require only minimal changes to the \(\chi^{2}\) function in the MM, while their implementation in the DM or the TM would be a major undertaking, because the minimization procedure would have to be completely rewritten. Avoiding this problem is one of the benefits of separating the task of minimization from the problem-specific part.

## 6 Summary

The MINUIT method (MM) is a novel method for autocalibration, i.e. for obtaining the space-drift time relationship \(r(t)\), of the MDT tubes in the ATLAS muon spectrometer. When compared to the existing algorithms, the traditional method (TM) and the Deile method (DM), it exhibits superior performance in converging to the correct \(r(t)\) relation, both in final precision and in robustness. It does not suffer from any of the mathematical issues of the existing algorithms, it easily permits to study variations of the autocalibration algorithm e.g. by performing combined fits, and it is trivial and effortless to implement. The price for all these advantages is an affordable increase in CPU time usage.

## Acknowledgments

The birth of the MINUIT method was self-triggered by an - at that time - innocent question ("Why don't you use MINUIT?") that I asked during a workshop to M. Iodice (INFN and U Rome III), who was the first person to explain the traditional autocalibration method in sufficient detail for me to understand it. So I thank him for that. In the course of the MM studies, M. Cirilli (CERN) and my office mate S. Rosati (CERN) patiently answered countless, and often very basic, questions. I am grateful to them and to many other colleagues for useful discussions and suggestions. M. Deile (CERN) kindly explained some details of his method to me. D. Salvatore (U Calabria) provided me with her \(t_{0}\) files, \(r(t)\) relation, and single-tube resolution function \(\sigma_{r}(t)\) for the X5 data, and M. Cirilli and S. Zimmermann (U Freiburg) provided me with (and adapted for my purposes) the ASCII dump program to read these data. Finally, I thank M. Cirilli for diligent proof-reading of the manuscript and helpful comments.

## References

* [1] ATLAS Muon Collaboration, ATLAS Muon Spectrometer Technical Design Report, CERN/LHCC/97-22.
* [2] P. Bagnaia, A Toy-Style Simulation of the Autocalibration Method for the ATLAS MDT Chambers, ATLAS Communication ATL-COM-MUON-2003-032.
* [3] M. Deile et al., Autocalibration: The Influence of the Track Incidence Angles and a New Method, ATLAS Communication ATL-COM-MUON-2002-011.
* [4] M. Cirilli et al., Results from the 2003 Beam Test of an MDT BIL Chamber: Systematic Uncertainties on the TDC Spectrum Parameters and on the Space-Time Relation, ATLAS Communication ATL-COM-MUON-2004-009.
* [5] see, for example, C. Bacci et al., Autocalibration of High-Precision Drift Tubes, ATLAS Note ATL-MUON-97-135, as well as references in Refs. [2] and [3].
* [6] F. James and M. Roos, Comp. Phys. Comm. **10** (1975) 343; MINUIT Reference Manual.
* [7] R. J. Barlow, Statistics, John Wiley & Sons (1989).
* [8] D. Salvatore, private communication.
* [9] M. Cirilli and S. Zimmermann, private communication.
* User Manual, ATLAS Communication ATL-COM-MUON-2002-004.
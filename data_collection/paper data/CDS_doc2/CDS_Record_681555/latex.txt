ATLAS Internal Note

ATL-COM-INDET-2003-016

28 July 2003

**The Vertexing package and its application in the \(\tau\)-tagging**

**Fabrizio Ferro**

Universita di Genova and INFN

via Dodecaneso 33, 10166 Genova - Italy

A package for the vertex reconstruction (_Vertexing_) has been developed in the ATLAS offline software. It consists of an Object Oriented interface to an existing fitting routine and of a set of test algorithms. The code is described in the first part of this note. In the second part, the _Vertexing_ algorithms are applied to the identification of the hadronic \(\tau\) decays. A 44.1% efficiency has been achieved in \(A\rightarrow\tau\tau\to hadrons\) (\(m_{A}=800\) GeV/c\({}^{2}\)) events. The jet-rejection has also been estimated in QCD events with high-p\({}_{T}\) jets.

###### Contents

* 1 The Vertexing package
	* 1.1 Introduction
	* 1.2 The fitting routine
	* 1.3 The interface
	* 1.4 The algorithms
* 2 Hadronic \(\tau\)-tagging
	* 2.1 Generalities
	* 2.2 Event reconstruction and \(\tau\) vertex resoluion
	* 2.3 \(\tau\) tagging
* 3 Summary

The Vertexing package

### Introduction

The Vertexing is a set of packages which performs the reconstruction of primary and secondary vertices. It is part of the ATLAS software official release since the one tagged 2.4.0, and it has been implemented as a sub-package of the Reconstruction container package. The algorithms have been created to work properly in the Athena [1] framework.

The vertex fit is performed by an external Fortran routine which has been wrapped into an Object Oriented C++ interface.

The Vertexing internal structure is the following:

* VertexFit: the interface;
* SimpleVertex: the object containing the vertex information;
* VertexPrimary: the primary vertex fitting algirthm;
* VertexExampleSecSeed: an example about the reconstruction of secondary vertices, starting from a seed;
* VertexExampleSecUserTracks: an example about the reconsruction of secondary vertices, using a user-defined track list;
* VertexExampleScheme: a dummy example which summarizes the example code structure.

### The fitting routine

The main fitting routine was written for the CDF experiment Run I [2] and its I/O was later adapted to the ATLAS standards [3]. By default it performs geometrical vertex fits, but kinematical and mass constraints can also be imposed to perform constrained fits.

The fit is based on a \(\chi^{2}\) minimization method. The minimization starts from the point which is the intersection of the first two tracks to fit. Its position is found projecting the two helices onto the \(r,\phi\) plane: if the resulting circles intersect, the point with the smaller \(z\) difference between the two helices (extrapolated to the intersection point) is chosen (see fig. 1); if they do not intersect, the vertex approximation is taken as the point of closest approach of the two circles.

The routine finds an initial approximation to the track parameters and adjust them in order to minimize the \(\chi^{2}\). The minimization proceeds by expanding the equations in a Taylor series around the last approximation, keeping only the linear terms and solving the resulting linear equations. The expansion and solution are iterated several times. The iteration is repeated until the linear terms become negligibly small.

### The interface

The interface is aimed to allow C++ algorithms to communicate with the fitting routine. Since the fit I/O is managed by means of Fortran common blocks, C structures and access methods have been provided.

The interface sets the fit options and stores in the C structures the track parameters extracted by a standard SimpleTrackCollection object[4]. The fitted vertex and the recalculated tracks are respectively stored in a SimpleVertex object and in a new SimpleTrackCollection.

The possibility of evaluating the single track contribution to the vertex \(\chi^{2}\) is provided as well. The track with the highest \(\chi^{2}\) can be spotted, marked and, in case, excluded from the new list of tracks to be fitted. This procedure can be iterated until at least one track exceeds a previously set \(\chi^{2}\) limit. If less than two tracks are left, the fit is aborted.

The interface can operate in three different modes:

* **mode 1**: only the primary vertex is fitted. All the reconstructed tracks which satisfy a few basic quality cuts are passed to the vertexing; the \(\chi^{2}\) control provides a further selection to eliminate tracks emerging from secondary vertices.

Figure 1: _First vertexing approximation from two tracks. The picture has been obtained projecting two helices onto the \(r-\phi\) plane (left) and \(r-z\) (right). If the projections of the two tracks in the \(r-\phi\) plane intersect (left), the point with the smaller z difference between the two helices (right) is chosen._

**mode 2**: only the secondary vertices are fitted; the primary vertex position and error matrix are hardwired.
* **mode 3**: both primary and secondary vertices are reconstructed.

These features have been split in different objects in the interface design which is described in fig. 2.

More details about the code and how to use it can be found in [5].

The overall vertexing procedure is shown in fig. 3.

### The algorithms

Three algorithms, to be run in the Athena framework, have been included in Vertexing: VertexPrimary, VertexExampleSecSeed, and VertexExampleSecUserTracks.

In VertexPrimary all the reconstructed tracks which satisfy a few quality cuts are used to fit the primary vertex. By default the iteration to delete the track with the highest \(\chi^{2}\) is also enabled.

A sample of about 800 events with a 100 GeV/c\({}^{2}\) SM Higgs decaying into \(b\overline{b}\) has been used to test the algorithm. The resolution is improved using the loop, since, at the end of the iteration, most of the tracks emerging from the B secondary vertices have been dropped.

The fit has been performed without imposing any beam spot constraint which could help in getting a better resolution. The resulting RMS's are summarized in table 1.

The VertexExampleSecSeed algorithm has been used to test the interface technicalities when reconstructing secondary vertices. A b quark is looked for in the Pythia simulated data (GENZ) and its direction is used as a seed; no dedicated tuning for B particles has been done. As a pure exercise, a rough estimation of the B mean free path has been performed (see fig. 4). The fitted value of \(\gamma c\tau\) is \((3.3\pm 0.3)\)\(mm\) (the error is underestimated since the vertexing resolution is not included), to be compared with the expecta

\begin{table}
\begin{tabular}{|c|c|c|c|} \multicolumn{3}{c}{RMS (\(\mu m\))} \\ \hline  & \(x\) & \(y\) & \(z\) \\ \hline Loop enabled & 24 & 24 & 48 \\ Loop disabled & 37 & 38 & 61 \\ \hline \end{tabular}
\end{table}
Table 1: _Primary vertex resolutions (\(H\to b\overline{b}\) events). No beam spot constraint has been applied in the fit._
Figure 2: _The interface design. The interface is made of five classes: Flags_n_Par, Vf_io, Vf_st, Vf_Chi2 and lego. A brief description of the classes and of their main parameters is provided._

Figure 3: _A summary of the vertexing procedure._

\(\gamma c\tau\simeq 4.3\ mm\) (an average transverse B momentum of 50 GeV/c has been considered).

To test the VertexExampleSecUserTracks algorithm, a sample of about 5000 \(A\rightarrow\tau\tau\) events have been analyzed.

The track list for the \(\tau\) vertex fit has been created storing the tracks associated to a three prongs hadronic \(\tau\) decay. The \(\tau\) vertex resolution is shown in table 2.

An approximated mean free path estimation has been performed (fig. 5). It is in fair agreement with the expectation (\(\gamma c\tau\simeq 20\ mm\), for 400 \(GeV/c\) average transverse \(\tau\) momentum).

[FIGURE

\begin{table} RMS (\(cm\))

\begin{tabular}{|c|c|c|} \hline \(x\) & \(y\) & \(z\) \\ \hline
0.40 & 0.40 & 0.51 \\ \hline \end{tabular}
\end{table}
Table 2: \(\tau\)_vertex resolution._

Figure 4: _Distance between primary and secondary vertex (\(H\to b\overline{b}\) events). \(\gamma c\tau\) for B’s estimated by means of an exponential fit (the vertexing resolution is not included in the error estimation). The first two bins have not been fitted in this exercise; they show an excess caused probably by a primary vertex track contamination._

## 2 Hadronic \(\tau\)-tagging

In this part of the note, it is described how the Vertexing can be used in the \(\tau\)-identification, which is extremely important in the study of several physics channels (e.g. \(A/H\to\tau\tau\)).

The \(\tau\) lepton has a 15.2% probability of decaying hadronically into three prongs. In this case, the \(\tau\) secondary vertex can be spotted by means of the Vertexing tools. Moreover, the recalculated track parameters and their \(\chi^{2}\) contribution to the vertex can be used to establish \(\tau\)-identification criteria.

### Generalities

In order to optimize and test the hadronic \(\tau\) identification, signal and background events have been generated with PYTHIA 6.203[6] and simulated with ATLASIM[7]:

* signal: \(bbA\to bb\tau\tau\to bb+hadrons\) with m\({}_{A}\)=800 GeV/c\({}^{2}\);
* background: QCD di-jets (with three different cuts on minimum \(p_{T}\): 50, 100, 200 GeV/c).

The particle level filter was set requiring \(|\eta|<2.7\) and at least one parton with \(p_{T}>17\) GeV/c (see table 3).

Figure 5: _Distance between primary and secondary vertex (\(A\to\tau\tau\) events). \(\gamma c\tau\) for \(\tau\)’s estimated by means of an exponential fit (the vertexing resolution is not included in the error estimation)._

### Event reconstruction and \(\tau\) vertex resolution

The event reconstruction has been done using the Athena framework. The software used is that inside the release 4.0.1. A complete reconstruction inside the Inner Detector (ID) and the calorimeters has been performed. The pattern recognition algorithm xKalman[8] has been used to reconstruct tracks inside the ID, while the primary and secondary vertices have been reconstructed using the Vertexing algorithms. The tauRec[9] package (with the parameters opportunely tuned) has been used to get the \(\tau\) candidate parameters useful for the \(\tau\) identification. An estimation of the \(\tau\) vertex resolution, in the directions parallel and orthogonal to the \(\tau\)-jet axis, has been performed fitting the tracks coming out from a three-prong decaying \(\tau\) (see fig. 6).

\begin{table}
\begin{tabular}{|c|c|c|c|c|} \hline Channel & Generated events & Filtered events & Acceptance & Rejection \\ \hline Signal & 25000 & 24125 & 96.5 \% & - \\ \hline \hline QCD 50 & 50000 & 40910 & - & 1.222 \\ \hline QCD 100 & 50000 & 48348 & - & 1.034 \\ \hline QCD 200 & 50000 & 49950 & - & 1.001 \\ \hline \end{tabular}
\end{table}
Table 3: _Data filtering._

Figure 6: \(\tau\) _vertex resolution in the direction orthogonal to the jet axis (left) and parallel (right). The distributions have been fitted with the function resulting by the sum of two gaussians, with \(\sigma_{1}\) and \(\sigma_{2}\) as standard deviations._

### \(\tau\) tagging

\(\tau\) identification has been developed in the studies published in [10], in [11] and [12], where mainly the information coming from the calorimeters have been used and where only the _1-prong_ decays were selected. In this note it is shown that the \(\tau\) identification of the _3-prong_\(\tau\)-decays can be done more performant exploiting the Inner Detector precise track measurements. Since in this study hadronic \(\tau\) decays are looked for, all the reconstructed jets are considered as candidates to the analysis. These are pre-selected using tauRec (its parameters have been tuned to make it work as a high efficiency jet finding algorithm).

The Vertexing algorithms have been used to fit both the primary and the secondary vertex. Moreover, in order to minimize the contamination from particles not coming from the \(\tau\) decay, the secondary vertex fit is performed using the (at most) three tracks with the highest \(p_{T}\) inside the jet.

To select _1-prong_\(\tau\)'s, it is required

* \({\rm R}_{em}<0.12\), where \({\rm R}_{em}\) is the jet radius computed in the EM calorimeter using only the electro-magnetic cells contained in the jet;
* one isolated track with \(p_{T}>40\) GeV/c within a cone of opening1\(\Delta R<0.1\) from the jet axis (as evaluated by tauRec) and no other track with \(p_{T}>1\) GeV/c in a cone of \(\Delta R<0.4\). Footnote 1: \(\Delta R=\sqrt{\Delta\eta^{2}+\Delta\phi^{2}}\)

_3-prong_\(\tau\)'s are selected requiring

* _1-prong_ selection failed;
* \({\rm R}_{em}<0.12\);
* one isolated track with \(p_{T}>40\) GeV/c within \(\Delta R<0.1\) from the jet axis (as leading track), at most two other tracks with \(p_{T}>1\) GeV/c in a cone of \(\Delta R=0.03\) around the leading track and no other track (_isolation cut_) with \(p_{T}>1\) GeV/c and \(0.03<\Delta R<0.4\) (see fig. 7);

The further _3-prong_\(\tau\)-decay selection exploits the decay topology features, as reconstructed by the vertexing algorithm. The secondary vertex fit provides a logical flag concerning the fit result (see set 2 below), the overall \(\chi^{2}\) value (see set 1) and the secondary vertex position (see sets 3 and 4).

Figure 7: _Isolation criteria_.

Figure 8: _A \(\rightarrow\tau\tau\): a) number of tracks to be fitted, b) \(p_{T}\) and c) \(p_{T}\) of the most energetic track._

Figure 9: _QCD di-jets (50 GeV/c cut on minimum p\({}_{T}\)): a) number of tracks to be fitted, b) p\({}_{T}\) and c) p\({}_{T}\) of the most energetic track._

Figure 10: _QCD di-jets (100 GeV/c cut on minimum \(p_{T}\)): a) number of tracks to be fitted, b) \(p_{T}\) and c) \(p_{T}\) of the most energetic track._

Figure 11: _QCD di-jets (200 GeV/c cut on minimum p\({}_{T}\)): a) number of tracks to be fitted, b) \(p_{T}\) and c) \(p_{T}\) of the most energetic track._

_3-prong_\(\tau\) candidates are eventually kept if they satisfy one of the following requirement sets, used in _OR_ (the cut values have been optimized in order to achieve a high rejection rate on the background):

* **Set 1*
* the \(\chi^{2}\) contribution of the tracks fitted to the secondary vertex smaller than the contribution of the same tracks to the primary;
* the number of the tracks fitted to the vertex equal to 3;
* \(p_{T3}>7\) GeV/c (with \(p_{T3}\) the transverse momentum of the third most energetic track).
* **Set 2*
* 3 tracks fitted to the vertex;
* \(p_{T2}>40\) GeV/c (with \(p_{T2}\) the transverse momentum of the second most energetic track).
* **Set 3*
* \(d_{r\phi}^{12}>0.4\) cm (with \(d_{r\phi}^{12}\) the distance, projected onto the \(r\phi\) plane, between the primary and secondary vertex);
* 3 tracks fitted to the vertex;
* \(p_{T1}>50\) GeV/c (with \(p_{T1}\) the transverse momentum of the most energetic track);
* \(p_{T2}>25\) GeV/c.
* **Set 4*
* \(d_{r\phi}^{12}>0.4\) cm;
* 2 tracks fitted to the vertex;
* \(p_{T1}>50\) GeV/c;
* \(p_{T2}>35\) GeV/c.

In figs. 8, 9, 10, 11 the number of tracks to be fitted, the \(\tau\) candidate \(p_{T}\) and the most energetic track \(p_{T}\) are respectively shown for signal and background (the \(\tau\) candidates are those selected after the isolation cut).

The same \(\tau\)-tagging selection has been applied both on signal and background filtered events. The _3-prong_ candidate contribution from the different cut sets is shown in table 4.

As it can be seen in table 5, the total efficiency is 36.6%, to be compared with an efficiency of 26.8% obtained using only the _1-prong_ candidates [11]. The total efficiency en 

## 3 Summary

In the first part of the note, the Vertexing package, which aims to reconstruct primary and secondary vertices, has been described. It is an Object Oriented interface to an existing vertexing routine written in Fortran by the CDF experiment. A few tests of the package have been performed; they have given encouraging results.

In the second part, it is described how this tool has been used to develop an algorithm aimed to identify the hadronic \(\tau\) decays. In particular, it has been useful in spotting the secondary vertices coming from three-prong \(\tau\) decays.

About 150000 QCD and 25000 \(A\to\tau\tau\) full simulated events (with both \(\tau\)'s decaying hadronically) have been produced and analysed, requiring an outstanding computing effort. An efficiency of 36.6% and a jet-rejection higher than \(10^{3}\) have been achieved in the \(\tau\)-identification. The \(\tau\)-tagging has been proved as an affordable and useful tool.

The number of background events generated is not enough to estimate the improvement in the significance.

\begin{table}
\begin{tabular}{|c|c|c|c|c||c|} \multicolumn{5}{|c|}{_3-prong_} \\ \hline _Data sample_ & Set 1 & Set 2 & Set 3 & Set 4 & **OR** \\ \hline \hline Signal & 3428 & 3082 & 3375 & 4146 & 4704 \\ \hline \hline QCD50 & 0 & 0 & 0 & 0 \\ \hline QCD100 & 3 & 2 & 3 & 3 & 10 \\ \hline QCD200 & 53 & 26 & 9 & 62 & 71 \\ \hline \end{tabular}
\end{table}
Table 4: _3-prong candidates: contributions coming from the different cut sets._

\begin{table}
\begin{tabular}{|c|c|c|c||c|c|c|} \hline _Data sample_ & _Filtered \(\tau\)/jets_ & _1-prong_ & _3-prong_ & _tagged \(\tau\)’s_ & _Efficiency_ & _jet rejection_ \\ \hline \hline Signal & 48250 & 12932 & 4704 & 17636 & 36.6\% & - \\ \hline \hline QCD50 & 81820 & 20 & \(<2.4^{\dagger}\) & \(<22.4^{\dagger}\) & - & \(>3.7\cdot 10^{3}\) \\ \hline QCD100 & 96696 & 22 & 10 & 32 & - & \(3.0\cdot 10^{3}\) \\ \hline QCD200 & 99900 & 28 & 71 & 99 & - & \(1.0\cdot 10^{3}\) \\ \hline \end{tabular}
\end{table}
Table 5: \(\tau\)_-tagging results for signal and QCD background. \({}^{\dagger}\) Poissonian upper limits for a 90% confidence interval [13]._

## References

* [1][http://atlas.web.cern.ch/Atlas/GROUPS/SOFTWARE/OO/architecture/General/index.html](http://atlas.web.cern.ch/Atlas/GROUPS/SOFTWARE/OO/architecture/General/index.html)
* [2] J.Marriner _Secondary vertex fit with (optional) mass constrains and (optional) pointing constraints_ CDF internal note 4/3/1993
* [3][http://tarts.home.cern.ch/tarts/vtx/docu.html](http://tarts.home.cern.ch/tarts/vtx/docu.html)
* [4][http://maupiti.lbl.gov/atlas/xkal/simpletrack/index.en.html](http://maupiti.lbl.gov/atlas/xkal/simpletrack/index.en.html)
* [5][http://www.ge.infn.it/](http://www.ge.infn.it/)\(\sim\)ferro/vertex/vertex.html
* [6][http://www.thep.lu.se/](http://www.thep.lu.se/)\(\sim\)torbjorn/Pythia.html
* [7][http://atlas.web.cern.ch/Atlas/GROUPS/SOFTWARE/DOCUMENTS/ATLSIM/Manual/main_manual.html](http://atlas.web.cern.ch/Atlas/GROUPS/SOFTWARE/DOCUMENTS/ATLSIM/Manual/main_manual.html)
* [8] I.Gavrilenko _Description of Global Pattern Recognition Program (XKalman)_ ATL-INDET-97-165
* [9] H.Ma, F.E.Paige, S.Rajagopalan \(\tau\) _Reconstruction in Athena_ ATLAS note in preparation
* [10] ATLAS Coll. ATLAS Detector and Physics Performance: Technical Design Report, report CERN/LHCC 99/14-15 (1999).
* 5 Mar 2002
* [12] D.Cavalli et al. _Combined analysis of \(A\to\tau\tau\) events from direct and associated bbA production_ ATL-PHYS-2000-005
* [13] Particle Data Group _2002 Review of Particle Physics_ Physical Review D66, 010001 2002
**Measurement of performance of the pixel neural network clustering algorithm of the ATLAS experiment at \(\sqrt{s}=13\) TeV**

The ATLAS Collaboration

The properties of pixel clusters in dense environments are studied with \(\sqrt{s}=13\) TeV proton-proton collisions from the LHC, recorded by ATLAS from June to July 2015. A novel method to evaluate the performance of the artificial neural network used for identifying pixel clusters created by multiple particles is presented. Using this method, the results in data and Monte Carlo simulation are compared. The neural network, as part of the track reconstruction, shows the expected response when used on collimated tracks.

## 1 Introduction

Since the LHC resumed proton-proton collisions at a new center of mass energy of \(\sqrt{s}\) = 13 TeV in 2015, a series of studies looking at track reconstruction performance have been performed [1; 2; 3]. This note studies the performance of the artificial neural network used to identify pixel clusters stemming from multiple charged particles. The data and simulation used in this study is described in Section 2. Section 3 briefly introduces the ATLAS inner detector. The output of the pixel neural network clustering is crucial for the track reconstruction performance in dense environment, where the spatial separation between charged particles reaches the dimensions of the smallest sensitive detector elements of the inner detector, as described in Section 4. Section 5 explains the methodology of how a measure of neural network performance can be obtained from data using two independent techniques. Finally, the results are presented in Section 6.

## 2 Data and Monte Carlo simulation samples

This analysis uses a data set with an integrated luminosity of 43.4 pb\({}^{-1}\). Single-jet-triggers were used to select events containing jets. Each trigger was pre-scaled by a reduction factor which depends on the instantaneous luminosity and the jet energy it triggered on, suppressing the amount of low \(p_{T}\) jets. This reduces the size of the data set and also creates a more uniform jet \(p_{T}\) spectrum. The minimum jet trigger \(p_{T}\) threshold is 100 GeV. To ensure good data quality, the inner tracking systems, calorimeters and muon spectrometer are required to be fully operational and data-quality criteria on the calorimeter are applied. Events must have at least one primary vertex.

Data is compared to an inclusive di-jet Monte Carlo sample. Events are generated with Pythia 8.186 [4]. The A14 tune is used together with the NNPDF2.3LO PDF set [5]. The EvtGen v1.2.0 program [6] is used for properties of the bottom and charm hadron decays. This sample includes the effect of multiple proton-proton interactions in the same and neighboring bunch crossings by overlaying minimum bias events on each generated event. These overlaid proton-proton collisions are simulated with the soft QCD processes of Pythia 8.186 using tune A2 [7] and the MSTW2008LO PDF and are weighted in order to match the average number of interactions per bunch crossing observed in data. Since the data sample is further pre-scaled according to the jet triggers, the events in simulation are also reweighted to match the number of events passing each jet trigger in data, in order to reproduce the jet \(p_{T}\) spectrum observed in data.

Very few events have jets with \(p_{T}>850\) GeV, and those events are vetoed in the present analysis.

## 3 The ATLAS inner detector

The ATLAS inner detector system [8] is designed to reconstruct the trajectories of charged particles, measure their momentum, and to perform vertex reconstruction in the range of \(|\eta|<2.5\)1. It is the innermost detector of ATLAS and consists of a silicon pixel detector, a silicon microstrip detector (SCT) and the straw tubes of the transition radiation tracker (TRT), surrounded by a solenoid magnet that generates a 2 T axial magnetic field. Since the strips of the SCT only provide a one-dimensional measurement, information from two strips located on either side of the double-sided module are combined to obtain a two-dimensional measurement. This measurement exploits the small stereo angle between the strips on different sides of the module.

Footnote 1: ATLAS uses a right-handed coordinate system with its origin at the nominal interaction point (IP) in the center of the detector and the z-axis along the beam pipe. The x-axis points from the IP to the center of the LHC ring, and the y-axis points upwards. Cylindrical coordinates (r, \(\phi\)) are used in the transverse plane, \(\phi\) being the azimuthal angle around the z-axis. The pseudorapidity is defined in terms of the polar angle \(\theta\) as \(\eta\) = -ln tan(\(\theta\)/2). Angular distance is measured in units of \(\Delta\)R = \(\sqrt{\Delta\eta^{2}+\Delta\phi^{2}}\).

During the first long shutdown, a new pixel layer, the insertable B-layer (IBL) [9] was added along with a new beam pipe, in place of the original beam pipe. The IBL consists of 14 staves instrumented with planar and 3D silicon pixel sensor technology along their length of 664 mm. Figure 1 is a sketch showing the radial cross-section of the pixel detector. The four layers of the barrel are at a radius of 33.0, 50.5, 88.5 and 122.5 mm, while the new beam pipe is located approximately at a radius of 24.3 mm. The typical sensor dimensions in the pixel detector are 50 \(\mu\)m (400 \(\mu\)m) in the transverse (longitudinal) direction, while the pixels of the IBL have smaller dimensions of 50 \(\mu\)m times 250 \(\mu\)m.

## 4 Pixel cluster neural network and its place in the ATLAS track reconstruction

This section gives an overview of how charged particle tracks are reconstructed in the silicon detectors of the ATLAS inner detector. As the track reconstruction in the TRT, as well as the muon system, are

Figure 1: Sketch of the ATLAS pixel detector in xy-view, showing the radii of the different detector elements.

not relevant for this study, they are omitted. Charged particle reconstruction begins with the creation of clusters. A connected component analysis (CCA) [10] groups pixels with a common edge or corner into a cluster. When the spatial separation of charged particles traversing the detector is on the order of a few pixels, charge deposits overlap and can therefore be reconstructed as a single cluster. These clusters are referred to as merged.

After cluster creation, the primary track reconstruction algorithm [11] utilizes iterative track-finding seeded on combinations of measurements from the silicon detectors. A staged pattern recognition approach is used: a loose track candidate search, which allows a number of combinatorial track candidates, is followed by a stringent ambiguity solver that compares and rates the individual tracks by assigning a relative track score to each track.

This track score is calculated from basic properties, e.g. number of measurements on track, number of holes2 etc. Among them is also the number of shared measurements used by the track. A shared measurement in the pixel detector is a cluster used by more than one track. In the case of the SCT, two shared clusters in the same SCT layer are considered a shared measurement. These measurements shared by multiple track candidates are a natural consequence of having merged clusters, however, shared measurements must be limited as they are also a strong indicator of poorly measured tracks. Identifying merged clusters correctly helps to improve the cluster assignment and track reconstruction efficiency in dense environments as well as decreasing the rate at which clusters are incorrectly used on multiple tracks. If clusters are shared between tracks, in the worst case, these tracks become indistinguishable and such candidates are discarded to avoid the creation of badly measured tracks [12]. This may lead to an inefficiency in finding both tracks. The artificial neural network (NN) to identify pixel clusters created by multiple particles [13], i.e. merged clusters, is used at this stage. Clusters which are identified as being merged are subsequently not penalized for beeing shared in the scoring process. Cluster shape and the amount of deposited charge in the cluster is the main input influencing the NN's output.

Footnote 2: Holes are defined as intersections of the reconstructed track trajectory with a sensitive detector element that do not result in a cluster. These are estimated by following closely the track trajectory and comparing the clusters-on-track with the intersected modules. Inactive modules or regions such as edge areas on the silicon sensors are excluded from the hole definition.

As the last step of the track reconstruction, a full resolution fit, including material effects, is performed on qualifying track candidates.

## 5 Methods to measure pixel cluster neural network performance in data

This study uses two distinct methods to measure the efficiency of the NN in data. Both methods make use of pairs of collimated tracks where each track has to fulfill the following quality criteria:

* \(p_{T}>1\) GeV,
* \(|\eta|<2.5\),
* \(|z_{0}|<5\) mm,
* Number of silicon hits \(\geq 7\),
* Number of shared measurements \(\leq 1\),
* Number of silicon holes \(\leq 2\),* Number of pixel holes \(\leq 1\),

where \(|z_{0}|\) is the longitudinal impact parameter with respect to the primary vertex.

Further, only pairs of tracks with a

* minimum \(\Delta\) R(track,track) \(<0.1\)

are selected as candidates. Every possible pair (i.e. combination) within the event, which fulfills all requirements, is selected for this study.

With these selections, about three million track pairs are selected from the data set described in Section 2. Simulation is normalized to match the number of track pairs passing the selections in data. The leading and sub-leading track \(p_{T}\) distribution is shown in Figure 2. The \(\eta\) distribution of track pairs is well described in simulation apart from a small difference introduced by a relative shift of the beam spot in z. This shift is not relevant for the results presented in the note.

### Extrapolation measurement

Since highly collimated tracks in the core of jets are likely to produce nearby or merged clusters mainly on the first two pixel layers, this study will focus only on the IBL and the 2\({}^{\text{nd}}\) pixel layer. A pair of clusters, with their associated tracks, in the 2\({}^{\text{nd}}\) or 3\({}^{\text{rd}}\) pixel layer is taken as a reference for the target clusters in the IBL or 2\({}^{\text{nd}}\) pixel layer, respectively. From there the local position at the inward, or target, layer is extrapolated from the track parameters, with effects from multiple scattering taken into account. The extrapolated distance on this layer is used as the distance between the two tracks. Only track pairs where a cluster is found on a pixel module at the extrapolated position are considered further. Although the extrapolation between two pixel layers is known to be very precise, a systematic error is introduced through the residual mis-alignment of the detector elements which results in an inaccurate knowledge of

Figure 2: Leading and sub-leading track \(p_{T}\) distribution of selected track pairs. The di-jet Monte Carlo simulation is normalized to the number of tracks in data.

the pixel module positions. The impact of this systematic is not quantified in this study, but rather cross checked through the complimentary approach described in Section 5.2.

Once a track pair is selected, the cluster properties on the target layer are studied. The cluster can be categorized into three classes:

* (1) Single-particle-cluster (as identified by the ambiguity solver),
* (2) Multi-particle-cluster (as identified by the ambiguity solver), used by both tracks,
* (3) Multi-particle-cluster (as identified by the ambiguity solver), used by only one track,

where for the latter the clusters of both tracks must be on the same pixel module. Clusters used only by one track, and categorized as single-particle-cluster, are the most common ones and the majority of tracks have this class. The second class are clusters where the ambiguity solver, with the help of the NN, indicated that the cluster originates from multiple particles. In this class the cluster is then indeed used by two tracks. Finally, cluster in the last class are also identified as being created by multiple charged particles, but the cluster is not associated with the other track of the pair. These basic patterns are illustrated in Figure 3. The fraction of clusters in class one is expected to decrease with decreasing track separation. If the performance of the ambiguity solver and the NN is ideal, these clusters would instead fall into class two, since tracks with a separation below a certain geometric threshold of around the dimension of a single pixel should always fall into this class. Clusters in class three can point at an imperfect algorithmic performance in the ambiguity solver stage, but also in the track reconstruction in general. However, these clusters do not necessarily impact the actual track reconstruction performance in terms of efficiency and resolution. This class is especially relevant for the method introduced in Section 5.2.

Figure 4 (a) shows a schematic of how this method works.

### Measurement using overlap regions

The second method to measure the performance of the ambiguity solver and the pixel cluster NN is based on the existence of overlap between pixel modules. Each pixel stave is mounted at a tilt angle (the tangent to the support cylinder surface in the plane perpendicular to the cylinder axis) of -20\({}^{\circ}\), which creates an overlap region in the \(\phi\)-direction. For the IBL, the tilt angle is 25.714\({}^{\circ}\) (same reference frame) which

Figure 3: Categorization of the cluster: (a) Single-particle-cluster, (b) multi-particle-cluster, used by both tracks (c) multi-particle-cluster, used by only one track. The clusters have to be on the same module.

creates a radial overlap of \(1.821^{\circ}\). Except for the IBL, each module on the stave is also positioned with some overlap in the \(z\)-direction. Therefore certain charged particles pass through two modules on the same layer of the pixel detector. This overlap is exploited in this method using tracks with two clusters on the same layer, where the outer module serves as reference and the inner one as target. This approach eliminates uncertainties from alignment, as the positions of the clusters can be used directly as the distance between the two tracks and no extrapolation is performed. Figure 4 (b) shows a schematic of how this method works. For this method the correlation between the two clusters is also of interest for study; if the reference cluster is identified by the ambiguity solver as single- or multi-particle-cluster, the target clusters will likely be of the same class. This is a consequence of the very small distance the particles travel between two pixel modules in the same layer, which results in the creation of very similar cluster shapes and charge deposits in both modules. A difference in the observed class between the reference and target clusters is therefore related to an inefficiency in the ambiguity resolving procedure. This is most likely caused by an incorrect output of the pixel cluster NN, which is by far the dominant factor. However, it can also be due to nearby clusters wrongly assigned to the track. In Figure 5 a schematic view is of these scenarios is presented.

## 6 Results

In the following, the methods described in Section 5.1 and 5.2 are applied to the data described in Section 2. Firstly, the distance at the IBL and \(2^{\text{nd}}\) pixel layer between the pairs of tracks will be compared between data and simulation. These pairs need to satisfy the requirements listed in Section 5. The fraction of each of the classes introduced in Section 5.1 in all track pairs will then be studied with respect to the distance between the tracks at the relevant layer. This is done separately for both of the introduced methods.

Figure 4: Sketch of the two methods. (a) Extrapolation measurement and (b) Measurement using the modules’ overlap.

### Extrapolation measurement

Looking at the subset of tracks selected for this method, the overall fraction of split clusters is 5.9% and 5.6% on the IBL and 2nd layer respectively. As motivated in Section 5, the fractions of the different cluster classes as a function of the distance between the tracks will be presented in the following. As denominator the distance of two tracks is used, which is presented in Figure 6 for (a) IBL and (b) the 2nd pixel layer. The distance is defined as the separation between the intersections of the reconstructed particle trajectories with the active detector material on the target module. In Figure 7, the fraction of each class as a function of the distance of two tracks at the target layer is presented. As previously mentioned, clusters of class (3) do not bias the track reconstruction performance in terms of resolution and reconstruction efficiency. For this method, they are therefore treated as single-particle-clusters, by merging their fraction with the fraction of clusters in class (1). Figure 7 clearly shows for data and simulation, that the fraction of clusters in class (1) decreases with decreasing track separation, and instead these clusters fall into class (2). For separations below the dimension of 2-pixel clusters, which is around 0.1 mm, population inversion is observed. There, the fraction of multi-particle-clusters which are used on both tracks is \(\approx\) 85% for both data and simulation for the IBL. For the 2nd pixel layer this fraction is higher at around 93%. An overall agreement within 5% is found between data and simulation for both IBL and 2nd layer. In the 2nd layer the data has approximately 10% more multi-particle clusters which are used on both tracks throughout all studied track separations than the simulation. Discrepancies between data and simulation are expected due to the modeling of pixel clusters in simulation. For example a simplified energy deposit model is used in simulation, which does not accurately describe data. The fraction of class (1) is in general higher in the IBL than that in the 2nd layer. This is expected, since the IBL pixel size is smaller in the longitudinal direction. The fraction of class (2) in the IBL is lower for very short distances at \(\sim\)0.1 mm than the one in the 2nd layer. This suggests, that the pixel cluster NN performance may be slightly worse than in the outer layers. A possible explanation for this, is the decreased accuracy with which the IBL measures the deposited charge, caused by a 4-bit instead of a 8-bit readout [9].

Figure 5: Categorization of the cluster class: (a) Single-particle-cluster, (b) multi-particle-cluster, used by both tracks (c) multi-particle-cluster, used by only one track, on the target layer. The reference cluster might also have these three classes.

Figure 6: Distance of two tracks for (a) IBL and (b) 2\({}^{\text{nd}}\) pixel layer, respectively. This distribution is used as the denominator of the fraction of the cluster classes for the method using extrapolation.

Figure 7: Fraction of cluster classes, using the extrapolation method, as a function of the distance between tracks for (a) IBL and (b) 2\({}^{\text{nd}}\) pixel layer, respectively.

### Measurement using overlap regions

Figure 8 again presents the fraction of each class of clusters as a function of the distance of the two tracks at the target layer for (a) IBL and (b) the 2\({}^{\text{nd}}\) pixel layer. In these two figures the clusters of class (3) are again merged with clusters of class (1). In addition, the fraction of clusters in the target layer with a different class with respect to the reference clusters are also shown in Figure 8 (c). Here, the three cluster classes are treated individually, e.g. a cluster of class (1) in the target layer is a mismatch to a class (3) cluster in the reference layer. The observed trends in Figure 8 (a) and (b) are very similar to those in Figure 7. Both measurements confirm that the fraction of clusters in class (1) decreases with decreasing track separation, and instead these clusters fall into class (2), as expected. This effect is equally visible in both data and simulation. For separations below the dimension of 2-pixel clusters, nearly perfect population inversion is observed. There, the fraction of multi-particle clusters which are used on both tracks is \(\approx\) 95 and 90% for data and simulation respectively on the 2\({}^{\text{nd}}\) pixel layer. For the IBL this fraction is significantly lower at only around 80% for both data and simulation. The overall agreement between data and simulation is within 10%. When moving to smaller separations between track pairs, as Figure 8 (c) shows, the mismatch rate between the classes of the target and reference cluster increases. The rise for the IBL, when going to smaller separations, does begin somewhat later than for the 2\({}^{\text{nd}}\) pixel layer; this is because of the smaller pitch in the IBL. Both distributions drop again at around 0.1 mm, which is approximately the dimension of the 2-pixel hits clusters. There are multiple possible sources for mismatched classifications, which peak at around 0.2 mm. As was previously shown, the NN can fail to properly identify a cluster created by a single or multiple particles [13]. However, the unavoidable fluctuation in cluster shapes will always set a limit for the achievable match rate between the two cluster classes. Not having the same cluster class on two overlapping modules does not therefore necessarily mean that one of the tracks will not use any measurement on this layer. Previously described differences in the shape of pixel clusters in data and simulation also result in discrepancies also in this distribution.

Figure 8: Fraction of the cluster classes, using the overlap method, as a function of the distance between tracks for (a) IBL and (b) 2\({}^{\text{nd}}\) pixel layer; and (c) the fraction of clusters with a different class with respect to the reference clusters.

## 7 Conclusion

Studies of the cluster properties on the pixel detector on tracks in dense environment with data from 13 TeV proton-proton collisions taken by the ATLAS detector are presented. The performance of the pixel cluster NN which, together with the ambiguity solver, identifies clusters from multiple particles is evaluated for IBL and the 2\({}^{\text{nd}}\) pixel layer. This is the first such measurement from data. Although the modeling of pixel clusters in simulation is known not to be perfect, it is able to reproduce data to a very good degree. Overall, the two agree within 5 and 10% for the extrapolation and overlap measurement respectively. Some bigger discrepancies remain for the extrapolation measurement for the 2\({}^{\text{nd}}\) pixel layer. Both nevertheless show the expected trends, namely that the fraction of clusters in class (1) decreases with decreasing track separation, and instead these clusters fall into class (2). For track separations on the order of a single pixel the efficiency to correctly identify and assign a multi-particle-cluster to two tracks is above 80% for the IBL, while for the 2\({}^{\text{nd}}\) layer it is above 90%.

## References

* [1] ATLAS Collaboration, _Track Reconstruction Performance of the ATLAS Inner Detector at \(\sqrt{s}\) = 13 TeV_ (2015), url: [http://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PUBNOTES/ATL-PHYS-PUB-2015-018](http://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PUBNOTES/ATL-PHYS-PUB-2015-018).
* [2] ATLAS Collaboration, _Vertex Reconstruction Performance of the ATLAS Detector at \(\sqrt{s}\) = 13 TeV_ (2015), url: [http://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PUBNOTES/ATL-PHYS-PUB-2015-026](http://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PUBNOTES/ATL-PHYS-PUB-2015-026).
* [3] ATLAS Collaboration, _Alignment of the ATLAS Inner Detector with the initial LHC data at 13 TeV_ (2015), url: [http://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PUBNOTES/ATL-PHYS-PUB-2015-031](http://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PUBNOTES/ATL-PHYS-PUB-2015-031).
* [4] T. Sjostrand, S. Mrenna and P. Z. Skands, _A Brief Introduction to PYTHIA 8.1_, Comput. Phys. Commun. **178** (2008) 852-867, arXiv: 0710.3820 [hep-ph].
* [5] R. D. Ball et al., _Parton distributions with LHC data_, Nucl. Phys. **B867** (2013) 244-289, arXiv: 1207.1303 [hep-ph].
* [6] D. J. Lange, _The EvtGen particle decay simulation package_, Nucl. Instrum. Meth. **A462** (2001).
* [7] ATLAS Collaboration, _Summary of ATLAS Pythia 8 tunes_, ATL-PHYS-PUB-2012-003 (2012), url: [http://cds.cern.ch/record/1474107](http://cds.cern.ch/record/1474107).
* [8] ATLAS Collaboration, _The ATLAS Experiment at the CERN Large Hadron Collider_, JINST **3** (2008) S08003.
* [9] ATLAS Collaboration, _ATLAS Insertable B-Layer Technical Design Report_ (2010), url: [http://cds.cern.ch/record/1291633](http://cds.cern.ch/record/1291633).
* [10] R. Rosenfeld and J. Faltz., _Sequential Operations in Digital Picture Processing_, J. ACM **13.4** (Oct. 1966) 471-494, issn: 0004-5411, url: [http://doi.acm.org/10.1145/321356.321357](http://doi.acm.org/10.1145/321356.321357).
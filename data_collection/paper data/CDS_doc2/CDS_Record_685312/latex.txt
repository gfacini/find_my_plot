# Graphics of Level-1 Objects in the ATLAS Barrel Muon Spectrometer Trigger System

D. Pomarede

University of Rome, La Sapienza

M. Virchaux

A. Di Mattia

S. Falciano

A. Nisati

S. Veneziano

University of Rome, La Sapienza

December 18, 2001

###### Abstract

The PERSINT Interactive Visualization program incorporates a dedicated interface allowing the access to the Level-1 Muon Trigger configuration datafiles and the visual representation of the variety of objects involved in the trigger decision chain. The interface is used to represent graphically the content of the Coincidence Matrices and provides an Event Display for the Level-1. This note describes the functionalities of this interface and its principle of operation.

Introduction

The motivations for developing a graphical facility for the Level-1 Trigger System are three-fold : first, an interactive visual representation of the logic of the trigger scheme is necessary to help understand it, correct it, and possibly modify it. This is particularly important in the context of an evolving layout of the Muon System, which implies future modifications of the current trigger scheme. Secondly, such a graphical tool should offer to display simulated events. The visualization of all the Level-1 objects involved in the trigger decision chain on an event-by-event basis would greatly benefit to the debugging of a simulation chain of the trigger system. Finally, the utilization of such a tool as an Event Display in the framework of an online system would contribute significantly in its monitoring and validation.

Such a graphical facility has been developed as part of the PERSINT Interactive Visualization Program for the Barrel Trigger System of the Muon Spectrometer. It allows to visualize in an interactive way all the objects and systems participating in the Level-1 scheme, and may be utilized to display simulated events.

## 2 The Level-1 System in the Barrel Muon Spectrometer

In the Level-1 Muon Trigger scheme [1] the trigger chambers are organized in three planes or stations along the R-direction : the Pivot plane, the Low \(p_{t}\) (LPT) coincidence plane, and the High \(p_{t}\) (HPT) coincidence plane. In the Pivot plane are collected the informations from the RPC strips that will steer the trigger decision; for each strip that has been fired by an event in the Pivot plane, the system investigates the LPT plane and the HPT planes to look for possible coincidences. This is the role of the Coincidence Matrices to determine whether or not a coincidence is realized [2].

In the Barrel System [3], the Coincidence Matrices organization is based on an ensemble of RoIs (Regions of Interest) providing full coverage with respect to the \(\eta\) and \(\phi\) directions. A single RoI supports four Coincidence Matrices (LPT-\(\eta\), LPT-\(\phi\), HPT-\(\eta\), HPT-\(\phi\)). In Large Sectors and standard Small Sectors, the system is divided in 13 segments along \(\eta\) and 2 segments along \(\phi\), these segmentations defining the RoIs. This organization is repeated for each octant and each Z-half of the detector, as well as for each \(\phi\)-side of the trigger chamber, which are all independent. Technically, the RoIs are grouped by four (2 \(\eta\) segments \(\times\) 2 \(\phi\) segments) corresponding to a physical RPC chamber; such a grouping of RoIs corresponds to a PAD.

Each RoI sustains a LPT and a HPT spatial Coincidence Window, defined both \(\eta\)-wise and \(\phi\)-wise. The Strip Connectors are the basic objects on which the Coincidence Windows are built. The size of a window is defined by the number of active channels of the associated Coincidence Matrix. At the level of the Pivot Plane, the window covers typically 32 channels, and varies at the LPT and HPT Planes, with a maximum of 64 active channels.

## 3 Presentation of PERSINT

The PERSINT program is a non-commercial product developed by the Saclay Muon Software Group primely for the ATLAS collaboration [4, 5]. It is designed for the three-dimensional representation of objects and for the interfacing and access, in a fully interactive way, to a variety of independent applications, such as Event Display or visualization of Geometric Databases. The developments presented in this note are available for PERSINT version 2.05 and higher. A Manual describing the functionning of this program can be found in [6] for version 2.05.

The display of objects and the interactivity between the user and objects or applications is realized through the use of the HIGZ package [7]. Facilities are provided for the spatial navigation and the definition of the visualization properties, allowing to interactively set the viewing and viewed points,

## 1 Introduction

Figure 1: PERSINT in its running configuration, featuring the Command Window and the HIGZ Display Window. In the Display Window, the Navigator Interface appears in the right-bottom corner, and is used to navigate in the detector space and invoke other interfaces. In this example, the “L1” Push Button of the Navigator was clicked, resulting in the opening of the L1 Interface featured in the left-bottom corner of the Display. Using this interface, Level-1 Objects can be selected for subsequent display (in this example, a set of Coincidence Windows are represented).

and to obtain the desired perspective. In parallel, applications may be launched through the use of dedicated interfaces, such as the interactive reconstruction and display of physics events.

The general configuration obtained when running the program is illustrated in Figure 1. It is based on two windows with which the user can interact : the Command Window and the HIGZ Display Window. The Display Window is dedicated to the three-dimensional visualization of volumes and to the representation of graphical interfaces. The main graphical interface is the Navigator, which appears automatically in the right-bottom corner of the Display Window (see Figure 1).

The Navigator is the master interface to the various graphics applications provided by PERSINT and contains the navigation facilities necessary to survey the entire detector space. The interface consists in an assembly of Push Buttons and clickable 1D and 2D gauges. The Push Buttons are used to launch lower level applications. Gauges are used to scale navigation and visualization actions. The user can get online help and indications concerning these Push Buttons and gauges by simply clicking them with the mouse middle button. The Navigator facilities most relevant to the Level-1 applications are detailed in Figure 2. The navigation through the detector space and the modifications of the visualization properties are obtained in two steps : first one has to define an action by clicking with the mouse left button on the available gauges allowing for instance to move forward/backward or to displace the viewing/viewed points. Then the action is realized by clicking the "**GO**" Push Button.

The access to interfaces is obtained by a simple click on their associated blue-colored Push Buttons, with the mouse left button. In the case of Figure 1, the user has clicked the "L1" Push button, which has resulted in the opening of the L1 Interface featured in the left-bottom corner of the Display. Using this interface, Level-1 objects can be selected for display, as explained in the next section. The Navigator allows access to other interfaces which are relevant to the Level-1 graphics : the interface to the AMDB geometrical database [8], which gives access to the detector system geometry, including the trigger chamber system, and the Event Display interface.

Figure 2: The Navigator. This Figure illustrates the functionalities of the Navigator that are relevant to the interactive display of Level-1 Objects : access to interfaces (yellow background), navigation and definition of perspective (blue), functionalities of general use (green).

The L1 Interface

The L1 Interface is the application allowing the interactive access to the Level-1 Muon Trigger configuration datafiles and the visual representation of the variety of objects involved in the trigger decision chain. In its current state of development, it is operational for the Barrel system only.

The interface requires to load two configuration datafiles : the "rpcconf" datafile containing the definition of the Coincidence Windows and the "table10.out" datafile defining the Coincidence Matrices Infinite Momentum Diagonals [9]. These files are loaded each time the application is executed. To define the geometrical properties of the Level-1 objects, it is necessary to load the amdb_simrec database [8]. If such a database is present in the working directory under the "default_amdb_simrec" name, it is loaded by default at the initialization of the program.

The L1 Interface consists in an assembly of Push Buttons and selectors which allows to precisely define which objects in which regions of the trigger system should be displayed. The interface is shown in Figure 3. It is organized in distinct areas offering the following functionalities and access to applications :

**1) definition of the regions** in which objects should be displayed. Dedicated selectors allow to choose for which octants of which sectors (Large, Small, Feet) the Level-1 objects should be displayed. Additional selectors can be used to choose the trigger sectors Z-side and \(\phi\)-side.

**2) selection of the objects**. The objects available for representation are the PADs, RoIs, Strips, Coincidence Windows HPT and LPT, Strip Connectors. An object is selected by clicking the associated Push Button, using the mouse left button. To switch between full and wire volume representations, one has to simply click on the same Push Button using the mouse middle button. To change the colors of the objects, one has to click on the text descriptors (initial values correspond to preset default colors). The visualization of the connectors can be customized using an ensemble of dedicated selectors : these permit to choose the trigger plane (Pivot, LPT, HPT) and to choose between the \(\eta\)-ordered and \(\phi\)-ordered connectors. The Strips are visualized in association with Coincidence Windows.

**3) selection of the \(\eta\)-segments a nd \(\phi\)-segments** which sustain the Coincidence Windows selected for display.

**4) access to the MATRIX application n**. See Section 6.

**5) options** : "Windows Overlap" is used to highlight the Coincidence Windows overlap regions, "Y connectors fixed" allows to fix the connector height in the calculation of the Coincidence Windows (by default the Windows may have slanted bases due to the overlapping RPC layout), "c-type counters" allows to number objects starting from 0 rather than 1, "Messages ON/OFF" allows the interface to issue a warning when an inconsistancy is detected (this may happen for instance when the configuration described in the "rpcconf" datafile is not compatible with the RPC layout).

Once the user has chosen what has to be displayed, the "**GO**" Push Button of the Navigator has to be clicked, in order that the vue may be calculated and displayed. In the example of Figure 1, the user has selected the Coincidence Windows LPT and HPT for the 8th \(\eta\)-segment, for all the octants of the Large Sectors and both \(\phi\)-sides.

It is possible to get online help and indications for these different domains of the interface by a simple click on the associated rectangles containing text descriptors ("L1 OBJECTS", "MATRIX", etc...). In the course of computing the objects for display, the interface performs a consistency check between the configuration datafiles and the geometrical database.

Figure 3: The L1 Interface and its functionalities, organized in five domains allowing to select regions, objects and segments, to access the MATRIX application, and to select options.

The Display of Level-1 Objects

In this section, keeping in mind the basics of the Level-1 architecture presented in Section 2, the potentialities of the L1 Interface are described.

The L1 Interface allows to display the variety of objects and systems involved in the Level-1 Trigger scheme. An example is given in Figure 4. In this example, the full system of PADs and RoIs is displayed in 3 dimensions for a single Large Sector (Octant 3, Z+ Side), and for both \(\phi\) sides of this sector. The complete system of Strip Connectors is also displayed for the three trigger planes. These correspond to the \(\eta\)-ordered connectors, which group \(\eta\) strips of the RPC chambers. It is also possible to display simultaneously the \(\phi\)-ordered connectors.

All the Level-1 Objects displayed in Figure 4 are superimposed on top of the RPC trigger chamber volumes, selected independently from the Interface to AMDB. This corresponds to the overlapping RPC geometry recently introduced [10].

A functionality of the L1 Interface that is of most interest lies in the display of the Coincidence Windows. The Coincidence Windows define which strips of the Coincidence planes are associated to every single segment of the Pivot Plane. This corresponds to the cabling of the Coincidence Matrices

Figure 4: Three-dimensional display of Level-1 Objects : PADs, RoIs, and Strip Connectors of a single Large Sector. The \(\eta\)-ordered Connectors are displayed for the Pivot, LPT, and HPT Planes. The Navigator facilities may be used to navigate around the displayed objects or modify the perspective.

[3]. The Windows are defined in this way for both the \(\eta\)-wise and \(\phi\)-wise systems. The granularity of the Windows is defined by the strip connectors. The mapping of the connectors giving the positions and sizes of the Windows is described in the "rpeconf" configuration datafile [9].

The L1 Interface allows to display the Coincidence Windows in a very versatile way. An example is given in Figure 5 where the LPT and HPT  Coincidence Windows of five out of the thirteen segments of a Large  Sector are displayed.

The flared shape of the Coincidence Windows is due to the necessity of accepting muons with both electric charges with as low momentum as possible. The size of the window opening with respect to the momentum threshold is determined by Monte Carlo. The acceptance of the windows can be verified visually by firing muon tracks of any momentum and charge using the Interactive Generation of Muon Tracks Interface of PERSINT [4, 6]. Low-momentum muons being strongly deflected by both the inner solenoidal field and the muon toroidal field, resulting in two subsequent directions of bending, it is useful to work with a 3-dimensional representation. In this case it is most convenient to choose a wire volume display rather than a full one. An instance of Coincidence Windows displayed in the wire mode can be seen in Figure 1.

Figure 5: Three-dimensional display of Coincidence Windows (LPT and HPT). The \(\eta\)-ordered Connectors are displayed for the Pivot, LPT, and HPT Planes, on one \(\phi\)-side only. The \(\eta\)-segments 1, 4, 7, 10, and 13 that sustain the windows are selected. To visualize the corresponding \(\phi\) segmentation of these windows, one has to use the "Phi Segments" selectors of the L1 Interface.

In the Figure 6, the same objects are displayed in projection along X. This viewing mode is specially useful for visualizing the cabling between the Pivot and the coincidence planes. It is possible to interact with the displayed objects to get informations : clicking on a volume results in the opening of the "Move Volume Window" in the upper-right corner of the display. In this window are printed the identification and the position of the clicked object. With this facility, it is possible to modify online the configuration datafile and get immediate visual feedback (once the "rpcconf" file is modified, one has just to click the "**GO**" Push Button of the Navigator to update the current view).

The L1 Interface also allows to highlight the overlap regions between consecutive Coincidence Windows. Their representation is obtained by clicking on the "Windows Overlap" option of the interface; their color can be selected by clicking the "Windows Overlap" text.

The functionalities of the L1 Interface described here allow to better understand, correct, and possibly modify the Level-1 trigger scheme. In the context of a rapidly evolving Muon layout (see e.g. [11]), this can participate in providing a prompt feedback on the trigger architecture, which should closely follow the evolution of the geometry. This is particularly relevant for the Small and Feet sectors

Figure 6: Projective view of Coincidence Windows (LPT and HPT). One can click on any displayed object to get instant information on its characteristics (identification, position). It is possible to modify online the configuration datafile and click the “**GO**” Push Button of the Navigator to update the cabling on display.

for which the trigger scheme is not yet fully understood or frozen.

The Barrel Trigger System of the Muon Spectrometer has the remarkable property of minimizing the hardcoding of its design characteristics. This is true for instance in the case of the Coincidence Windows and Matrices, their exact definition being loaded by a dedicated configuration software at the beginning of a data-taking phase. The L1 Interface can participate in finding optimized solutions to such problems as the lowering of the momentum threshold, which would require wider Coincidence Windows and wider Coincidence Matrices Roads.

## 6 The MATRIX Application

The MATRIX Application gives visual access to the Coincidence Matrices and their content. In the Barrel Muon System, each single RoI supports four Coincidence Matrices : LPT-\(\eta\), HPT-\(\eta\), LPT-\(\phi\), and HPT-\(\phi\). These bidimensional matrices have as input the signals from the RPC strips of the Pivot Plane in one dimension, and the signals from the RPC strips of the Coincidence Plane in the other dimension. The input signals are of binary nature (0 or 1).

The role of the Matrices consists in determining if the inputs are compatible with a muon track, in which case a Level-1 trigger is realized. To be compatible with a track of a given momentum, an input pixel should fall within a road defined around the infinite momentum diagonal. This diagonal corresponds to straight tracks fired from the interaction point, and has a width of one matrix pixel. The width of the road around the diagonal depends on the required transverse momentum threshold. The system can run with several pre-programmed thresholds (as low as 5.5 GeV/c [3]). The road extends on both sides of the diagonal, corresponding to the two possible electric charges. Such a system provides high discrimination against cavern background hits, which fall randomly all over the matrices.

To access the matrices, the RoIs have first to be displayed. It is by interacting with the RoIs that one can visualize the desired matrix. Two ways are offered. In the standard way, the user has to select first one of the four matrix type using the diamond-shaped selector of the interface, then click on any RoIs to visualize the corresponding matrix.

The other possibility is to use the Interactive Matrix Supervisor. Once any RoI is clicked with the mouse left button, a three-dimensional diamond shaped object appears on top of it. This is illustrated by the Figure 7. This object allows to supervise interactively the matrices : a click on any of its facets results in the display of a matrix associated to the RoI, each visible facet being associated with a unique matrix. In the example of Figure 7, the facet corresponding to the HPT-Eta matrix was clicked. This matrix then appeared on the left side of the HIGZ window. This Supervisor allows to efficiently probe the four matrices sustained by a RoI and to navigate through the entire RoI system. To dispose of it, click on the probed RoI with the mouse middle button.

The sizes of the matrices are obtained from the "rpcconf" configuration datafile and thus match the sizes of the associated Coincidence Windows. If the Coincidence Windows are selected as objects for display in the L1 Interface, these will be displayed in association with the selected RoI. The definition of the infinite momentum diagonal of each matrix is loaded from the "table10.out" input file. At present the definition of the roads are preliminary. The non-continuous shape of the diagonal in Figure 7 is due to the overlapping RPC geometry, since in the coincidence planes, two strips of the overlap regions belonging to adjacent trigger chambers can be associated to a same pivot strip on the infinite momentum path.

The L1 Interface offers the possibility to visualize the strips associated with a given RoI or a Coincidence Window. This is illustrated in Figure 8. In this example, a RoI is probed by the Matrix Supervisor, and its associated strips and windows are displayed simultaneously.

The MATRIX application allows interactivity with the displayed matrix in order to visualize which physical strips are associated to a given matrix pixel. This is obtained by a single click with mouse middle button on any pixel of a matrix, which results in the highlighting in red color of the pixel itself and its two corresponding RPC strips. An operating example of this facility can be seen in Figure 8. This functionality of the MATRIX application is very useful to check the validity of the infinite momentum diagonal. For any matrix pixel belonging to the diagonal, it should be verified that a straight track generated at the interaction point intersects the two associated strips. This can be seen readily using the Interactive Generation of Muon Tracks interface of PERSINT [4, 6], as illustrated in Figure 8. This method can be generalized to verify the matrix road, using muon tracks of definite transverse momenta.

Figure 7: Display of a Coincidence Matrix using the Interactive Matrix Supervisor. In this example, the user has engaged the Interactive Supervisor and clicked the RoI corresponding to the 3rd \(\eta\)-segment and 2nd \(\phi\)-segment of a Large Sector. Then the facet of the Supervisor corresponding to the HPT-\(\eta\) matrix of this RoI was clicked, resulting in the display of the matrix and its content.

Figure 8: Display of Coincidence Matrix with associated strips and Coincidence Windows. The interactivity with the displayed matrix allows to visualize which RPC strips correspond to which pixel. This functionality can be utilized to verify the correct definition of the infinite momentum diagonal.

Event Display

The visualization of Level-1 objects can be realized in the context of an Event Display. The PERSINT program is equipped with a dedicated interface devoted to the display of events and to the access to reconstruction through MUONBOX [12]. This application was modified to also display Level-1 objects participating in events.

This functionality will be of most interest to display Level-1 objects and systems from a complete DICE simulation [13] of the trigger system. In the meantime, the event display of Level-1 objects was realized using the LHCTOR simulation [14]. The working principle is to pickup the information on hit strips from MUONBOX, and fire in cascade all the associated objects, including the Coincidence Matrices.

An example of Event Display is shown in Figure 9 for a single muon with a 100 GeV/c transverse momentum fired in the Barrel at \(\eta=0.1\). All the objects struck by the muon are displayed. The RoI which was crossfired by \(\eta\) and \(\phi\) pivot strips simultaneously is highlighted in yellow.

Figure 9: Event Display : case of a simulated single muon. The Event Display and Reconstruction Interface is displayed in the top-right corner; the display of Level-1 Objects is obtained by clicking the LVL1 Push Button, and then the L1 Interface defines which objects should be displayed. The blue track represents the result of the MUONBOX reconstruction. Note that the display of strips is obtained directly from the Event Display Interface, these being used in the offline reconstruction.

Using the MATRIX application, it is possible to probe the content of the struck RoI, each Coincidence Matrix being fed by the event strip signals. This is illustrated in Figure 9 where the HPT-\(\eta\) Matrix is displayed. The hit pixel appears in red, one pixel off the infinite momentum diagonal.

The Event Display is operational for multi-muon events. An example is shown in Figure 10 for a 300 GeV Higgs decaying in four muons. This display shows the entire system of PADs and RoIs. The passive elements and the activated elements can be distinguished by their different colors. Also shown are the strips and Coincidence Windows of the event. Here also, the matrix content of the ensemble of RoIs on display can be investigated using the MATRIX application.

The Event Display presented here can be considered as a prototype of a system monitor allowing to watch over the global Level-1 activity. Future developments will be oriented toward the display of Level-1 objects generated in a complete and realistic DICE simulation of the trigger system and the integration of this tool in an online environment.

Figure 10: Event Display : case of a simulated Higgs to four muon decay. The event is superimposed on the complete PAD and RoI system. The PADs and RoIs which are activated in the event are highlighted in different colors.

Appendix : installation of PERSINT

The program is available on AFS at CERN in the official Persint repository located at :

/afs/cern.ch/atlas/offline/external/Persint

This repository consists in a tree-like structure which provides, for each version of the program, the source and executable files, together with documentation and useful input databases, and for developers, the tools necessary to compile and load. Each version of the program is attributed with a version subdirectory Persint.x.xx, where x.xx denotes the version numbering. Each version subdirectory contains itself the directories **doc**, **src**, **bin**, and **test**, plus an executable file for compiling and loading (for developers).

In **bin**, executables of the program are available for exploitation on Compaq-Alpha and Sun-Solaris UNIX, and for Linux, in the directories of corresponding names, under the "persint.exe" name. In **src** and **doc** are contained the source files and the documentation, while **test** provides a number of databases and input files. **test** contains soft link to the executables, and can be seen as a prototype for a working directory, in which the program may be run.

Besides the official repository, the PERSINT webpage can be used to download the most recent version of the program and find the most up-to-date informations and developments [5].

To install the program, the user should copy the persint.exe file of its choice (version and platform) in its working directory. It is recommended to copy also the databases and input files that can be found in the **test** directory, or access them through the use of soft links. Another possibility is to use the "tar" file provided in the repository which contains all the necessary files to run on any platform.

## References

* [1] Level 1 Technical Design Report LHCC 98-14 (1998).
* [2] E. Petrolo _et al._, ATLAS Internal Note ATL-COM-DAQ-2000-050 (2000).
* [3] E. Gennari _et al._, ATLAS Internal Note ATL-COM-MUON-2000-012 (2000).
* [4] M. Virchaux, D. Pomarede, Atlas Internal Note ATL-SOFT-2001-003 (2001).
* [5][http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/persint.html](http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/persint.html)
* [6] M. Virchaux, D. Pomarede, "The PERSINT Manual version 2.05", see e.g. /afs/cern.ch/atlas/offline/external/Persint/Persint.2.05/doc/PERSINT_MANUAL.ps
* [7] HIG Z High Level Interface to Graphics and Zebra User's Guide, CERN Program Library Long Writeups **Q120**, Application Software Group, Computing and Networks Division, CERN, Geneva, Switzerland, june 1995.
* [8] L. Chevalier _et al._, ATLAS Internal Note ATL-MUON-97-148 (1997).
* [9] A. Nisati, private communications.
* [10][http://www1.na.infn.it/wsubnucl/accel/Atlas/documents/RPClayout.html](http://www1.na.infn.it/wsubnucl/accel/Atlas/documents/RPClayout.html)
* [11] D. Pomarede _et al._, ATLAS Internal Note ATL-MUON-2000-023 (2000).
* [12] M. Virchaux _et al._, ATLAS Internal Note ATL-MUON-97-198 (1997).
* [13][http://www.cern.ch/Atlas/GROUPS/SOFTWARE/DOCUMENTS/simulation.html](http://www.cern.ch/Atlas/GROUPS/SOFTWARE/DOCUMENTS/simulation.html)
* [14] L. Chevalier _et al._, ATLAS Internal Note ATL-MUON-97-147 (1997).
Study of tracking and software performance of the ATLAS Inner Tracker in staged-installation scenarios at the High-luminosity LHC

The ATLAS Collaboration

The current baseline construction schedule of the Pixel detector of the ATLAS Phase-2 Inner Tracker (ITk) is in tension with its foreseen installation date during Long Shutdown (LS) 3. Different staged-installation scenarios are being discussed that could help advancing the construction schedule. This would provide enough time contingency to ensure completion of the detector before the start of the run period. In the considered scenarios, only part of the nominal ITk Pixel detector would be installed during LS3 and be present for the Run-4 data-taking, while the rest of the detector would be installed during LS4. This note presents a study of the implications of the proposed staging scenarios on track reconstruction, physics and technical performance. Tracking and flavour-tagging performance are more severely impacted when taking into account detector defects, while an increase in computing power beyond 40% is needed to guarantee reasonable tracking performance even in the absence of defects, with major implications for the tracking reconstruction in trigger.

## 1 Introduction

Over the last years the ATLAS Phase-2 Inner Tracker (ITk) has been carefully designed [1, 2, 3] in order to achieve the ambitious tracking performance goals that are required to fully exploit the ATLAS physics potential for the High-luminosity LHC (HL-LHC). The ITk detector allows the excellent tracking performance obtained in Run-2/3 with the Inner Detector to be preserved and even improved upon, despite the harsh pile-up environment expected during the HL-LHC with \(\langle\mu\rangle\) up to 200. The detector is designed for high-purity, high-efficiency track reconstruction to boost flavour tagging, \(\tau\)-reconstruction and pile-up rejection for jets and missing transverse energy. The ITk will extend the \(\eta^{1}\) coverage to \(|\eta|\)!4, helping the pile-up rejection for forward jets and the identification of processes like vector boson fusion and scattering.

Beyond optimizing the physics performance, minimizing the CPU consumption of track reconstruction was an important part of the ITk detector design process, as documented in the TDR [2]. With the increase in detector hit occupancy associated with the increase in pile-up expected during the HL-LHC data-taking, track reconstruction will be put under severe stress due to the increased combinatorial complexity of the hit-to-track assignment. A supralinear growth in computing time would be in particular a major issue for the offline computing model and for the online reconstruction used for trigger selection. ATLAS has developed a fully functional fast ITk track reconstruction prototype [4] that exploits the granularity and redundancy of the five layer Pixel detector to dramatically reduce the CPU time needed for tracking, as shown in Figure 1, with very little impact on tracking performance. This prototype is the basis for the ATLAS development programme for Run-4 reconstruction and for the current offline computing model projections in the ATLAS Computing CDR [5] and motivates the new baseline for the Event Filter track reconstruction to be documented in the Addendum to the Phase-2 Trigger and Data Acquisition TDR.

In order to maintain the excellent tracking performance throughout the lifetime of the upgraded ATLAS detector in a realistic scenario with heavily irradiated detectors that may also suffer from eventual defects, the ITk layout was optimized in order to provide enough redundancy to cope with such inefficiencies. One of the design requirements was that with an otherwise perfect detector, the tracking performance is not significantly impacted by the loss of up to two hits per track [2]. By design, the tracking performance with a perfect detector is therefore expected not to be strongly impacted by the removal of one outer Pixel layer. This, however, significantly reduces the robustness against detector defects, as will be illustrated in this note.

In order to accommodate the tight installation schedule foreseen for the ITk Pixel detector during Long Shutdown 3 (LS3), potential staged-installation scenarios have been considered by the ATLAS Collaboration to provide enough time contingency to ensure the in-time completion of the detector. In those scenarios, only a part of the ITk Pixel detector would be installed during LS3 and be present for the Run-4 data-taking, while the rest of the detector would be installed during LS4 (referred to from here on as being'staged'). The ITk layout as shown in Figure 2, referred to as ITk layout 23-00-03 from here on, is used for the studies presented in this note. Two main staging scenarios based on this layout are considered in the following:

* The first scenario corresponds to the staging of the full outer Pixel end-caps, meaning the end-cap ring layers oriented perpendicularly to the nominal beam direction in the outer Pixel volume.

* The second scenario corresponds to the staging of the outermost pixel layer (labelled as Layer 4 or L4). Studies presented here focused on the staging of the full L4, but the performance associated with any intermediate scenario, for which only part of the layer is staged, could be inferred from the \(\eta\)-dependent performance results presented.

Figure 3 illustrates the two staging scenarios.

Figure 1: The CPU time required in HS06 \(\times\) seconds to reconstruct a \(t\bar{t}\) event for the ITk. Shown is the total CPU time required for reconstruction using the fast and the default ITk tracking software. For comparison, the corresponding CPU requirements for reconstructing Run-2 events are shown for \(\langle\mu\rangle\) = 20 and 60. [4]

Figure 2: The schematic depiction of the ITk Layout 23-00-03 [6] as considered in this document. Only one quadrant and only active detector elements are shown. The active elements of the Strip detector are shown in blue, and those of the Pixel detector are shown in red.

Figure 3: A zoom on the Pixel detector, illustrating the two Pixel staging scenarios studied in this note with (a) no-outer end-caps and (b) no layer 4. The modules that would not be installed in the detector during LS3 in the two scenarios are shown in grey.

## 2 ITk Simulation and the Emulation of Detector Defects

To study the impact of staging parts of the ITk Pixel detector on the physics and the technical performance, samples were produced based on the ITk layout 23-00-03, described in [6]. For practical purposes, and because the changes in the material budget for the staged scenarios are not yet clear, a conservative assumption was made in which the material budget for the staged ITk Pixel detector is identical to the one of the nominal detector, with all pixel sensors present. For all the considered staging scenarios, the material budget would in any case be impacted by the presence of mechanical support structures and by the presence of services related to the central part of the ITk Pixel detector. Determining the precise details of the material budget changes would require detailed engineering investigations which are beyond the scope of these studies, and the resulting material reductions would not be expected to be large. The pixel sensors associated with the part of the ITk Pixel detector to be staged are marked as inactive in the digitisation step of the simulation production.

Single muon and \(t\bar{t}\) events with \(\langle\mu\rangle\)=0 and 200 were simulated and reconstructed to compare the performance of the perfect detector case to the detector with defects.

To emulate defects related to detector aging and irradiation, a similar approach to the one followed in the ITk Pixel TDR [2] was followed. Two types of detector defects that affect track reconstruction performance have to be considered:

* Component failures during operations that lead to inactive modules. In general, such defects are known and can be described in the conditions database2 of the detector. They are referred to as "known detector inefficiencies". Footnote 2: Conditions data are time-varying data describing the state of the detector used to reconstruct the event data, e.g. detector alignment and calibration data.
* Detector inefficiencies leading to loss of hits in individual channels, referred to as "random inefficiencies".

The known detector inefficiencies affect tracking performance differently as compared to random inefficiencies. Inactive modules can be accounted for in track finding in order to limit the detrimental effects on performance. Permanent or temporary component failures are flagged in the conditions database and this information is used at reconstruction time. When a track candidate extrapolation crosses an inactive module, the missing measurement is not counted as a hole3, but rather as a valid measurement on the track. This strategy to count an inactive module as a fully efficient measurement has been chosen in order not to penalize tracks in detector regions where many inactive modules are present. However, it can only be applied in a robust way to modules between the first and the last actual measurements on a track in order to avoid biases in the track length and doesn't add any constraint to the track parameters. Losing measurements on inactive modules also results in a worse resolution for the trajectory following, that can lead to an increased rate of pattern recognition mistakes, negatively affecting the tracking performance. For the Strip detector, the space points used for track seeding4 are computed from the measurements from the modules on both sides (the small stereo angle between the two sides can provide additional constraint in the \(z/r\) direction) of a barrel stave or end-cap petal. Losing a module on one side will result in losing the space point and will therefore affect the seeding efficiency for track finding.

Random inefficiencies are different from the ones mentioned above as can not be easily corrected for in the track finding process. Depending on the size of a cluster, detector channel inefficiencies can result in losing a measurement or in biasing the position estimate in the clustering. From the track reconstruction point of view, both effects are detrimental to performance. Biases in position estimates affect the track resolution and can result in flagging clusters as outliers in the track fit. A lost cluster results in a hole on the track. Such a loss of a measurement in the innermost layers is particularly harmful as the extrapolation distance to the first measurement on the track increases: more material is encountered in the extrapolation to the first measurement, increasing the contribution of process noise from multiple scattering and energy loss which affects the impact parameter resolution. Lost clusters change the measurement arrangement and therefore influence the track reconstruction performance. They eventually lead to inefficiencies, because the pattern recognition can not explicitly allow for the effect of randomly lost clusters and track candidates may fail the selection cuts.

For this note, 15% of the Pixel and Strip modules have been masked as known detector defects, corresponding to an average loss of two measurements per track, following the procedure used in [1] to assess the impact of detector defects. The distribution of masked modules is random and is not forced to be symmetric in \(\pm\eta\). The efficiency of irradiated Pixel and Strip sensors is simulated to be 97% and 99%, respectively. This inefficiency is modeled as a random dead channel inefficiency in simulation.

### Fast ITk Track Reconstruction

The design of the ITk detector with its five layer Pixel system was chosen to provide excellent tracking performance even in presence of an average event pile-up of up to 200. At the same time, it allows for fast track reconstruction strategies that leverage the redundancy of the five layer system. ATLAS has developed a fully functional fast ITk reconstruction prototype, which is the basis for the experiment's Phase-2 computing model projections [5] and for the offline strategy to bring the HL-LHC computing costs closer to funding expectations. The fast ITk reconstruction prototype also facilitated a fully software-based option for the ATLAS Trigger System Event Filter tracking for HL-LHC, which was subsequently adopted as the baseline strategy [7] for HL-LHC. It will use software tracking and may exploit heterogeneous processing technologies. In the following an overview of the algorithmic approach is given, a detailed description of the fast ITk reconstruction strategy can be found in an ATLAS note [4].

The Track Finding in the default ITk reconstruction was tuned for robustness and physics performance, primarily to allow for studies of different detector layout options. The fraction of the CPU spent in seed finding rises up to 50% of the total Track Finding CPU for the ITk for a sample with an average pile-up \(\langle\mu\rangle=200\). Speeding up the seed finding and improving the purity of the output seed collection by tuning the selection cuts leads to a significant reduction in the reconstruction time, as it also reduces the subsequent time spent in the road building and combinatorial Kalman Filter. Given that the five layer Pixel Detector covers the full range of \(-4<\eta<4\), only Pixel hit combinations are used for the fast ITk track reconstruction version of the seed finding. This allows CPU to be saved by omitting the formation of seeds from strip hits.

The largest contributor to the default ITk reconstruction time is the Ambiguity Resolution. In the default ITk reconstruction about 60% of the input track candidates pass the Ambiguity Resolution algorithm, originating from both the Pixel and Strip seeding iterations. For the purpose of the fast ITk reconstruction, the Ambiguity Resolution algorithm is omitted from the reconstruction chain. Instead, a tighter track selection is implemented (including limiting the number of shared hits between output tracks) in the TrackFinding. For the track parameter estimation the fast Kalman Filter track fit is used directly, as applied by the combinatorial filter in the Track Finding algorithm. In addition, the cuts on the final number of hits and non-shared hits, that were previously applied in the Ambiguity Resolution, are moved to the Track Finding. As a result, the CPU time for fast ITk reconstruction is reduced by more than a factor 8 compared to the default reconstruction strategy, with no significant loss in tracking performance.

### Performance of ITk Detector with Detector Defects

The effect of the detector defects on the track reconstruction efficiency for 2 GeV muons, both for the default and fast tracking reconstruction with the nominal ITk detector, is presented in Figure 4. A reduction of the efficiency by around 10% is observed with the default ITk reconstruction in the central region with \(|\eta|<1.6\) and also in the very forward region at \(|\eta|\) close to 4. The average hit coverage in the intermediate region (\(1.6<|\eta|<3.0\)) is higher thanks to the additional hits in the Strip end-caps disks and in the Pixel end-cap and inner system rings. With the fast ITk tracking, the effect is stronger, with a reduction of up to 20%. For \(|\eta|<2.7\) this is due to the fact that track seed combinations are only searched for in the Pixel detector for fast ITk reconstruction, while the default ITk reconstruction also uses seed combinations in the Strip detector. Hence, using this additional redundancy can mitigate the impact of detector defects, though at the cost of significant additional CPU required for reconstruction. Beyond the Strip detector coverage, the additional reduction in track finding efficiency for fast ITk reconstruction is linked to differences in the tuning of the Pixel seeding.

Figure 5 shows the reduction in tracking efficiency due to detector defects for \(t\bar{t}\) events at \(\langle\mu\rangle\)=200 for the default ITk reconstruction. Again, the most affected region is the central one, for \(|\eta|<2.0\), where the efficiency is reduced by about 10%.

It should be mentioned that an explicit optimization of the seed finding strategies and of the downstream reconstruction for a specific set of known detector defects would likely allow the loss in efficiency to be reduced. However, such recovery strategies would in general require more involved reconstruction strategies to handle particularly problematic detector regions and would hence lead to an increase in CPU resources being needed for track reconstruction. For the purpose of this document the track reconstruction software is left unchanged and only such updates as necessary to handle the staging scenarios were implemented, as discussed in Section 3.2.

Figure 4: Tracking efficiency for 2 GeV muons without pile-up obtained with the nominal ITk detector, with and without detector defects, for (a) the default ITk reconstruction and (b) fast ITk reconstruction. Detector defects are simulated assuming 15% Pixel and Strip inactive modules and 3% (1%) channel inefficiency for Pixel (Strip) sensors.

Figure 5: Tracking efficiency for \(t\bar{t}\) events at \(\langle\mu\rangle\)=200 obtained with the nominal ITk detector, with and without detector defects, for the default ITk reconstruction. Detector defects are simulated assuming 15% Pixel and Strip inactive modules and 3% (1%) channel inefficiency for Pixel (Strip) sensors.

## 3 Performance Studies for Staged Detector Scenarios

### Staging of the Outer End-Caps

As illustrated in Figure 2, within the forward Strip detector acceptance of \(|\eta|<~{}2.7\), the total number of hits would be significantly reduced when considering the scenario where the Outer End-Caps installation is staged. The distance would also increase dramatically between the outermost Pixel hit and the innermost Strip hit. In the very forward region of \(2.7<|\eta|<3.6\) the outermost hit available would already be in the second innermost Pixel ring layer, strongly reducing the lever arm and hence directly impacting the \(p_{\mathrm{T}}\) and \(d_{0}\) resolution.

The impact on the tracking performance is illustrated in Figure 6. As expected, the track reconstruction in the forward region with \(|\eta|>2.7\) is severely impacted, with a significant degradation of the \(p_{\mathrm{T}}\) and \(d_{0}\) resolution in the forward region. Beyond the tracking performance, the Pixel outer end-cap staging is also expected to impact the timing performance of the High-Granularity Timing Detector (HGTD) [8], covering the pseudo-rapidity range \(2.4<|\eta|<4.0\). The larger extrapolation distance to HGTD has a direct consequence on the uncertainty on the position of the track extrapolation to HGTD, as illustrated in Figure 7, exceeding by far the size of 1.3 by 1.3 mm of a timing detector pad. This increased uncertainty in the extrapolation is expected to severely degrade the association of timing measurements to tracks in presence of pile-up induced hits and therefore to increase HGTD hit miss-association rate.

Given the severe performance degradation documented here, affecting not only the ITk performance, but also the HGTD, no further studies have been performed for this staging scenario.

Figure 6: (a) \(d_{0}\) and (b) \(p_{\rm T}\) resolutions for reconstructed tracks with single 100 GeV muon events without pile-up in the staging scenario without Pixel outer end-caps.

Figure 7: \(R\times\sigma(\phi)\) extrapolation uncertainty to HGTD for 1 GeV muons without pile-up, for (a) the nominal ITk detector and (b) the staging scenario without Pixel outer end-caps. The different colored dots correspond to the average uncertainty associated with tracks with an outermost hit in the various ITk subdetectors mentioned, while the black line corresponds to the average uncertainty estimated over an inclusive set of tracks.

### Staging of the Outermost Pixel Layer

The second scenario considered for the studies presented in this document corresponds to the staging of the outermost Pixel layer, labeled in the following with "No L4". The pattern recognition used for track reconstruction starts by building seeds. With this configuration the seeding strategy for both, the default and the fast ITk reconstruction, has to be re-adapted. The current Pixel seeding algorithm implements a seed confirmation which is based on the presence of fourth measurement on one of the outer Pixel layers and compatible with the candidate seed trajectory. Such a procedure exploits the redundancy of the five layer ITk Pixel layout to reduce the amount of fake seeds and hence, to minimize the number of calls of the down-stream track reconstruction algorithms. For the staging scenario without the outermost Pixel layer, the fourth hit confirmation has to be switched off, leading to a significant increase in the rate of fake Pixel seeds. Especially in the barrel region for \(|\eta|<1.6\), requiring four measurements (to build seeds) out of four layers would otherwise impact the seeding efficiency to an unacceptable level, even for a detector without defects, because of small but unavoidable geometrical inefficiency (for instance when a particle flies in the gaps between chips on a module or between modules on a stave) or because of charge discrimination threshold inefficiencies.

The effect of the fourth hit seed confirmation on the track reconstruction efficiency for 2 GeV muons, both for the default and fast tracking reconstruction with the staged "No L4" layout is presented in Figure 8. For the default ITk track reconstruction, which uses the Pixel seed finding and an additional iteration of finding seed candidates using Strip space points,the fourth hit seed confirmation reduces the overall track reconstruction efficiency by less than 0.2% in \(|\eta|<1.2\) and up to 1% at \(|\eta|\) 1.4. The effect is significantly larger for fast ITk track reconstruction, because of the missing iteration using Strip seeds that would otherwise mitigate the impact of the fourth hit seed confirmation. As a result, the efficiency with fourth hit confirmation decreases by few percent for \(|\eta|<1.2\), with a significant drop of 30% in the transition region of both the outer Pixel and Strip detectors.

Because of the aforementioned considerations, the fourth hit seed confirmation is dropped for Pixel seed finding in the flat barrel sections in the staged scenario. This results in a strong increase in the number of Pixel seeds (mostly fakes), more calls to the combinatorial track finding and more CPU time needed for reconstruction. Table 1 reports the number of Pixel seeds reconstructed per event and the track finding CPU timing per event for \(t\bar{t}\) events with 200 pile-up using the nominal ITk detector and the "No L4" scenario for

\begin{table}
\begin{tabular}{|c|c|c|} \hline  & Number of Pixel seeds per event & Track Finding CPU[s] \\ \hline Full Detector & 26017 & 5.04 \\ Default Tracking & 9468 & 1.48 \\ \hline Full Detector & \multicolumn{2}{c|}{Number of Pixel seeds per event} & Track Finding CPU[s] \\ \hline \hline \multicolumn{2}{|c|}{“No L4” Detector} & \multicolumn{2}{c|}{51047} & 7.32 \\ Default Tracking & \multicolumn{2}{c|}{19340} & 2.04 \\ \hline \end{tabular}
\end{table}
Table 1: Number of Pixel seeds reconstructed per event and the track finding CPU timing per event for \(t\bar{t}\) events with 200 pile-up using the nominal ITk detector and the “No L4” scenario for the default reconstruction and the fast track reconstruction. The fourth hit seed confirmation is dropped for Pixel seeding for the “No L4” staging scenario.

the default ITk reconstruction and the fast ITk track reconstruction. As shown in the table, even with one Pixel layer fewer, twice as many pixel seeds are reconstructed in the "No L4" scenario with respect to the full detector, due to the removal of the fourth hit seed confirmation. This results into an increase of 40% in CPU for track finding for both the default and the fast ITk track reconstruction.

Figure 8: Tracking efficiency for 2 GeV muons without pile-up obtained with the “No L4” scenario, with and without fourth hit seed confirmation, for (a) the default ITk reconstruction and (b) fast track ITk reconstruction. Both layout configurations use a perfect detector, without any defect.

Figure 9 shows the track reconstruction efficiency for \(t\bar{t}\) events with \(\langle\mu\rangle=200\) for the nominal ITk detector and the "No L4" scenario, without any detector defects, for the default and fast ITk reconstructions. As can be seen, only a minimal loss in the tracking efficiency is observed between the two scenarios thanks to the intrinsic redundancy in the nominal ITk layout, which is robust by design against the loss of one pixel hit.

Figure 9: Track reconstruction efficiency for \(t\bar{t}\) events with \(\langle\mu\rangle=200\) for the nominal ITk detector and the “No L4” scenario for (a) the default ITk reconstruction and (b) fast track ITk reconstruction. Both layout configurations use a perfect detector, without any defect.

The reduction of track reconstruction efficiency and pile-up robustness becomes dramatic when detector defects are taken into account in the simulation. Figure 10 (a) shows the track reconstruction efficiency for \(t\bar{t}\) events with \(\langle\mu\rangle=200\) for the nominal ITk detector and the "No L4" scenario, both with detector defects, for the default ITk reconstruction. Compared to what is shown in Figure 4, the tracking efficiency is

Figure 10: Track reconstruction efficiency for \(t\bar{t}\) events with \(\langle\mu\rangle=200\) for the nominal ITk detector and the “No L4” scenario for (a) the default ITk reconstruction and (b) fast track ITk reconstruction. Both layout configurations include detector defects. Detector defects are simulated assuming 15% Pixel and Strip inactive modules and 3% (1%) channel inefficiency for Pixel (Strip) sensors.

reduced by an additional 15% for the "No L4" scenario when detector defects are included. The efficiency is even further reduced for the fast track reconstruction shown in Figure 10 (b) for the "No L4" scenario. The efficiency reaches values down to 60% for \(|\eta|<2.0\) despite the relaxed Pixel seeding requirement. The \(\eta\)-asymmetry observed is due to the particular detector defect distribution, which is not symmetric.

As discussed in Section 2.2, the addition of detector defects has also consequences on the track fake rate because of the increase in the rate of pattern recognition mistakes.

An inclusive measure of the rate of additional (incorrect/fake) tracks can be obtained from the total number of reconstructed tracks per event as a function of \(\mu\). The number of real particle tracks is expected to scale linearly with \(\mu\), since it is directly related to the number of charged particles produced in the additional pile-up collisions. A further increase in the number of tracks due to additional random combinations of clusters would also result in a more rapid scaling with \(\mu\) due to the enhanced combinatorics to form wrong candidates.

In Figure 11 the average number of reconstructed tracks is shown as a function of the number of interactions per bunch crossing for \(t\bar{t}\) events with an average \(\langle\mu\rangle\) of 200. Shown is the result for the nominal ITk detector and the "No L4" scenario using the default reconstruction, for tracks in \(1.2<|\eta|<2.7\). The slope in the ratio panel of Figure 11 as a function of \(\mu\) is a direct evidence of an increased rate of pattern recognition mistakes due to the missing Pixel layer in the staging scenario. In this pseudorapidity region the extrapolation distance between the last Pixel hit and the first Strip hit is significantly increased. This is associated with an enhancement in pattern recognition confusion, also leading to an increased rate of wrong hit assignments.

Figure 11: Average number of reconstructed tracks as a function of the number of interactions per bunch crossing \(\mu\) for tracks in \(1.2<|\eta|<2.7\) in \(t\bar{t}\) at \(\langle\mu\rangle=200\) for the nominal ITk detector and the "No L4" scenario for the default reconstruction including detector defects. Detector defects are simulated assuming 15% Pixel and Strip inactive modules and 3% (1%) channel inefficiency for Pixel (Strip) sensors. A line is used to fit the ratio shown in the bottom panel. The estimated slope is \((2.2\pm 1.3)\times 10^{-4}\).

#### 3.2.1 Impact on b-tagging Performance

In this section, the difference between the nominal ITk detector and the "No L4" staging scenario is dicussed in terms of the \(b\)-tagging performance. The identification of heavy flavour jets is based on low-level \(b\)-tagging algorithms, which exploit the large impact parameters of tracks associated with \(b\)-hadron decay products for the IP3D algorithm [9], as well as the properties of the secondary vertices reconstructed from those tracks by the SV1 algorithm [10] and the JetFitter algorithm [11]. The outputs of all those low-level algorithms are combined using the MV2 multivariate algorithm [12], with a dedicated ITk optimization [13]. The impact of \(b\)-tagging algorithm retraining for the "No L4" staging scenario was studied and found to be negligible. The same training is therefore used for all the results presented here.

Figure 12(a) shows the difference in \(b\)-tagging performance using the default ITk track reconstruction for the nominal ITk detector and the "No L4" staging scenario. For this study jets from \(t\overline{t}\) events with an average pile-up of 200 were used. Without detector defects emulated in the simulation sample, the effect of staging layer 4 in the "No L4" scenario is only \(\sim\)10% even for the central region of the detector, for the bins \(0<|\eta|<1\) and \(1<|\eta|<2\) where the achieved \(b\)-tagging performance is maximal. This is a consequence of the ITk design requirement that the reconstruction must be robust against the loss of up to two hits per track. This picture changes when detector defects are emulated that lead to a loss in track reconstruction efficiency and an increase of fakes, in particular for the the "No L4" staging scenario. Figure 12(b) shows a dramatic effect on the identification of \(b\)-jets for the bins \(0<|\eta|<1\) and \(1<|\eta|<2\). The light-jet rejection is reduced by up to 50% for the "No L4" scenario with respect to the nominal ITk detector. This corresponds to 5% reduction of \(b\)-jet efficiency at a fixed light-jet rejection for a typical working point used in physics analysis. Assuming \(b\)-tagging performance as outlined in Figure 12(b), the sensitivity for the search of the Standard Model Higgs-pair production in the process \(pp\to HH\to b\bar{b}b\bar{b}\), one of the physics benchmarks of the HL-LHC programme, would be reduced from \(0.53\sigma\) down to \(0.47\sigma\).

Figure 12: Light-jet rejection as a function of b-jet efficiency using the MV2 \(b\)-tagging algorithm on jets in \(t\bar{t}\) events with an average pile-up of 200. Compared are the results for the nominal (full) ITk detector and the “No L4” staging scenario, in bins of \(|\eta|\). (a) shows the results when simulating a perfect detector without detector defects and (b) when detector defects are simulated for the two bins of \(0<|\eta|<1\) and \(1<|\eta|<2\). Detector defects are simulated assuming 15% Pixel and Strip inactive modules and 3% (1%) channel inefficiency for Pixel (Strip) sensors.

## 4 Conclusions

The goal of the ITk upgrade is to build a tracking system that is able to preserve excellent physics performance for the HL-LHC data taking, despite the harsh pile-up environment with up to \(\langle\mu\rangle=200\). The ITk detector is therefore fundamental to achieve the ambitious ATLAS physics goals during Run-4 and beyond. At the same time, the ITk detector is designed to allow for a significant reduction in track reconstruction time at 140 to 200 pile-up, even compared to present days Run-2 reconstruction at much lower levels of pile-up. The fast ITk reconstruction is the baseline for the ATLAS Phase-2 offline computing model and for the Event Filter online trigger reconstruction.

Because of the schedule delays in the Pixel project, the physics and technical implications of two staging scenarios for the Pixel detector have been studied. The first scenario discussed in Section 3.1 involves installing the outer Pixel end-caps only during LS4, after Run-4. This scenario would have dramatic consequences on the transverse impact parameter and momentum resolution in the forward region. In addition, without the Pixel end-caps the timing performance of the High Granularity Timing Detector would be significantly degraded.

The second scenario studied involves staging the outermost Pixel layer. As described in Section 3.2, such a staging scenario would have severe consequences on both the physics and the technical (CPU) performance of the ITk reconstruction, in particular when taking eventual detector defects into account:

* The track seeding strategy for the default and in particular for the fast ITk track reconstruction exploits the performance of the five layer Pixel detector. Removing the outermost layer requires dropping the fourth hit confirmation in Pixel seed finding. For a perfect detector this would recover most of the inefficiency, but leads to an increase of 45% (40%) in CPU for the default (fast) ITk track reconstruction.
* Emulating the effect of potential detector defects results in strong reduction in track reconstruction efficiency and pile-up robustness for the the "No L4" staging scenario. Efficiency would be reduced down to 60% for \(|\eta|<2.0\) for the fast but also the default ITk reconstruction, despite the relaxed Pixel seeding requirement. Pile-up robustness is also reduced as proven by a more rapid scaling of the number of tracks as a function of \(\mu\).
* In terms of \(b\)-tagging performance, light-jet rejection is reduced by up to 50% for the "No L4" staging scenario with respect to the nominal ITk detector, when detector defects are emulated. This corresponds to 5% reduction of \(b\)-jet efficiency at a fixed light-jet rejection, affecting a broad range of physics channels, like \(pp\to HH\to b\bar{b}b\bar{b}\).

Staging the outermost Pixel layer would put the ATLAS Phase-2 offline and trigger (fast) reconstruction strategy in danger. Even the eight times slower default ITk reconstruction does not allow the tracking performance to recover if detector defects are taken into account, calling for even more involved reconstruction strategies. Such reconstruction strategies are expected to lead to significant additional offline CPU needs for the Tier-0 and worldwide computing, further adding to the gap between the needs and the projected pledges. The size of the trigger farm installed at Point-1 for HL-LHC is limited by the available cooling power for operation. A much larger Event Filter trigger farm for processing the ITk data would exceed this cooling limit and would therefore put the new ATLAS HL-LHC trigger track reconstruction strategy at risk [7].

## References

* [1] ATLAS Collaboration, _ATLAS Inner Tracker Strip Detector: Technical Design Report_, ATLAS-TDR-025; CERN-LHCC-2017-005, 2017, url: [https://cds.cern.ch/record/2257755](https://cds.cern.ch/record/2257755) (cit. on pp. 2, 7).
* [2] ATLAS Collaboration, _ATLAS Inner Tracker Pixel Detector: Technical Design Report_, ATLAS-TDR-030; CERN-LHCC-2017-021, 2017, url: [https://cds.cern.ch/record/2285585](https://cds.cern.ch/record/2285585) (cit. on pp. 2, 6).
* [3] ATLAS Collaboration, _Updates in the ITk Pixel Layout following the smaller radius decision_, tech. rep. ITK-2020-002, CERN, 2020, url: [https://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PLOTS/ITK-2020-002/](https://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PLOTS/ITK-2020-002/) (cit. on p. 2).
* [4] ATLAS Collaboration, _Fast Track Reconstruction for HL-LHC_, ATL-PHYS-PUB-2019-041, 2019, url: [https://cds.cern.ch/record/2693670](https://cds.cern.ch/record/2693670) (cit. on pp. 2, 3, 7).
* [5] P. Calafiura, J. Catmore, D. Costanzo and A. Di Girolamo, _ATLAS HL-LHC Computing Conceptual Design Report_, tech. rep. CERN-LHCC-2020-015. LHCC-G-178, CERN, 2020, url: [https://cds.cern.ch/record/2729668](https://cds.cern.ch/record/2729668) (cit. on pp. 2, 7).
* [6] ATLAS Collaboration, _Expected tracking and related performance with the updated ATLAS Inner Tracker layout at the High-Luminosity LHC_, ATL-PHYS-PUB-2021-024, 2021, url: [https://cds.cern.ch/record/2776651](https://cds.cern.ch/record/2776651) (cit. on pp. 4, 6).
* [7] ATLAS Collaboration, _Event Filter Tracking Amendment to the Technical Design Report for the Phase-II Upgrade of the ATLAS Trigger and Data Acquisition System_, in preparation (cit. on pp. 7, 21).
* [8] ATLAS Collaboration, _A High-Granularity Timing Detector for the ATLAS Phase-II Upgrade: Technical Design Report_, ATLAS-TDR-031; CERN-LHCC-2020-007, 2020, url: [https://cds.cern.ch/record/2719855](https://cds.cern.ch/record/2719855) (cit. on p. 11).
* [9] ATLAS Collaboration, _Performance of \(b\)-jet identification in the ATLAS experiment_, JINST **11** (2016) P04008, arXiv: 1512.01094 [hep-ex] (cit. on p. 19).
* [10] ATLAS Collaboration, _Secondary vertex finding for jet flavour identification with the ATLAS detector_, ATL-PHYS-PUB-2017-011, 2017, url: [https://cds.cern.ch/record/2270366](https://cds.cern.ch/record/2270366) (cit. on p. 19).
* [11] ATLAS Collaboration, _Topological \(b\)-hadron decay reconstruction and identification of \(b\)-jets with the JetFitter package in the ATLAS experiment at the LHC_, ATL-PHYS-PUB-2018-025, 2018, url: [https://cds.cern.ch/record/2645405](https://cds.cern.ch/record/2645405) (cit. on p. 19).
* [12] ATLAS Collaboration, _Optimisation and performance studies of the ATLAS \(b\)-tagging algorithms for the 2017-18 LHC run_, ATL-PHYS-PUB-2017-013, 2017, url: [https://cds.cern.ch/record/2273281](https://cds.cern.ch/record/2273281) (cit. on p. 19).
* [13] ATLAS Collaboration, _Expected \(b\)-tagging Performance with the upgraded ATLAS Inner Tracker Detector at the High-Luminosity LHC_, ATL-PHYS-PUB-2020-005, 2020, url: [https://cds.cern.ch/record/2713377](https://cds.cern.ch/record/2713377) (cit. on p. 19).
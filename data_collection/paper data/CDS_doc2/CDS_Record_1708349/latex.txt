# Straight line track reconstruction for the ATLAS IBL testbeam with the EUDET telescope.

H. Gjersdal\({}^{\rm a}\), O. Rohne\({}^{\rm a}\), A. Strandlie\({}^{\rm a,b}\)

\({}^{\rm a}\)_Department of Physics, University of Oslo, Oslo, Norway_

\({}^{\rm b}\)_Gj@vik University College, P. O. Box 191, N-2802 Gj@vik, Norway_

###### Abstract

Track reconstruction based on the Kalman filter has been implemented for straight line tracks in data taken with the EUDET beam telescope. The information filter formulation of the Kalman filter has been used to implement the combinatorial Kalman filter and the Deterministic Annealing Filter to deal with noisy input data. In addition to the Kalman filter based track finding, a new and simple to develop and implement track finding method based on cluster finding has been studied. The methods have been tested and compared using a simple simulation. The simulation studies show that both the combinatorial Kalman filter and the cluster track finder have high track finding efficiency, and that the Deterministic Annealing Filter is able to reduce the noise contamination and improve the precision of the track estimates. Real test beam data has been reconstructed with excellent goodness of fit.

(c) Copyright 2014 CERN for the benefit of the ATLAS Collaboration.

 Reproduction of this article or parts of it is allowed as specified in the CC-BY-3.0 license.

Introduction

The EUDET telescope is a high precision beam telescope used in test beam characterization of particle detectors. The goal of the beam telescope is to provide information about the particles passing through it for analysis of devices under test.

Track reconstruction is the process of obtaining the optimal parametrized description of particle tracks at the point of intersection with the devices under test. This consists of track finding and track fitting. Track finding determines which measurements have been created by the same particle from data that contain noise hits and measurements created by other tracks. Track fitting is finding the optimal parameters for describing the track, as well as the correct description of the parameter uncertainties.

The Kalman filter [1] has been implemented for track fitting of EUDET data. The implementation has also been used as a core for methods for track finding. The simple geometry of the experiment, as well as the lack of a magnetic field, makes it possible to use the information filter formulation of the Kalman filter. This offers some advantages in numerical stability, as well as the ability to describe a complete lack of information for the initial guess of the track parameters.

Three different approaches to track reconstruction of test beam data have been implemented and compared with simulation experiments.

* The combinatorial Kalman filter [2], which is a track finder based on the Kalman filter.
* The combinatorial Kalman filter followed by the Deterministic Annealing Filter (DAF). The DAF is an iterative method that considers all the hits in the detector, using optimal track estimates in deciding on including or rejecting a hit [3]. The information filter can deal with several weighted hits per plane with only minor adjustments, making it ideal for implementing the DAF.
* The cluster track finder followed by the DAF. The cluster track finder is a new track finding method based on cluster finding. It takes advantage of the beam constraints in the test beam experiment, and the ability of the DAF to deal with imperfections in the track finder.

In the following, the experimental setup and the track model are described. The methods that were implemented for track fitting and track finding for the ATLAS IBL test beam with the EUDET telescope in 2010 and 2011 are then described. A validation of the implementations using a simple simulation experiment is presented, as well as results from real test beam data.

### The experimental setup

The EUDET telescope was developed by the EUDET1 and AIDA2 projects [4]. The telescope consists of six MIMOSA26 sensors, each having 576 \(\times\) 1152 pixels with a pitch of 18.4 \(\upmu\)m in both directions, covering an area of approximately 10.6\(\times\)21.2 mm2. The sensor planes are distributed in two arms, where devices under test are placed in the middle, as illustrated in Figure 1. The reconstruction of the EUDET telescope data is done within the EUTelescope software framework3.

Footnote 1: Detector R&D towards the International Linear Collider

Footnote 2: Advanced European Infrastructures for Detectors and Accelerators

Footnote 3: see [http://eutelescope.web.cern.ch/](http://eutelescope.web.cern.ch/)

The telescope has been used to reconstruct a monochromatic beam of \(\pi^{+}\) generated by the Super Proton Synchrotron at CERN. The particle beam is collimated, and near orthogonal to the EUDET sensor planes.

### The track model

The material in the test beam instrumentation is assumed to be concentrated in planes with no spatial thickness, and no interactions between the particles and air are assumed to occur. In these planes, the particles will interact with the material through multiple Coulomb scattering, changing the angle of the trajectory.

Without a magnetic field the energy or momentum of a particle can not be determined from the trajectory. The only effect of the beam energy on the trajectory is to determine the amount of scattering that can occur in a plane. As the energy loss can not be determined, all particles are assumed to have the same energy and momentum throughout the experiment.

The beam telescope is described in a three-dimensional, right-handed Cartesian coordinate system, where the \(y\)-axis is in the vertical direction, and the \(z\)-axis is parallel to the nominal beam direction. At a plane \(k\), the particle track is described with the parameters

\[\mathbf{x}_{k}=\begin{pmatrix}x\\ y\\ dx/dz\\ dy/dz\end{pmatrix}. \tag{1}\]

The position where the particle intersects with the plane is described by \(x\) and \(y\), and \(dx/dz\) and \(dy/dz\) are direction tangents of the angles in the \(xz\) and \(yz\) planes. The uncertainties of an estimate of \(\mathbf{x}_{k}\) are described in the covariance matrix \(\mathbf{C}_{k}\).

If there is no material between the planes, the parameters on the front side of plane \(k\) can be calculated from the parameters on the back side of plane \(k-1\). This process is deterministic.

\[\mathbf{x}_{k}=\mathbf{F}_{k}\mathbf{x}_{k-1}^{B} \tag{2}\]

The superscript \({}^{B}\) denotes parameters on the back side of a plane, after the particle has interacted with the material in the plane. The transport matrix, \(\mathbf{F}_{k}\), depends on the propagation length along the \(z\)-axis, \(\Delta z_{k}\).

\[\mathbf{F}_{k}=\left(\begin{array}{cccc}1&0&\Delta z_{k}&0\\ 0&1&0&\Delta z_{k}\\ 0&0&1&0\\ 0&0&0&1\end{array}\right) \tag{4}\]

The change in angle of the particle due to multiple Coulomb scattering has an expectation value of zero. The uncertainties of scattering in orthogonal planes, parallel to the \(z\)-axis, are Gaussian and can be

Figure 1: Schematic overview of the EUDET telescope, with ATLAS pixel devices (APIX). The position along the \(z\)-axis are noted under the detector planes. The exact \(z\)-positions of the planes vary between experiments, but these values are from the real and simulated data presented in the following.

calculated from the Highland formula [5].

\[\sigma_{\rm plane}=\frac{0.0136}{E}\sqrt{\frac{X}{X_{0}}}(1+0.038ln(\frac{X}{X_{0} })) \tag{5}\]

To estimate the uncertainties, the beam energy, \(E\), as well as the amount of material, \(\frac{X}{X_{0}}\), must be known. The beam energy is in units of GeV, the thickness in units of radiation lengths.

The changes in the track parameters due to material interactions in a plane are

\[\mathbf{x}_{k}^{B}=\mathbf{x}_{k}+\mathbf{\omega}, \tag{6}\]

where \(\mathbf{x}_{k}\) are the track parameters on the front side of the plane, \(\mathbf{x}_{k}^{B}\) are the track parameters on the back side of the plane, and \(\mathbf{\omega}\) is a Gaussian stochastic term. The stochastic term has an expectation value

\[E\{\mathbf{\omega}\}=\begin{pmatrix}0\\ 0\\ 0\\ 0\end{pmatrix}, \tag{7}\]

and the covariance matrix

\[cov\{\mathbf{\omega}\}=\begin{pmatrix}0&0&0&0\\ 0&0&0&0\\ 0&0&\sigma_{xz}^{2}&0\\ 0&0&0&\sigma_{yz}^{2}\end{pmatrix}. \tag{8}\]

The standard deviations in the two planes, \(\sigma_{xz}\) and \(\sigma_{yz}\), are equal and calculated from Eq. 5.

The detectors in the test beam give two-dimensional measurements of the position of a particle in the detector planes. The measurements are modeled as a sum of the true position of the particle in the plane and a stochastic term due to measurement uncertainties.

\[\mathbf{m}_{k}=\mathbf{H}\mathbf{x}_{k}+\mathbf{\epsilon} \tag{9}\]

The measurement errors have an expectation value

\[E\{\mathbf{\epsilon}\}=\begin{pmatrix}0\\ 0\end{pmatrix}, \tag{10}\]

and a covariance matrix \(cov\{\mathbf{\epsilon}\}=\mathbf{V}\).

The matrix \(\mathbf{H}\) describes the projection from the four-dimensional track parameter space to the two-dimensional measurement space. The projection is the same in all planes.

\[\mathbf{H}=\begin{pmatrix}1&0&0&0\\ 0&1&0&0\end{pmatrix} \tag{11}\]

The measurements are defined to be on the front side of the measurement planes.

## 2 Track fitting with the information filter

The Kalman filter is a recursive formulation of the least squares estimator. It starts at the first or last measurement plane in the detector system, and works by alternating between updating and predictingthe track estimate. Updating is combining a prediction and a measurement in a plane, predicting is propagating the updated estimate to the next measurement plane.

The Kalman filter can run either in the forward direction, reading in the measurements in the same order they were created, or oppositely in the backward direction. The optimal estimate of the track parameters is obtained only when all measurements have been included in the fit. To obtain the optimal estimates in all the planes, estimates from a forward running and a backward running Kalman filter are combined in a process called smoothing.

The information filter is a reformulation of the Kalman filter that does not keep track of the explicit parameters and covariance matrix, but the weight matrix, \(\mathbf{W}=\mathbf{C}^{-1}\), and the information vector, \(\mathbf{i}=\mathbf{W}\mathbf{x}\).

In a complex high energy physics experiment, the explicit track parameters are needed for propagating the particle state. In the simple track model in the test beam experiment, however, it possible to perform the propagation with implicit parameters. In this case, the information filter formulation offers some advantages in numerical stability compared to the standard formulation.

The information filter is able to describe a complete lack of knowledge about the track parameters in both position and direction with a weight matrix that is a null matrix. This lack of knowledge can only be approximated with large diagonal elements in an explicit covariance matrix.

### Update

A new measurement is included in the implicit parameter estimate by combining the information from the prediction and the measurement in a plane.

The measurement projected into parameter space can be described as

\[\mathbf{x}_{m}=\mathbf{H}^{T}\mathbf{m}_{k}, \tag{12}\]

with the weight matrix

\[\mathbf{W}_{m}=\mathbf{H}^{T}\mathbf{V}_{k}^{-1}\mathbf{H}=\begin{pmatrix} \mathbf{V}_{k}^{-1}&\mathbf{0}\\ \mathbf{0}&\mathbf{0}\end{pmatrix}, \tag{13}\]

where \(\mathbf{0}\) is the \(2\times 2\) null matrix. The weigh matrix reflects that no information about the direction of the particle exists in the measurement.

The updated information vector is the weighted sum of the prediction and the measurement, where the weights are the weight matrices. The updated weight matrix is the sum of the weights.

\[\mathbf{W}_{klk}\mathbf{x}_{klk}= \mathbf{W}_{klk-1}\mathbf{x}_{ik|k-1}+\mathbf{W}_{m}\mathbf{x}_{m} \tag{14}\] \[\mathbf{W}_{jkk}= \mathbf{W}_{ikk-1}+\mathbf{W}_{m} \tag{15}\]

The explicit parameters are the weighted average of the measurement and the prediction.

\[\mathbf{x}_{klk}= (\mathbf{W}_{ik|k-1}+\mathbf{W}_{m})^{-1}(\mathbf{W}_{ik|k-1} \mathbf{x}_{ik|k-1}+\mathbf{W}_{m}\mathbf{x}_{m}) \tag{16}\]

The information filter does not need the explicit parameters, and the update simply becomes

\[\mathbf{i}_{k|k}= \mathbf{i}_{ik|k-1}+\mathbf{H}^{T}\mathbf{V}_{k}^{-1}\mathbf{m}_ {k} \tag{17}\] \[\mathbf{W}_{k|k}= \mathbf{W}_{k|k-1}+\mathbf{H}^{T}\mathbf{V}_{k}^{-1}\mathbf{H}. \tag{18}\]

### Prediction

The propagation of the parameter vector from the back side of plane \(k-1\) to the front side of plane \(k\) is described in Eq. 2. The propagation of the uncertainties is done with linear error propagation.

\[\mathbf{C}_{k\!k-1}=\mathbf{F}_{k}\mathbf{C}_{k-1|k-1}^{B}\mathbf{F}_{k}^{T} \tag{19}\]

In the simple track model, a track can be propagated without needing the explicit states as long as the \(z\)-position of the points where the track intersects with the material planes are known. The deterministic parameter transformations from the back side of plane \(k-1\) to the front side of plane \(k\) are described by the inverse transport matrix, \(\mathbf{F}^{-1}\).

\[\mathbf{W}_{k\!k-1} =(\mathbf{F}_{k}\mathbf{C}_{k-1|k-1}^{B}\mathbf{F}_{k}^{T})^{-1} =(\mathbf{F}_{k}^{-1})^{T}\mathbf{W}_{k-1|k-1}^{B}\mathbf{F}_{k}^{-1} \tag{20}\] \[\mathbf{i}_{k\!k-1} =\mathbf{W}_{k|k-1}\mathbf{F}_{k}\mathbf{x}_{k-1|k-1}^{B}=( \mathbf{F}_{k}^{-1})^{T}\mathbf{i}_{k-1|k-1}^{B} \tag{21}\]

The transport matrix describes the linear transformation of the parameters when they are propagated a distance \(\Delta z_{k}\) along the \(z\)-axis, where \(\Delta z_{k}\) is the difference between the \(z\) position of the points where the particle intersects with planes \(k\) and \(k-1\). The case where the \(z\)-positions are not known exactly a priori will be discussed after the Deterministic Annealing Filter is introduced.

### Multiple Coulomb scattering

Multiple scattering is taken into account by adding the covariance matrix of the material interactions to the covariance matrix of the parameters.

\[\mathbf{C}_{k}^{B}=\mathbf{C}_{k}+cov[\mathbf{\omega}] \tag{22}\]

Inverting \(\mathbf{W}_{k}\) to obtain \(\mathbf{C}_{k}\) and \(\mathbf{C}_{k}^{B}\) to obtain \(\mathbf{W}_{k}^{B}\) would introduce numerical instabilities and require an initial weight matrix that is not a null matrix.

Only the covariance matrix elements that describe the uncertainties of the direction tangents are altered, and this uncertainty can be described with a \(2\times 2\) matrix

\[cov[\mathbf{\omega}]=\mathbf{U}^{T}\mathbf{Q}\mathbf{U}, \tag{23}\]

where

\[\mathbf{Q}=\begin{pmatrix}\sigma_{xz}^{2}&0\\ 0&\sigma_{xy}^{2}\end{pmatrix}\text{ and }\mathbf{U}=\begin{pmatrix}0&0&1&0\\ 0&0&0&1\end{pmatrix}. \tag{24}\]

Using the the Woodbury matrix identity [6], this problem can be solved by inverting the \(2\times 2\) matrix \(\mathbf{Q}\) instead of the \(4\times 4\) weight matrices.

\[\mathbf{W}_{k}^{B} =(\mathbf{C}_{k}+\mathbf{U}^{T}\mathbf{Q}\mathbf{U})^{-1} \tag{25}\] \[=\mathbf{W}_{k}-\mathbf{A}_{k}\mathbf{W}_{k}, \tag{26}\]

where

\[\mathbf{A}_{k}= \mathbf{W}_{k}\mathbf{U}^{T}(\mathbf{Q}^{-1}+\mathbf{U}\mathbf{W} _{k}\mathbf{U}^{T})^{-1}\mathbf{U}. \tag{27}\]

Since \(\mathbf{i}_{k}\) depends on \(\mathbf{W}_{k}\), this must also be updated.

\[\mathbf{i}_{k}^{B}= \mathbf{i}_{k}-\mathbf{A}_{k}\mathbf{i}_{k} \tag{28}\]

This method is faster than relying on inversion of the \(4\times 4\) matrices.

### Test statistics

The difference between the predicted position and the measurement is described by the residual vector, \(\mathbf{r}_{k|k-1}\), and the corresponding covariance matrix \(\mathbf{R}_{ik|k-1}\).

\[\mathbf{r}_{k|k-1} =\mathbf{H}^{T}\mathbf{x}_{ik|k-1}-\mathbf{m}_{k} \tag{29}\] \[\mathbf{R}_{k|k-1} =\mathbf{H}^{T}\mathbf{C}_{k|k-1}\mathbf{H}+\mathbf{V}_{k} \tag{30}\]

To test that the model assumptions hold, the fitted \(\chi^{2}\) of the tracks are studied.

\[\chi^{2} =\sum_{k}^{n}\chi_{k}^{2} \tag{31}\] \[\chi_{k}^{2} =\mathbf{r}_{k|k-1}^{T}\mathbf{R}_{k|k-1}^{-1}\mathbf{r}_{k|k-1} \tag{32}\]

If the measurements are unbiased, the stochastic processes that are encountered are Gaussian and correctly described, and the residuals in the different planes are uncorrelated, the fitted \(\chi^{2}\) should follow a \(\chi^{2}\) distribution with \(N_{\text{dof}}=N_{m}-N_{p}\) degrees of freedom. \(N_{m}\) is the number of measurements, and \(N_{p}=4\) is the number of fitted track parameters. Each two-dimensional pixel measurement increments \(N_{\text{dof}}\) by 2. As a straight line can pass through one or two points with zero residuals, the \(\chi^{2}\) increments for the first two measurements that are included are zero.

The Kalman filter is a least squares estimator, finding the parameters that minimize \(\chi^{2}\) for each track. According to the Gauss-Markov theorem [7], the least squares estimator is the linear unbiased estimator with the smallest variance given that:

1. the measurements are unbiased,
2. the normalized residuals have the same variance,
3. and the residuals in the different planes are uncorrelated.

If the fitted \(\chi^{2}\) does not follow the theoretical \(\chi^{2}\) distribution with the same number of degrees of freedom, it is an indication that these assumptions do not hold, or that the residuals are not Gaussian.

If the geometry description of the experiment is not correct, the measurements will be biased. The normalized residuals will only have the same variance if the measurement uncertainties and the amount of scattering in the planes are correctly described. If the measurement errors are in part due to systematic effects, measurement errors can be correlated between planes.

### Smoother

The track estimate can be optimal only when information from all the measurements have been included. For a plane in the middle of the telescope, information from Kalman filters running in opposite directions are combined. Analogously to the Kalman filter update, the information is combined by taking the weighted average of the two predictions, where the weights are the inverse covariance matrices.

\[\mathbf{C}_{k}^{*} =\left[\mathbf{W}_{k|k-1}^{FW}+\mathbf{W}_{k|k+1}^{BW}\right]^{-1} \tag{33}\] \[\mathbf{x}_{k}^{*} =\mathbf{C}_{k}^{*}\left(\mathbf{i}_{k|k-1}^{FW}+\mathbf{i}_{k|k +1}^{BW}\right) \tag{34}\]

The implicit parameter estimate at the front side of plane \(k\) is described by \(\mathbf{W}_{k|k-1}^{FW}\) and \(\mathbf{i}_{k|k-1}^{FW}\) for a forward running filter, and \(\mathbf{W}_{k|k+1}^{BW}\) and \(\mathbf{i}_{k|k+1}^{BW}\) for a backward running filter. The explicit, smoothed estimate of the parameters in plane \(k\) are \(\mathbf{x}_{k}^{*}\) and \(\mathbf{C}_{k}^{*}\). The asterisk indicates that the estimates do not contain information from the measurement in plane \(k\).

The sum of squared normalized residuals with respect to the smoothed predictions in all planes does not follow a \(\chi^{2}\) distribution, as the residuals are correlated.

Track finding

For the Kalman filter to work, it needs a list of measurements to be fitted. The process of going from all hits in the detector to a set of hits assumed to belong to the same track is called track finding. Because of detector noise, less than perfect detection efficiency, and the chance that more than one particle passes through the detector at each trigger, an event in the EUDET telescope rarely contains only a single hit per detector plane.

A good track finder must have a high probability for including a measurement that truly belong to the track, and a low probability of including a hit that does not. It must have a high probability of finding a real particle track, and a low probability of reporting a combination of hits not created by the same particle as a track.

Two pure track finders have been implemented. The combinatorial Kalman filter is an efficient search for hit combinations in a directed graph structure that is based on Kalman filter updates and predictions. A cruder and simpler to implement method, called the cluster track finder, has been developed, taking advantage of the small angular spread in the beam. This is based on clustering hits that are close in the global \(xy\) plane.

In addition to this, the Deterministic Annealing Filter (DAF) has been implemented. The DAF blurs the lines between track fitting and track finding. It is an iterative procedure that uses the information filter smoother to assign weights to all the hits in the planes. An initial weight must be assigned from a track finder.

### The combinatorial Kalman filter

Assuming a particle will create either one or zero measurements per detector plane, the information from an event in the test beam setup can be seen as a directed acyclic graph, where every hit is a vertex. A vertex can be connected to another through a directed edge. In this case, every vertex emits a directed edge to every vertex corresponding to a hit further downstream in the experiment. Such a graph is drawn in Figure 2.

A path is a sequence of edges that connect a set of vertices. The length of the path is the number of edges it contains, a path containing a single vertex is of length zero. The measurements created by a track would create such a path. This path can be of any length, and is not required to start in the first measurement plane, or to end up in the last.

The adjacency matrix, \(\mathbf{A}\), of a graph with \(n\) vertices is an \(n\times n\) matrix, where the matrix element \(a_{ij}\) is the number of edges connecting vertex \(i\) to vertex \(j\). The hits in the beam telescope form a graph where the adjacency matrix element \(a_{ij}\) is 1 in the case that vertex \(j\) is further downstream than vertex \(i\), and 0 otherwise. The number of possible paths of length \(l\) can be calculated by summing all the matrix elements in the matrix \(\mathbf{A}^{l}\). The total number of paths is \(\prod_{k}\left(N_{k}+1\right)-1\), where \(N_{k}\) is the number of hits in plane \(k\). There exists 728 distinct paths in the graph in Figure 2. Studying every possible combination of hits is impractical even at this hit density, and more efficient searches are needed.

The high detection efficiency of the EUDET telescope means that the probability of a real track in the detector creating a very short path is small. The probability of accepting a path not corresponding to a real particle track decreases with the length of the path. Only paths above some minimum length are considered acceptable track candidates, but this requirement alone does not sufficiently reduce the complexity. The graph in Figure 2 has 496 distinct paths containing four or more vertices.

The combinatorial Kalman filter is a heuristic search through the graph, where only edges likely to lead to an acceptable track are followed. The search starts at some vertex in the graph, and creates paths by following the edges to new vertices in depth-first. The recursive nature of the Kalman filter makes it possible to assess the likelihood of finding a good track by following an edge in the graph. This is done by calculating the \(\chi^{2}\) increment of including the connected vertex in a Kalman filter fit of the path, Eq. 32. If the \(\chi^{2}\) increment is above a cut-off value, \(\chi^{2}_{CKF}\), the edge is not followed, and the entire subgraph starting with the connected vertex is excluded. With a tight cut in the \(\chi^{2}\) increment, the complexity of the problem is greatly reduced.

The \(\chi^{2}\) increment can only be calculated when the path contains two or more vertices. To speed up the search further, the collimated nature of the particle beam is taken into account. Cuts in the angles of the straight line between the two first vertices makes it possible to exclude edges emitting from the first vertex in the search.

A path of length larger than zero can be split into subset paths, paths made up of a subset of the vertices in the path. To avoid reporting subset paths of an accepted track as solutions, the search starts by considering the edges emitting from a vertex \(v\) that skip the fewest measurement planes. If an edge passes the cuts, the search follows this edge until a track is accepted or every path in the subgraph is excluded. After returning to the vertex \(v\), further edges that skip planes are only considered if following edges that skip fewer planes has not lead to an accepted track.

The combinatorial Kalman filter has been implemented as a recursive function, that attempts to extend a path to a vertex in a measurement plane \(k\). The function arguments are a path containing one or more vertices corresponding to hits upstream of the plane, as well as the Kalman filter prediction based on the vertices in the path. The last vertex in the path is \(v_{i<k}\). The function performs the following tasks:

1. If every edge emitting from \(v_{i<k}\) has been excluded, and the path is of sufficient length, the function will be called in plane \(k=N_{p}+1\), where \(N_{p}\) is the number of planes in the experiment. The track quality of the fitted path is then checked with cuts in \(\chi^{2}/N_{\text{dof}}\). If the candidate passes the cuts, the track is accepted. The function then returns.
2. A Kalman filter prediction is made from the estimate in the previous plane, containing all measurements in the path leading to plane \(k\).
3. Every edge connecting \(v_{i<k}\) to a vertex corresponding to a hit in plane \(k\) is considered. All the edges that lead to a path that passes cuts in the angle or \(\chi^{2}\) increment are followed. Following an

Figure 2: The directed acyclic graph for an event with two hits per plane and six measurement planes. A hit is a vertex, and every vertex is connected with an edge to all vertices representing hits further downstream. Vertices are drawn as red dots, the edges are black arrows. The position of the vertices in the horizontal direction corresponds to the measurement plane of the hit, the position of the vertex in the vertical direction has no significance. The measurements created by a particle would form a path in this graph, containing anywhere from zero to six vertices.

edge means the function calls itself in plane \(k+1\) after updating the Kalman filter estimate, and extending the path with the new vertex.
4. If no vertex in the plane lead to the path being extended, the plane is skipped. This is only done if it is possible to obtain a path of sufficient length in the remaining planes. The function calls itself in plane \(k+1\) without updating the estimate with a hit or extending the path.
5. The function returns.

The search is started in every vertex corresponding to a hit in the first plane. In following planes, searches are started in every vertex corresponding to a hit that has not been included in an accepted track originating from a search started further upstream. This is done for all planes where it is possible to achieve a path of sufficient length.

Both the speed and accuracy of the method depend on whether the \(\chi^{2}\) increments follow a real \(\chi^{2}\) distribution. A poor description of the detector geometry, the amount of scattering encountered, or measurement uncertainties, makes optimal edge rejection harder.

### Deterministic Annealing Filter

The DAF is an extension of the Kalman filter, that deals with imperfections in track finding. While the combinatorial Kalman filter uses the \(\chi^{2}\) increments of a Kalman filter to accept or reject hits, the DAF uses smoothed predictions containing information from all the hits in the planes.

The DAF is an iterative procedure that assigns weights to all the hits. It alternates between using the information filter smoother for fitting the set of weighted hits, and improving the weights based on the previous fit. The fitter needs an initial set of weights for the hits, which is achieved by setting the weight of all the hits that the track finder has identified as belonging to the track to one, and all the other weights to zero. If more than one hit per plane is assigned a weight in the track finder, the weights are normalized so that the total weight in the plane is one.

#### 3.2.1 Weight assignment

The \(i\)th hit in plane \(k\), \(\mathbf{m}_{k,i}\), is assigned the weight

\[w_{k,i}= \frac{\exp(-\chi_{k,i}^{2}/2T)}{\exp(-\chi_{DAF}^{2}/2T)+\sum\limits_ {j}\exp(-\chi_{k,j}^{2}/2T)}, \tag{35}\]

where \(\chi_{k,i}^{2}\) is calculated from the smoothed predictions at the plane.

\[\chi_{k,i}^{2}= (\mathbf{m}_{k,i}-\mathbf{H}\mathbf{x}_{k}^{*})^{T}(\mathbf{H} \mathbf{C}_{k,i}^{*}\mathbf{H}^{T}+\mathbf{V}_{k,i})^{-1}(\mathbf{m}_{k,i}- \mathbf{H}\mathbf{x}_{k}^{*}) \tag{36}\]

If the smoothed prediction is Gaussian and correctly estimated, the measurement uncertainties are known and Gaussian, and the measurement truly belongs to the track, \(\chi_{k,i}^{2}\) should follow the \(\chi^{2}\) distribution with two degrees of freedom.

The weight depends on a cut-off value, \(\chi_{DAF}^{2}\), which is the \(\chi^{2}\) value that will obtain a weight of 0.5, and a "temperature", \(T\), that determines how fast the weight will drop off around the cut-off. The weight function at different \(T\) is shown in Figure 3a. The term \(\sum\exp(-\chi_{k,j}^{2}/2T)\) in the denominator introduces competition between hits, as illustrated in Figure 3b.

The DAF iterates through a predetermined set of temperatures, generally starting at a high temperature and ending up at a low temperature, with a harder cut-off, after several iterations.

#### 3.2.2 DAF update and prediction

The information filter update becomes a sum over all the weighted hits in the plane

\[\mathbf{W}_{k|k} =\mathbf{W}_{k|k-1}+\sum_{i}w_{k,i}\mathbf{H}^{T}\mathbf{V}_{k,i}^ {-1}\mathbf{H} \tag{37}\] \[\mathbf{i}_{k|k} =\mathbf{i}_{k|k-1}+\sum_{i}w_{k,i}\mathbf{H}^{T}\mathbf{V}_{k,i}^ {-1}\mathbf{m}_{k,i}. \tag{38}\]

In some cases it is possible to improve the transport matrices, \(\mathbf{F}_{k}\), used in the information filter predictions. If one of the detector planes in the experiment is tilted such that it is not orthogonal to the \(z\)-axis, the propagation distance, \(\Delta z\), depends on the position and direction of the track. Since the explicit state of the track is made available to estimate the hit weights, it is possible to also improve the \(\Delta z\) estimated for all the propagation matrices between the iterations in the DAF.

A good first estimate of the \(z\)-position of a plane is the \(z\)-position of the hit with the largest weight from the track finder.

#### 3.2.3 DAF test statistics

Test statistics can be calculated for the DAF similar to the standard Kalman filter.

\[\chi^{2} =\sum_{k=1}^{n}\sum_{i=1}^{m_{k}}w_{i,k}\mathbf{r}_{i,k|k-1}^{T} \mathbf{R}_{i,k|k-1}^{-1}\mathbf{r}_{i,k|k-1} \tag{39}\] \[N_{\text{dof}} =-4+2\sum_{k=1}^{n}\sum_{i=1}^{m_{k}}w_{i,k}, \tag{40}\]

where \(n\) is the number of measurement planes, and \(m_{k}\) is the number of hits in plane \(k\).

Since the weights, and the number of degrees of freedom, in this case are not integers, this is not a true \(\chi^{2}\) distribution. But if the temperature and cut-off for the weight function are tuned such that hits tend to get a weight very close to one, or very close to zero, the fitted \(\chi^{2}\) will be close to the theoretical \(\chi^{2}\) distribution with the number of degrees of freedom rounded to the nearest integer.

Figure 3: Weight function as a function of measurement \(\chi^{2}\) at different temperatures with and without a competing hit. \(\chi^{2}_{\mathbf{m}}\) is the \(\chi^{2}\) of the competing hit, \(\chi^{2}_{DAF}\) is the cut-off value.

### Cluster track finder

The DAF can reject outliers, pick up new hits that are close to the track, and deal with more than one hit per plane. This means that the requirements for accuracy in the track finder can be reduced.

A crude track finder that is very simple to implement has been developed for the test beam. The track finder works by projecting all hits to the first measurement plane using the nominal beam angle. Then a cluster finder groups all hits that are closer to any other hit in the cluster than a given radius. All hits in the cluster are then given a weight of 1, all hits outside the cluster get an initial weight of 0. If more than one hit in the same plane gets a weight of 1, the weights in the plane are normalized such that the sum is one. After assigning weights to the hits, the track is fitted with the DAF.

## 4 Simulation experiments

The implemented track reconstruction methods were tested using a simple simulation model, with a geometry and detector response similar to that of the test beam experiments with the EUDET telescope in the SPS \(\pi^{+}\) beam, with three ATLAS pixel planes as devices under test.

The objects of the simulation experiments are to validate the information filter and the combinatorial Kalman filter, to see if the DAF is able to improve the tracks from the combinatorial Kalman filter, and to see if the cluster track finder followed by the DAF can compete with the combinatorial Kalman filter followed by the DAF.

This simulation is not intended as a complete and realistic model for the beam telescope or the ATLAS pixel devices.

### Simulation model

The simulation model consists of nine planes orthogonal to the \(z\)-axis, and placed at the \(z\) positions in Figure 1. Each plane has a sensitive area of 5 mm \(\times\) 5 mm.

Each simulated particle is initialized with a position that is uniformly distributed within a 3 mm \(\times\) 3 mm square in the center of the sensors. The initial direction tangents are independently drawn from Gaussian distributions with a mean of zero and a standard deviation of \(1\times 10^{-4}\), similar to conditions observed in the SPS test beam experiments.

The beam energy is 100 GeV throughout the experiment, and all the planes have a thickness of \(\frac{X}{X_{0}}=0.01\). The amount of scattering a particle undergoes in a plane is drawn from a Gaussian distribution with a mean of zero and a standard deviation calculated from the Highland formula, Eq. 5.

The measurements errors are Gaussian with uncorrelated errors in \(x\) and \(y\). The EUDET measurements have a standard deviation of 4.3 \(\upmu\)m in both directions. The ATLAS pixel planes have a standard deviation of 400 \(\upmu\)m/\(\sqrt{12}\) in the \(x\)-direction, and 50 \(\upmu\)m/\(\sqrt{12}\) in the \(y\)-direction.

Noise hits are simulated by randomly placing hits uniformly within the 5 mm \(\times\) 5 mm sensitive area of the sensors. This is a larger area than the area where the initial track states are generated, to prevent tracks from scattering out of the area where noise hits are simulated, and complicating the analysis. The performance of the methods were tested at different noise densities.

The simulated noise is distributed in a smaller area than that of the real EUDET sensors. The noise density rises much quicker with the number of noise hits per plane in simulated data than what it would do in real test beam data. This was done to reduce the time needed to study very high noise densities.

### Validating the information filter implementation

To validate the information filter implementation, events with single tracks, 100% detection efficiency, and no noise hits were simulated. In this case, track finding is trivial. The quality of the track fits arethen tested by studying the \(\chi^{2}\) distribution.

The geometry, amount of material, and measurement uncertainties are the same in the simulation and the reconstruction. In this case, a perfect \(\chi^{2}\) distribution is an indication that the optimal parameters are found, and that the stochastic processes are treated correctly in the information filter.

The probability of observing a \(\chi^{2}\) value that is equal to, or greater than the fitted \(\chi^{2}\) value, given that the observations truly are \(\chi^{2}\) distributed, is called the p-value. To better visualize how well the fitted \(\chi^{2}\) match the real \(\chi^{2}\) distribution, the p-values are also plotted. If the fitted \(\chi^{2}\) really does follow the \(\chi^{2}\) distribution, the p-values should follow a uniform distribution. The distributions are shown in Figure 4.

### The combinatorial Kalman filter

To challenge the combinatorial Kalman filter, noise hits as well as detector inefficiencies were introduced to the simulation. Each measurement plane was simulated to have a 95% detection efficiency, and the track finder was tested on data with an increasing number of noise hits per plane. Only the simulated hits in the EUDET planes were used in the track reconstruction. The three ATLAS pixel planes were treated as dead material planes.

The cumulative binomial probability of a particle generating four or more hits in the six detector planes with 95% detection efficiency per plane is approximately 99.78%. As the probability of finding ghost tracks is greatly increased if allowing tracks with only three hits, the track finder is at most allowed to skip two measurement planes per track.

The cuts in the direction tangents between the two first hits were set to \(|dx/dz|<0.0005>|dy/dz|\), which are relatively conservative.

Only tracks with \(\chi^{2}/N_{\text{dof}}<6.0\) were considered. If more than one track was found in an event, the track with the lowest \(\chi^{2}/N_{\text{dof}}\) was used in the analysis.

To study the quality of the track finder, the following quantities calculated using simulation truth were studied:

* **Ghost tracks:** The percentage of events where a track was accepted where more than half the included hits are noise hits.
* **Tracking efficiency:** The percentage of events where a track that is not a ghost track is accepted.

Figure 4: Track quality plots from 1 million simulated tracks, with a perfect geometry description. The empirical distributions are in gray (), the theoretical distributions are indicated in red (\(-\)). Both plots are a representation of the same data. The p-value plots are more sensitive to deviance from the model, and will be used to present the \(\chi^{2}\) distributions in the following.

* **Missed hits:** The percentage of real measurements that are not included in the fitted tracks. Measurements from events where a ghost track, or no track at all, was accepted are not included in the calculation.
* **Contamination:** The percentage of noise hits among all the hits included in accepted tracks, excluding ghost tracks.
* **Precision:** To measure the precision of the track sample, the generalized variance [8] of the estimated track parameters at the first ATLAS pixel plane has been used. The generalized variance is the determinant of the empirical covariance matrix, calculated from the difference between the estimated and the true parameters at the plane.

These figures of merit are shown in Figure 5 as functions of increasing noise density, at varying cut-off values in the \(\chi^{2}\) increment for the combinatorial Kalman filter. The inverse generalized variance of the combinatorial Kalman filter with \(\chi^{2}_{CKF}=36\) and 0 noise hits was used as a normalization factor for the precision.

At very low \(\chi^{2}_{CKF}\), the probability of missing hits is high. This reduces the tracking efficiency. With a lower average number of hits in the tracks, the capability of separating real measurements from fake hits is reduced.

As \(\chi^{2}_{CKF}\) increases, the performance reaches a plateau. A hit with a very large \(\chi^{2}\) increment will cause the final track to fail the \(\chi^{2}/N_{\rm dof}\) cut, leading to the hit being rejected later on in the process. This is a much slower way of rejecting hits than having an appropriate \(\chi^{2}_{CKF}\) cut.

Figure 5: Figures of merit for the Combinatorial Kalman filter as a function of an increasing number of simulated noise hits per plane. The dashed line that lies in the region where the performance reaches a plateau, represents a cut in the \(\chi^{2}\) increment, \(\chi^{2}_{CKF}\), of 36. This will be used for comparison with the other reconstruction methods. The figures of merit are calculated from samples of 1 million tracks.

### Combinatorial Kalman filter followed by the DAF

To compare the performance of the combinatorial Kalman filter followed by a DAF fit to the combinatorial Kalman filter alone, the same quantities as in the previous section were used, but adapted to deal with the weighted hits. For the DAF, the contamination is the percentage of the total weight that is assigned to noise hits. The total weight is the sum of all the weights assigned to hits. A missing hit is a real measurement assigned a weight less than 0.5. The requirement of having three or more hits, is changed to requiring \(N_{\text{dof}}>1.5\). A ghost track is a track where more than half of the total weight is assigned to noise hits.

The results are presented in Figure 6, where the performance is shown for different \(\chi^{2}_{DAF}\) for the weighting function. The more accurate \(\chi^{2}\) calculated from smoothed predictions lead to decreased contamination, reduced percentage of missing hits, and improved precision for the DAF fitted tracks.

For reasonable \(\chi^{2}_{DAF}\), the tracking efficiency and the number of ghost tracks are approximately the same as for the combinatorial Kalman filter without the DAF. If \(\chi^{2}_{DAF}\) is too high, the probability of including noise hits that bring the \(\chi^{2}/N_{\text{dof}}\) of the track fit above the cut value is increased, and the tracking efficiency is reduced.

The DAF used 6 iterations, with decreasing temperatures of 25, 20, 14, 8, 4 and 1. These values were selected by studying simulated data with 20 noise hits per plane, and reconstructed with \(\chi^{2}_{CKF}=\chi^{2}_{DAF}\) = 36. The values are a compromise between high tracking efficiency and a low probability of missing hits. The precision was not improved by including lower temperatures, or iterating several times over the lowest temperature.

The weights assigned to each simulated hit is plotted in Figure 7. With no noise hits, the weights all follow the weight function from Eq. 35. With added noise, the hits start competing for weight, and

Figure 6: Figures of merit for the combinatorial Kalman filter followed by a DAF fit as a function of an increasing number of simulated noise hits per plane for varying \(\chi^{2}\) cut-off values, \(\chi^{2}_{DAF}\). The dashed line indicates the performance of the combinatorial Kalman filter without a DAF fit with \(\chi^{2}_{CKF}=36\). This is the same as the dashed line in Figure 5. The figures of merit are calculated from samples of 1 million tracks.

the picture becomes more complex. The minimum weight that can be assigned to a hit is limited by the weight function with a competing hit with \(\chi^{2}=0\). Note that the weights are calculated before the final track fit, and the \(\chi^{2}\) is calculated after the final fit.

### The cluster track finder followed by the DAF

The performance of the cluster track finder followed by a DAF fit is shown in Figure 8. Every cluster with 3 or more hits was fitted with the DAF. The cluster radius needs to be large enough to connect the hits generated by the particle, but if the clusters become too large the DAF is not able to recover. When the clusters become too large, the performance of the method breaks down as the noise density increases.

With a larger spread in initial angular direction, or with more multiple scattering, the method would break down at lower noise densities.

The tracking efficiency is lower than that of the combinatorial Kalman filter, but above 99% even at very high noise densities. The other quantities behave as the combinatorial Kalman filter followed by the DAF. As all the tracks are fitted with the same \(\chi^{2}_{DAF}\), the contamination and amount of missing hits do not vary much with the cluster radius.

At high noise densities, a large number of clusters can be found. As each cluster must be fitted with the DAF, the method is somewhat slower than the combinatorial Kalman filter. Even at the unprecedented noise densities tested here, the speed of the track finding would not be an issue at the data rate produces by the EUDET telescope.

Finding the radius that maximizes the number of accepted tracks appears to be a good way of calibrating the method.

### Comparison of the methods

To test whether the track states are estimated correctly in noisy conditions, the smoothed predictions in the first plane were compared to the true states of the simulated particles, \(\mathbf{x}^{true}\). The estimated covariance matrix of the smoothed prediction should describe the uncertainties of this difference. The \(\chi^{2}\) of the difference is

\[\chi^{2}=(\mathbf{x}^{true}-\mathbf{x})^{T}\mathbf{C}^{-1}(\mathbf{x}^{true} -\mathbf{x}), \tag{41}\]

Figure 7: The \(\chi^{2}\) versus the assigned weight after the final DAF fit. The weights are calculated with \(\chi^{2}_{DAF}=25\) and \(T=1\). The vast majority of hits in the visible \(\chi^{2}\) range are assigned a weight of one, and lie in the red regions of the plots.

with four degrees of freedom. Figure 9 shows the p-values of the \(\chi^{2}\) distribution for the combinatorial Kalman filter, the combinatorial Kalman filter followed by the DAF, and the cluster track finder. The combinatorial Kalman filter ran with a \(\chi^{2}_{CKF}\) of 36, the DAF with \(\chi^{2}_{DAF}\) of 36, and the cluster finder with a radius of 100 \(\upmu\)m. The tracks fitted with the DAF have p-values that follow a uniform distribution. The p-values for the tracks fitted without the DAF has a small excess close to 0, meaning very high fitted \(\chi^{2}\).

The combinatorial Kalman filter has a tracking efficiency very close to the theoretical 99.78% for tracks with four or more hits. The DAF offers improved noise rejection, and is able to produce tracks with less contamination and less probability of missing real hits, compared to the combinatorial Kalman filter alone.

The cluster track finder has a lower tracking efficiency than the combinatorial Kalman filter implementation, but still has a high tracking efficiency up to noise densities much higher than what has been observed in test beam data. The main advantage of this method is that it is very simple to implement compared to the combinatorial Kalman filter.

Real measurements become harder to separate from noise hits with more scattering and more noise hits. An event with several real tracks will behave differently from a single track with random noise hits. The optimal cut values for the combinatorial Kalman filter and the DAF will vary with these conditions, and a much more realistic simulation would be needed to tune the parameters for real data.

## 5 Track quality in real data

To test the implementation on real data, a sample consisting of 40000 tracks from a 120 GeV \(\pi^{+}\) beam at CERN SPS was used. The data were recorded in November of 2010.

Figure 8: Figures of merit for the cluster track finder followed by the DAF with \(\chi 2_{DAF}=36\) as a function of an increasing number of simulated noise hits per plane. The radius is the maximum distance between hits in a cluster. The dashed line represents the combinatorial Kalman filter with \(\chi^{2}_{CKF}\) cut of 36.This is the same as the dashed line in Figure 5. The figures of merit are calculated from samples of 1 million tracks.

### Test statistics

In the simulation, the Gauss-Markov assumptions hold perfectly. For real data, this is not necessarily the case. For the measurements to be unbiased, the geometrical description must match reality. For the normalized residuals to have the same variance, the amount of material the particle passes through must be correctly accounted for, and the uncertainties of all the measurements must be known.

To obtain a correct description of geometry of the measurement planes, the Eutelescope package uses Millepede II4. To estimate the amount of material in the experimental setup, as well as the resolution for all the measurement planes, the method described in [9] was used. After this, the fitted \(\chi^{2}\) of the track sample closely follows the theoretical distribution, as shown in Figure 10.

Footnote 4: see http://[http://www.desy.de/~blobel/mptalks.html](http://www.desy.de/~blobel/mptalks.html)

### Error correlation

The third Gauss-Markov assumption is that the measurement errors are uncorrelated. The Kalman filter treats measurements as if they are a function of the true position of the particle, and smeared by a stochastic variable, \(\mathbf{\varepsilon}\).

\[\mathbf{m}_{k}=\mathbf{H}x_{true}+\mathbf{\varepsilon} \tag{42}\]

The covariance matrix of \(\mathbf{\varepsilon}\) is the covariance matrix of the measurement.

The ATLAS pixel devices included in the real data have cells that are 50 \(\upmu\)m\(\times\)400 \(\upmu\)m. Most clusters in the test beam do not extend beyond one 400 \(\upmu\)m wide column, so the position estimates tends to be in

Figure 10: P-value plots for real 120 GeV \(\pi^{+}\) data before numerical alignment, after numerical alignment, and after estimation of material and resolution. Only tracks with hits in all detector planes have been used to create the plots. The distributions are normalized so that the area is 1.

Figure 9: P-values of the differences between the true, simulated parameters and the estimated track parameters with 20 noise hits per plane. The distributions are normalized so that the area is 1. The p-values are for the combinatorial Kalman filter alone (CKF), the combinatorial Kalman filter followed by the DAF (CKF + DAF), and the cluster track finder (CLU). The small excess near 0 in the combinatorial Kalman filter without the DAF is likely due to the higher contamination.

the center of the column. The measurement errors then depend more on the position of the particle within the pixel column, than the stochastic nature of the signal formation in the sensor. These measurements are also highly non-Gaussian, as the position of particles within the cell is close to a uniform distribution in the experiment.

If the columns of two ATLAS pixel sensors are aligned so they have a large overlap in the collimated beam, the errors will be correlated, as can be seen in Figure 10(b). Including correlated measurements in the track fit can make the true resolution of the smoothed predictions worse for all the planes, even when the fitted \(\chi^{2}\) are still very close to the theoretical distribution.

In the short pixel direction, the problem is smaller, since the stochastic nature of the measurement errors are larger compared to the pitch.

## 6 Summary and conclusions

The Kalman filter has been implemented in the information filter formulation for straight line track fitting for data taken with the EUDET beam telescope. The implementation has been used in a combinatorial Kalman filter for track finding, as well as in an implementation of the DAF. The methods take advantage of the collimated beam, and a very simple track model.

In simulated data, with a sensor detection efficiency of 95%, and requiring 4 or more hits per track, the combinatorial Kalman filter is able to find close to the theoretical limit of 99.78% of all the tracks at much higher noise densities than what is common in real data.

The DAF is able to improve track finding by increasing the probability of rejecting noise hits as well as reducing the probability of rejecting a real measurement. The precision is improved compared to the combinatorial Kalman filter alone.

A very simple to implement track finder based on a cluster finding algorithm and the DAF has been implemented. The track fitter has a lower tracking efficiency than the combinatorial Kalman filter, but performs well at low noise densities. The fitted tracks are of the same quality as tracks fitted with the combinatorial Kalman filter followed by the DAF.

Due to the highly collimated beam in the SPS test beam, error correlations in the long pixel direction can occur between ATLAS pixel planes. Including correlated measurements in the fit can make the precision of the fit worse.

After numerical alignment and numerically obtained estimates of material amounts and sensor resolutions, the fitted \(\chi^{2}\) of tracks from real data is very close to following the \(\chi^{2}\), even with non-Gaussian, correlated measurement errors in the ATLAS pixel devices.

## Appendix A Appendix: Speed optimization of the fitter

The information filter described here was used to implement the material and resolution estimation method described in [9]. The method requires the track sample to be refitted several thousand times, and a fast track fitter is needed.

Running two Kalman filters with two dimensions, one for \(x\) and \(dx/dz\) and one for \(y\) and \(dy/dz\), is faster than running one with all four parameters. Covariance between \(x\) and \(y\) is introduced if the measurement covariance matrices have non-zero off-diagonal elements. The pixel devices give uncorrelated measurements in \(x\) and \(y\) in the local frame. But if the device is rotated around the \(z\)-axis, there is correlation between \(x\) and \(y\) in the global frame of the track fitter.

Since the misalignment in the rotation around the \(z\)-axis should be small, the corrections to the measurement covariance matrices from the alignment constant have been ignored to gain speed and simplicity.

Using 32-bit floating point numbers instead of 64-bit double precision floating point numbers, and using the single instruction, multiple data (SIMD) instruction sets available in modern computer architectures can improve the speed of track fitting [10]. The implementation described here has been created using the linear algebra package Eigen5 that uses explicit vectorization, and using 32-bit floating point numbers.

Footnote 5: see [http://eigen.tuxfamily.org/](http://eigen.tuxfamily.org/)

## References

* [1] R. Fruhwirth. Application of Kalman filtering to track and vertex fitting. _Nuclear Instruments and Methods in Physics Reasearch A_, 262:444-450, 1987.
* [2] R. Mankel. A concurrent track evolution algorithm for pattern recognition in the HERA-B main tracking system. _Nuclear Instruments and Methods in Physics Reasearch A_, 395:169-184,1997.
* [3] R. Fruhwirth and A. Strandlie. Track fitting with ambiguities and noise: A study of elastic tracking and nonlinear filters. _Computer Physics Communications_, 120:197-214, 1999.
* [4] I. Rubinsky. An EUDET/AIDA pixel beam telescope for detector development. _Physics Procedia_, 37, 2012.
* [5] V. Highland. Some practical remarks on multiple scattering. _Nuclear Instruments and Methods in Physics Reasearch_, 129:497-499, 1975.
* [6] W.W. Hager. Updating the Inverse of a Matrix, _SIAM Review_, 31:221-239, 1989.
* [7] A. Sen and M. Srivastava. Regression Analysis, _Springer_, 1990.
* [8] S. S. Wilks. Certain generalizations in the analysis of variance Biometrika 24 (3-4): 471-494, 1932
* [9] H. Gjersdal, Fruhwirth, M. Nadler and A. Strandlie. Optimizing track reconstruction by simultaneous estimation of material and resolutions. _Journal of Instrumentation_, 8, 2013.
* [10] S. Gorbunov, U. Kebschull, I. Kisel, V. Lindenstruth, Volker and W.F.J. Mueller. Fast SIMDized Kalman filter based track fit. _Computer Physics Communications_, 178:374-383, 2008.
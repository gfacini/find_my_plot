[MISSING_PAGE_FAIL:1]

Introduction

The display and the interactive reconstruction of real data for any possible experimental setup based on ATLAS-like muon detectors can be realized with AMDBSIMREC, PERSINT and MUONBOX. This has been achieved for the two following setups :

* The CERN-H8 Muon Testbeam of year 2001
* The NIKHEF BOL Cosmic Ray Test Stand

This document describes how these suite of programs are used to display and reconstruct the H8 2001 testbeam data. In Section 2 is given an overview of the algorithms at work, with special emphasis on the PERSINT visualization program. In Section 3, the experimental setup of the H8 2001 Testbeam is presented. The description of this setup using a geometrical database in the AMDB_SIMREC format is discussed in Section 4. The structure of event hit files is presented in Section 5. The calibration applied to these raw event hits is then explained in Section 6.

Examples of event display and reconstruction are then proposed : in Section 7 are presented results obtained with the BIL/BML chambers particular configuration. The reconstruction is confronted with simple event and more complex topologies. In Section 8 are shown results obtained with the BOS/BIL/BML setup. In Section 9, the comparison of the results obtained here with existing packages is briefly presented. The utilization of MUONBOX in standalone mode for large-statistics analysis of testbeam data is discussed in Section 10.

## 2 Presentation of AMDBSIMREC, MUONBOX and PERSINT

### AMDBSIMREC

The AMDBSIMREC package is an ensemble of subroutines which reads the geometrical database compliant with the AMDB_SIMREC format and fills the appropriate memory structures for utilization by PERSINT and MUONBOX. This package was developed to fulfill the needs of the simulation and reconstruction of muon events in the ATLAS Muon Spectrometer [1]. It can be used to describe any experimental setups based on ATLAS-like muon detectors.

The database is organized in terms of objects or structures. The database objects are stacked in a flat ascii file, a technology which provides the maximum ease-of-use and clarity for developers and end-users. Given objects contain pointers to objects of lower-level in the hierarchy of an overall tree-like structure. This object-orientedness of the database, combined with an architecture reproducing as closely as possible the symetries of the Muon System for which it is originally designed, results in a compact description ot its geometry. An example of database employed for the H8 Testbeam is presented in Section 4.

### MUONBOX

The MUONBOX program was developed to cope with the challenging task of the muon reconstruction in the ATLAS detector [2]. The specificities of the experimental environment in which muon reconstruction must be realized are the following :

* A large and complex muon detector system
* A very inhomogeneous magnetic field
* Important levels of physics background In this context, the aim is to reach the highest efficiency with standalone momentum resolution of a few % at 10-100 GeV/c and \(\sim\)10% at 1 TeV/c. The algorithm proceeds sequentially according to the following scheme :

* Identification of regions of activity
* Reconstruction of local segments
* Combination of segments to form candidate tracks
* Global re-fit of candidate tracks

Details on the functionning of the algorithm can be found in [3] and [4]. The reconstruction of events in the context of the Testbeam Data follows the same fundamentals.

### Persint

#### 2.3.1 General Description

The PERSINT program is a non-commercial product developed by the Saclay Muon Software Group primely for the ATLAS collaboration [5]. It is designed for the three-dimensional representation of objects and for the interfacing and access, in a fully interactive way, to a variety of independent applications, such as Event Display or visualization of Geometric Databases. As such, it is fully interfaced to A MDBSIMREC and MUONBOX. The developments presented in this note are available for PERSINT version 2.06 and higher. A Manual describing the functionning of this program can be found in [6] for version 2.06. The installation of the program is explained in appendix.

The display of objects and the interactivity between the user and objects or applications is realized through the use of the HIGZ package [7]. Facilities are provided for the spatial navigation and the definition of the visualization properties, allowing to interactively set the viewing and viewed points, and to obtain the desired perspective. In parallel, applications may be launched through the use of dedicated interfaces, such as the interactive reconstruction and display of physics events.

The general configuration obtained when running the program is illustrated in Figure 1. It is based on two windows with which the user can interact : the Command Window and the HIGZ Display Window. The Display Window is dedicated to the three-dimensional visualization of volumes and to the representation of graphical interfaces. The main graphical interface is the Navigator, which appears automatically in the right-bottom corner of the Display Window (see Figure 1).

#### 2.3.2 The Navigator Interface

The Navigator is the master interface to the various graphics applications provided by PERSINT and contains the navigation facilities necessary to survey the entire detector space. The interface consists in an assembly of Push Buttons and clickable 1D and 2D gauges. The Push Buttons are used to launch lower level applications. Gauges are used to scale navigation and visualization actions. The user can get online help and indications concerning these Push Buttons and gauges by simply clicking them with the mouse middle button. The Navigator facilities are detailed in Figure 2. The navigation through the detector space and the modifications of the visualization properties are obtained in two steps : first one has to define an action by clicking with the mouse left button on the available gauges allowing for instance to move forward/backward or to displace the viewing/viewed points. Then the action is realized by clicking the "**GO**" Push Buttons.

The access to interfaces is obtained by a simple click on their associated blue-colored Push Buttons, with the mouse left button. In the case of Figure 1, the user has clicked the "Rec." Push Buttons, which has resulted in the opening of the Event Display and Reconstructionright-top corner of the Display. Using this interface, event objects can be selected for display, as explained in Section 2.3.4. The Navigator also allows access to the interface to the AMDB_SIMREC geometrical database ("AMD" Push Button).

#### 2.3.3 Input files and databases

The Display of events requires to load a geometrical database of the AMDB_SIMREC type and an input file containing the hits. If such a database is present in the working directory under the "default_amdb_simrec" name, it is loaded by default at the initialization of the program. Similarly, if a hit file exists under the "default_muhits" name, it is loaded by default at the initialization of the interface.

The reconstruction of events requires to load a magnetic field database and a file containing the user's directive. These are loaded by defaults if found in the working directory under the "default_bmagatlas" and "default_muonbox_data_cards" names. For what concern the magnetic field in the particular case of H8 testbeam reconstruction, where no field is used, it is internally set to a negligeable value in MUONBOX.

Figure 1: PERSINT at run-time, featuring the Command Window and the HIGZ Display Window, with the Navigator Interface and the Event Display and Reconstruction Interface launched. The display shows the three-dimensional representation of a typical H8 Muon event.

Figure 3: The Interactive Reconstruction and Event Display Interface

Figure 2: The Navigator Interface

#### 2.3.4 The Event Display and Reconstruction Interface

The interactive reconstruction and event display application of PERSINT allows the reading of event hit files, the visualization of these hits, and the reconstruction of the event through coupling to the MUONBOX program.

The application is launched from the Navigator by clicking the "**Rec**" Push Button. The Reconstruction Interface, presented in Figure 3, pops-up on top of the Navigator. Through this interface, the user can choose the event number for display using a pair of scales and obtain the visualization of the event by clicking the "**Cur. Ev.**" Push Button. Another possibility is to use the "**Next Ev.**" Push Button to visualize the next event in the event file.

The details of the event visualization can be defined using a series of Push Buttons. Most of these objects are specific to the Muon System (chambers, strips, tubes). Once the event is displayed, the user can navigate at will around the event objects using the Navigator facilities and add or remove other volumes loaded from the geometrical database.

By default, each visualization of a new event is done from a predefined perspective. However, when going from one event to another, it is possible to retain the current visualization properties by clicking the "Store Visualization properties" Push Button of the Interface.

#### 2.3.5 Interface to MUONBOX

Each released version of PERSINT is interfaced to a given version of MUONBOX. The version number is specified in the command window when running the reconstruction. For PERSINT 2.06, the corresponding MUONBOX version is 6.04.39.

Clicking anywhere on the Interface ensures the initialisation of MUONBOX, if not already done. The reconstruction of an event is engaged by clicking the "**Mu. Rec.**" Push Button. The event is reconstructed according to the specifications imposed by the MUONBOX data card file. The results of the reconstruction are displayed on a dedicated window that pops-up beside the Navigator (see e.g. Figure 1). Informations specific to every reconstructed track are given, labelled by a number. On the event display are shown the reconstructed candidate tracks with their associated labels. Additional informations are printed in the command window, the detail of which can be set through the data card file.

Tube hits on display are attributed with the following colour code : before reconstruction, muon hits are shown in red. After reconstruction, hits belonging to a candidate track are identified in black, hits belonging to a local segment not associated with a candidate track are shown in blue; any other hits are shown in red.

The interfacing between MUONBOX and PERSINT allows to act interactively on the event characteristics to understand which role they play. For instance, a hit tube can be clicked, and then removed using the "Move Volume Window" which appears on top of the display. Then, when re-running the reconstruction algorithms, this removed tube will not be taken into account.

## 3 The Experimental Setup of the H8 2001 Muon Testbeam

For the H8 2001 Testbeam, several setups were employed, involving one to three MDT chambers simultaneously, with different orientations relative to the beam axis. Informations on the setups used and the experimental results can be found in [8]. Data were taken with various conditions of gas flow, gas composition, high voltage, and chamber orientation with respect to the beam. The data utilized in the present study were taken in standard ATLAS conditions.

Details on the beam characteristics can be found in [9]. Muon energy ranged from 50 GeV to 1 20 GeV. All runs used here were taken at 100 GeV.

[MISSING_PAGE_FAIL:7]

[MISSING_PAGE_FAIL:8]

for such simple setups as the testbeams. The database which is given here can be considered as a starting point for the setup geometry, which can receive feedback from the reconstruction through an iterative process. This has already benefitted to global parameters like the adjustment of the full chamber angles with respect to the beam (see Section 10).

This AMDB_SIMREC database is a compact and simple object which users can modify at will to tune parameters. Note however that a fixed format is used, which must be respected for proper reading by the AMDB SIMREC routines.

## 5 Event Hit Files

An event hit consists in the geometrical indices and signal informations associated to an individual detector channel for which some data has been recorded.

The hits are obtained by producing ascii files with the rddaq.c program, which is equivalent to the reading routines of the CALIB program [13]. This program reads the original binary files recorded by the DAQ system, and dump a hit file which respects the AMDBSIMREC index scheme. As explained in the previous section, the signals registered by the tracker are taken into account as RP C-like hits.

An example of event hit file is laid out below (event 11, run 2113) :

NEW EVT 11

[MISSING_PAGE_POST]

TRI BML 3 -1 1 1 2 2 6 TRI BML 3 -1 1 1 3 2 7 TRI BML 3 -1 1 1 1 9 TRI BML 3 -1 1 1 2 1 9 TRI BML 3 -1 1 1 3 1 9

END EVT

A hit is attributed with one line, in which the informations are coded as follow :

1) hit type : TUB for a MDT hit, TRI for a tracker hit

2) chamber type : must be one of the AMDB_SIMREC object

3) octant ID : must respect the AMDB_SIMREC Jff positioning scheme

4) Z-pos ID : must respect the AMDB_SIMREC Jzz positioning scheme

5) station object ID : must respect the AMDB_SIMREC Io station scheme

for TUB objects :6) layer ID
7) tube ID
8) drift time information
9) TD C ID
10) TDC channel ID

for TRI objects :

6) RPC-specific index : used for flipping internal structure (always 1 for H8)
7) sensitive layer ID : 1 to 3
8) type of channel ID : 1 for S-channel, 2 for Z-channel
9) channel ID

As it can be seen, hit files have a simple structures. The reading programs of the original binary files can be easily adapted to produce such files. Though being formatted in the example above, it is possible to provide hits in free format to MUONBOX.

## 6 Calibration

The drift time value given in the event hits is a raw information which necessitates some level of calibration. This is done by MUONBOX internal facilities.

The first step is to substract the T0 value of the TD Cs. Rough values are obtained by histogramming the TDC spectra and making an approximate evaluation of the risetime (see Figure 4). The value are then stored in a table in MUONBOX for application to the raw data.

The second step is to apply the r-t relationship which allows determination of the drift radius. This relationship is worked out by the CALIB program [13], and presented in Figure 4. This relationship is stored in a table that the program loads at initialization. The corresponding file is r_t_calib_h8, and must be present in the working directory. For a given value of drift time, MUONBOX performs a linear interpolation between the two adjacent tabulated value of the relationship to determine the drift radius.

Figure 4: TDC spectrum (TDC 1, run 2113) and r-t relationship used for calibration.

It has to be noted that there is full latitude in refining the above calibration steps. Also, it is possible to give as input hit file pre-calibrated data for direct visualization and reconstruction. For example this could be done after the full calibration procedure of CALIB.

Finally, the MUONBOX program has internal facilities for applying corrections to the various systematics involved in the drift-time measurements - propogation along the wire, T.o.f. effect, Lorentz angle - but in the case of the present setup, none is applied. The sensitive area illuminated by the muon beam is indeed small (\(10\times 10\) cm\({}^{2}\)) with respect to the chamber dimensions, with beam direction normal to the wire.

## 7 Event Display and Reconstruction of BIL/BML data

In this section are presented some typical examples of display and reconstruction of event recorded during the H8 Muon Testbeam of year 2001. Events shown here are taken from run 2113, which was performed in standard ATLAS conditions, with two electronic boards per multilayer (i.e. 12 readout tubes per layer for BIL and 16 for BML).

An example of a clean muon track is shown in Figure 5. The geometrical setup is described by the AMDB_SIMREC database presented p. 6, while the event hits correspond precisely to the ones laid out p. 8.

The display shows that all detectors have recorded signals, including the tracker. In the reconstruction, MUONBOX performs an angle scan at a fixed momentun (100 GeV/c) and finds a single candidate track. The final fit utilizes the 14 hits of the event. The visualization demonstrates the validity of the reconstruction result, both globally when displaying the full event, and locally when zooming on each MDT chambers. In this respect, projective views are specially useful, since they allow to verify that the candidate track is tangential to all drift radiuses. Three-dimensional display is useful to examine the event from different point of views. The user can benefit from the navigator facilities to navigate at will around the event.

The vast majority of the events collected in the 2001 Testbeam corresponds to such clean track patterns. However a fraction a events presents topologies which are more challenging for pattern recognition and track fit. An example is shown in Figure 6 which exhibits a clean track accompanied by background originating probably from one or several offline particles. The pattern recognition first identifies several local segments in both chambers. The complete reconstruction then associates the segments to form a candidate track. The display of these reconstruction objects allows one to verify visually the correctness of the final result.

Events with more delicate patterns are available in the tesbeam data for testing the reconstruction algorithms. Figure 7 shows two such instances in the BIL chamber. The first case is an event where a large area of the active part of the chamber is illuminated by a shower of particles. The pattern recognition identifies many local segments. In the second case, the track is accompanied closely by background signals. The reconstruction works successfully in finding a track which can be associated to a segment in the BML chamber.

Figure 5: Event Display and Reconstruction of a BIL/BML event. Left view shows the full event in projective view, with MDT envelopes displayed. Right views show zooms on the BIL and BML chambers, with the entire assembly of drift tubes displayed. Bottom view is a 3-dimensional representation.

Figure 6: Event Display and Reconstruction of a BIL/BML event with several segments found. Left view shows the full event in projective view, with MDT envelopes displayed. Right views show zooms on the BIL and BML chambers, with the entire assembly of drift tubes displayed.

Figure 7: Events with challenging topologies (zoom on BIL chamber, run 2113).

Event Display and Reconstruction of BOS/BIL/BML data

As for the BIL/BML data, the event display and reconstruction of the three-chambers data is possible when using the appropriate AMDB_SIMREC geometrical database. Events shown here are taken from run 2291, with one electronic boards per multilayer (i.e. 6 readout tubes per layer for BIL and 8 for BML and BOS).

In Figure 8 are shown two events of interest. The first one corresponds to a relatively clean event. The second corresponds to an extremely complicated topology, where the entire assembly of active drift tubes has been fired (144 in all). Despite the complexity of the case, the reconstruction proposes two candidate tracks.

Figure 8: Event Display and Reconstruction of BOS/BIL/BML events (run 2291).

Comparison with existing package : CALIB

It is interesting to compare the event display and reconstruction capabilities of PERSINT and MUON-BOX to existing packages. The CALIB program performs a reconstruction of the local segments and it has a display facility [13]. An example of what is obtained with both tools is shown in Figure 9 for a simple event.

Scanning visually a reduced sample of events shows a correct agreement between the two packages. As mentioned in the next section, the large-scale study of testbeam data is possible on the basis on the work presented here. This makes feasible a systematic comparison between MUONBOX and packages such as CALIB in terms of performances.

## 10 MUONBOX Analysis of Testbeam Data

The MUONBOX Reconstruction program is readily available for large-statistics analysis of the Testbeam data. The utilization of this program in standalone mode is indeed straightforward using the same geometry database, event hit files and reconstruction datacards used in the Interactive Reconstruction mode in PERSINT.

As an example, a study of the angle distribution of the local segments measured in the MDT chambers is performed, using the reference system shown in Figure 10. The distribution of the orientation of the BIL segments with respect to the beam-axis is presented in Figure 11. The segments selected here are the ones with best quality.

The analysis of the orientation and position of the local segments or fully reconstructed tracks can be used to perform the relative alignment of the chambers. For example, the chamber orientation in the geometrical database are obtained precisely using the local segments distributions : in the case of the database described p. 6, the rotation of \(\simeq 10.4\) mrad applied to the BIL chamber results from such an analysis.

Figure 9: Comparison between CALIB and PERSINT : event display and local segment search in the BIL chamber (evt 11, run 2113).

Figure 11: Distribution of angles \(\alpha\) for BIL segments with best quality in run 2113.

Figure 10: Axis System for analysis. \(\alpha\) is the angle between the reconstructed local segments and the nominal beam direction (Y-axis).

Such studies are useful in validating the reconstruction software to be used in the ATLAS experiment. They provide a better understanding of this software in terms of performances, such as reconstruction efficiencies, resolution, and computing times, and are a way to uncover possible systematics in the reconstruction steps sequence, and inefficiencies of the detectors.

## 11 Conclusions

This study represents the first instance in which the Muon Offline Software is used on real data. Such realization is a necessary step in validating the algorithms that will be used in the analysis of muon event at the ATLAS Experiment. It will help in understanding the various systematics involved in the muon detection, and allow a better understanding of the efficiency and performances of the reconstruction.

In turn, the analysis of the testbeam data with the ultimate performance of the offline reconstruction program will contribute to a better evaluation of the experimental techniques participating in the ATLAS Muon detector. For example, it can make a valuable contribution to the muon system alignment studies, as well as for the MDT chambers intrinsic performance determination.

## Acknowledgments

We are grateful to P. Bagnaia, S. Falciano, S. Horvat, M. Iodice, L. Pontecorvo for the help they provided in this project.

## Appendix : installation of Persint

The program is available on AFS at CERN in the official Persint repository located at :

/afs/cern.ch/atlas/offline/external/Persint

This repository consists in a tree-like structure which provides, for each version of the program, the source and executable files, together with documentation and useful input databases, and for developers, the tools necessary to compile and load. Each version of the program is attributed with a version subdirectory Persint.x.xx, where x.xx denotes the version numbering. Each version subdirectory contains itself the directories **doc**, **src**, **bin**, and **test**, plus an executable file for compiling and loading (for developers).

In **bin**, executables of the program are available for exploitation on Compaq-Alpha and Sun-Solaris UNIX, and for Linux, in the directories of corresponding names, under the "persint.exe" name. In **src** and **doc** are contained the source files and the documentation, while **test** provides a number of databases and input files. **test** contains soft link to the executables, and can be seen as a prototype for a working directory, in which the program may be run.

Besides the official repository, the PERSINT webpage can be used to download the most recent version of the program and find the most up-to-date informations and developments [14].

To install the program, the user should copy the persint.exe file of its choice (version and platform) in its working directory. It is recommended to copy also the databases and input files that can be found in the **test** directory, or access them through the use of soft links. Another possibility is to use the "tar" file provided in the repository which contains all the necessary files to run on any platform.

## References

* [1] L. Chevalier, _et al._, ATLAS Internal Note ATL-MUON-97-148 (1997).
* [2] M. Virchaux, _et al._, ATLAS Internal Note ATL-MUON-97-198 (1997).
* [3] ATLAS Muon Spectrometer Technical Design Report, CERN/LHCC/97-22 (1997).
* [4] ATLAS Detector and Physics Performance Technical Design Report, CERN/LHCC/99-14 (1999).
* [5] M. Virchaux, D. Pomarede, Atlas Internal Note ATL-SOFT-2001-003 (2001).
* [6] M. Virchaux, D. Pomarede, "The PERSINT Manual version 2.06", see e.g. /afs/cern.ch/atlas/offline/external/Persint/Persint.2.06/doc/PERSINT_MANUAL.ps
* [7] HIGZ High Level Interface to Graphics and Zebra User's Guide, CERN Program Library Long Writeups **Q120**, Application Software Group, Computing and Networks Division, CERN, Geneva. Switzerland, june 1995.
* [8] G. Avolio, _et al._, ATLAS Internal Note ATL-COM-MUON-2001-022 (2001).
* [9] P. Creti, _et al._, ATLAS Internal Note ATL-MUON-2000-006 (2000).
* [10] P. Creti, _et al._, ATLAS Internal Note ATL-MUON-99-005 (1999).
* [11] E. Pasqualucci, _et al._, ATLAS Note in preparation.
* [12] G.D. Alexeev, _et al._, ATLAS Internal Note ATL-MUON-97-142 (1997).
* [13] P. Bagnaia, _et al._, ATLAS Internal Note ATL-COM-MUON-2002-004 (2002).
* [14][http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/persint.html](http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/persint.html)
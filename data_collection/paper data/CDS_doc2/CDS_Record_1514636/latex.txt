**Building a Stereo-angle into strip-sensors for the ATLAS-Upgrade Inner-Tracker Endcaps**

\begin{tabular}{|l|c|c|c|} \hline _ATLAS Project Doc. No:_ & _Institute Doc. No:_ & _Created:_ **06/01/12** & _Page:_ **1 of 14** \\
**None** & **petalwafer** & _Modified:_ **15/08/12** & _Rev:_ **E** \\ \hline \end{tabular}

**Note**

**Building a Stereo-angle into strip-sensors for the ATLAS-Upgrade Inner-Tracker Endcaps**

_The Strips Endcap detector for the ATLAS Upgrade needs several sensor shapes, each of which is approximately a wedge shape like the current SCT. For the Endcap to use a stave-like approach as proposed for the barrel, care is needed to design the shapes to avoid clashes and minimise gaps between them. This note gives the basic formulae for one way of building up a petal. It allows for a stereo-angle to be built into the wafer, and takes into account the maximum usable wafer size._

\begin{tabular}{|l|l|l|} \hline _Prepared by:_ & _Checked by:_ & _Approved by:_ \\
**N.P. Hessey** & **Eric Hennes** & **Nbody** \\ \hline \end{tabular}

_Distribution List:_

**Public**
## History of Changes

\begin{tabular}{|c|c|c|c|c|} \hline _Rev. No._ & _Date_ & _Pages_ & _Made by_ & _Description of changes_ \\ \hline A & 06/01/2010 & All & N.P. Hessey & Original document \\ \hline B & 13/01/2010 & All & N.P. Hessey & Corrections from Eric. Reverse \(y\). Call angles \(\phi\). \\ \hline C & 01/02/2012 & 9 \& ff & N.P. Hessey & Add guard ring/outer dimensions \\ \hline D & 03/04/2012 & 10 \& ff & N.P. Hessey & Calculate strip end points \\ \hline E & 15/08/2012 & 13 \& ff & N.P. Hessey & Calculate strip end points \\ \hline \end{tabular}

###### Contents

* 1 Introduction
* 2 Reference Frames
* 3 Method Outline
* 4 Sensor Positions in an Endcap
* 5 Calculation of Active-area Shape
	* 5.1 Finding the focal length \(R\)
	* 5.2 Coordinates of \(a\)
	* 5.3 Coordinates of \(d\)
	* 5.4 Coordinates of \(c\)
	* 5.5 Calculating the maximum outer radius covered, \(R_{o}\)
	* 5.6 Coordinates of \(b\)
	* 5.7 Active-area coordinates in the Sensor-frame
* 6 Sensor cut-edge coordinates
* 7 Hit-coordinates to strip calculation
* 8 Strip Positions
* 9 Sensor area
* 10 Concluding remarks

## 1 Introduction

Reference [1] gave a design for Endcap sensors with a stereo angle built in, which was optimised for a circumferential-type solution of building up an Endcap. The other option is to build an Endcap out of "petals" - wedge shaped support structures stretching all the way from the inner to outer radius of the Endcap strips region. There are at least three reasons to improve on the previous work:

* Petals need a different optimisation than circumferential designs: mainly because petals allow overlap of coverage in \(\phi\) while the circumferential design allows overlap in \(r\).
* The previous work did not specifiy the details of how the strips were layed out and rotated for stereo angle. Here we choose one particular solution.
* There was an approximation made in the previous document ("\(\theta_{g}\)-left \(=\theta_{g}\)-right") which may cause difficulties some time in the future

## 2 Reference Frames

There are three reference frames used in this document, the "Sensor-frame", "Beam-frame", and "Strip-frame". Figure 2 illustrates these. The Sensor-frame has its origin at the centre of the original silicon wafer, and \(x\)-direction from thin-end to thick-end going radially outwards from the beam axis. The Beam-frame has its origin on the beam axis with \(x\)-axis parallel to the Xensor-frame \(x\)-axis. The Strip-frame has its origin at the focus \(f\) of all strips and \(x\)-axis along the bisector of the middle two strips of the sensor.

Transform from Beam-frame to Sensor-frame by translating \(-R\) along the \(x\) axis:

\[\mathbf{p}_{Sensor}=\mathbf{p}_{Beam}+\begin{pmatrix}-R\\ 0\end{pmatrix} \tag{1}\]

Transform from Sensor-frame to Strip-frame by rotating by the (negative) stereo-angle and translating \(R\) along the new \(x\) axis:

\[\mathbf{p}_{Strip}=\mathcal{R}(-\phi_{s})\mathbf{p}_{Sensor}+\begin{pmatrix}R\\ 0\end{pmatrix} \tag{2}\]

where \(\mathcal{R}\) is the rotation matrix

\[\mathcal{R}(\phi)=\left(\begin{array}{cc}\cos\phi&-\sin\phi\\ \sin\phi&\cos\phi\end{array}\right) \tag{3}\]

## 3 Method Outline

In the current SCT Endcap, the wedges are symmetric about the \(x\)-axis, with strips separated by constant \(\phi\)-pitch and pointing to a focus. If the sensor is not given a stereo-angle rotation, then this focus coincides with the beam-line: the strips are radial. In the current two-sided modules placed on discs, one side is radial, and the other given a 40 mrad stereo angle, giving so-called \(u\) or \(v\) strips. This allows the \(\phi\) coordinate of a strip to be determined easily: \(\phi\) is strip-pitch times strip number plus an offset.

Here I propose we keep this basic strip arrangement: constant \(\phi\)-pitch, focussed on the beam-line if there is no stereo angle. If the sensor is rotated to give a stereo angle, the focus rotates away from the beam-line, but the focal distance \(R\) is kept the same, as in figure 2.

Figure 1: Figurative comparison of SCT-sensors (solid lines, zero stereo angle built in) to proposed wafers with stereo angle built in (dashed lines). The Sensor reference-frame is indicated: \(O\) is the centre of the original silicon wafer; \(R\) is the distance from \(O\) to the focal-point of the strips. The sensor covers an angle \(\phi_{w}\) from the focal-point. Building in the stereo-angle shifts the sensor corners \(a,b,c,d\) so that when rotated by a stereo angle, \(a\) and \(d\) end up at one and the same radius from the beam-line, and \(b\) and \(c\) end up at another.

Figure 2: Beam reference frame with a sensor placed at the desired radius \(R\) from the beam-line and rotated by the stereo angle. The Sensor-frame is centred at \(O\); the Strip-frame is centred at \(f\).

It is not yet decided if the new Endcap will have radial plus \(u\) and \(v\) strips, or only \(u\) and \(v\) strips. The latter can halve the number of sensor designs and many other components, at a slight cost in performance (second-coordinate resolution deteriorates a factor \(\sqrt{2}\), harder to implement fast track triggers). We keep all options open with the stereo angle \(\phi_{s}\) as a (known) parameter.

We first calculate the dimensions of the _active area_: the region covered by strips. The actual sensors will have guard rings etc. in addition, and between sensors on a petal there will be gaps. This is calculated after the active area.

With petals, the \(\phi\)-angle to be covered is known: typically we have 32 or 64 wedges in a complete ring, and we may want some overlap from one petal to the next, so the angle will be slightly larger than \(2\pi/(\text{no. sensors in a ring})\). We denote the angle to be covered by a wafer as \(\phi_{w}\) and treat it as a known quantity.

The sensors have to tessellate on a petal - i.e., cover the petal without clashes and with minimal gaps. Here things are very different to the SCT layout: the high-low staggering of modules on SCT discs allows rotation of wedges without interference to neighbouring modules. There are big advantages to building the stereo angle into the sensor: you avoid dead areas in the sensor, avoid some very short strips, and so on. We assume here that the stereo angle is built into the wafer. Figure 1 shows roughly what this means: the wafer is no longer symmetric about the \(x\)-axis, and neither the inner nor the outer corners are equidistant from the focal point - instead, they end up equidistant from the beam-axis. The main task is then to calculate the four corner positions of the active area.

In developing layouts, the radial region to be covered in the Endcap gets specified. Here I assume we start at the inner radius, and work outwards. Therefore I take the inner-radius \(R_{i}\) to be covered by a wafer as a known quantity; for the first ring, it is the same as the inner radius specified in the layout. The outer radius \(R_{o}\) of this ring has to be calculated; then for the next ring, \(R_{i}\) has to be chosen sufficiently larger than this \(R_{o}\) to allow for guard rings, clearances etc. All rings can then be built up sequentially.

We want to use as few silicon wafers as possible, so we would like to know what is the maximum strip length given \(R_{i},\phi_{w},\) and \(\phi_{s}\). This depends on the allowed usable wafer dimension \(R_{w}\) (as well as the edge structures such as guard rings). We expect to use "six inch" wafers, which have an outer radius of 75 mm and usable radius of 70 mm. Allowing for guard rings etc. means that the usable radius for the active area is about 68 mm. \(R_{w}\) is left as a (known) parameter here.

The value of \(R_{w}\) puts a limit on \(R\) and \(R_{o}\). The points \(a\) and \(c\) touch the circle of radius \(R_{w}\) centred at \(O\). Since later we are going to add guard rings around the active area, we first have to reduce the radius from \(R_{w}\) to something smaller, to leave room for the guard rings. As a worst case (square sensors) we reduce \(R_{w}\) by \(\sqrt{2}*g\) where \(g\) is the guard ring width. The first step in calculating the four corner points of a wafer involves calculating the maximum \(R\) possible. Of course, there may be reasons for using less than this, and so \(R\) could be adjusted downwards before calculating the corners if desired. Points \(a\), \(d\) and \(c\) can then be calculated. Next the distance \(R_{o}\) is found, and finally point \(b\).

Points \(a,b,c,\text{and }d\) are first calculated in the Beam-frame. The final step transforms them to the Sensor-frame.

## 4 Sensor Positions in an Endcap

The choice of coordinate system given here has the convenience of allowing straightforward calculation of (ideal) sensor positions, for example in Geant simulations.

Imagine a sensor placed with \(O\) at the beamline, with its \(x\)-axis aligned with the Beam-frame \(x\)-axis. This sensor can be brought to its ideal position by a rotation about the beam-axis of \(\phi_{s}\), a translation along \(x\) of \(\mathbf{R}=(R,0)\), and a rotation about the beam axis of \(\Phi\) to the desired \(\phi\) position. In this transformation, a point \(\mathbf{p}\) moves to \(\mathbf{p}^{\prime}\) given by:

\[\mathbf{p}^{\prime}=\mathcal{R}(\Phi)(\mathbf{p}+\mathbf{R}) \tag{4}\]

## 5 Calculation of Active-area Shape

We assume \(\phi_{w},\phi_{s},R_{i},\) and \(R_{w}\) are known; also \(\phi_{s}<\phi_{w}/2\). We want to derive \(R,R_{o}\) and the positions of \(a,b,c,d\). We assume \(R_{w}\) has been adjusted downwards to leave space for the guard rings (see above).

Figure 2 shows the situation after positioning the sensor on a petal (with no \(\phi\) rotation, \(\Phi=0\)). The points \(B\), \(O\), and \(f\) are respectively the beam axis, the wafer centre, and the focus of the strips.

### Finding the focal length \(R\)

We derive an implicit formula with \(R\) and all known quantities. This cannot be solved explicitly, which I think reflects the fact that figure 2 cannot be drawn until \(R\) is known.

Since there is an equal number of strips each side of the \(x\)-axis, the sensor active area subtends angles \(\pm\phi_{w}/2\) from the focal point.

Note that \(\Delta BfO\) is isosceles with apex \(\phi_{s}\), hence the other two angles are \(\pi/2-\phi_{s}/2\), and the length

\[(Bf)=2R\sin\phi_{s}/2 \tag{5}\]

Hence the point \(f\) is

\[f_{x} = (Bf)\sin\phi_{s}/2\] \[f_{y} = -(Bf)\cos\phi_{s}/2 \tag{6}\]

The line \(fa\) can be written

\[y=\alpha+\beta x \tag{7}\]

which crosses the \(x\)-axis at an angle \(\pi-\phi_{w}/2+\phi_{s}\) hence

\[\beta=-\tan\left(\phi_{w}/2-\phi_{s}\right) \tag{8}\]

\(\alpha\) is chosen to make the line pass through \(f\), resulting in

\[\alpha = -(Bf)\left(\beta\sin\phi_{s}/2+\cos\phi_{s}/2\right) \tag{9}\] \[= kR\]

where we introduce the shorthand

\[k=-2\sin\left(\phi_{s}/2\right)\left[\beta\sin\left(\phi_{s}/2\right)+\cos \left(\phi_{s}/2\right)\right] \tag{10}\]

The sensor corner point \(a\) lies on this line and the circle of radius \(R_{i}\), so

\[a_{x}^{2}+a_{y}^{2}=R_{i}^{2} \tag{11}\]

Substituting for \(a_{y}\) from 7 gives a quadratic for \(a_{x}\):

\[(1+\beta^{2})a_{x}^{2}+2\beta\alpha a_{x}+\alpha^{2}-R_{i}^{2}=0 \tag{12}\]the required solution takes the positive sign and simplifies to

\[a_{x}=\frac{-\beta kR+\sqrt{R_{i}^{2}(1+\beta^{2})-k^{2}R^{2}}}{1+\beta^{2}} \tag{13}\]

Substituting back in 7 gives

\[a_{y}=\frac{kR+\beta\sqrt{R_{i}^{2}(1+\beta^{2})-k^{2}R^{2}}}{1+\beta^{2}} \tag{14}\]

Denoting the angle \(OBa\) by \(\phi_{a}(R)\) where we make the dependance on \(R\) explicit, we have

\[\phi_{a}(R) = \arctan a_{y}/a_{x} \tag{15}\] \[= \arctan\left[\frac{kR+\beta\sqrt{R_{i}^{2}(1+\beta^{2})-k^{2}R^{2 }}}{-\beta kR+\sqrt{R_{i}^{2}(1+\beta^{2})-k^{2}R^{2}}}\right]\]

Using the cosine rule for triangle \(BOa\) gives

\[R_{w}^{2}=R^{2}+R_{i}^{2}-2RR_{i}\cos\phi_{a}(R) \tag{16}\]

This is an implicit equation for \(R\), with only \(R\) unknown. The required root can easily be found by Newton's method. A good initial estimate for \(R\) is

\[R\approx R_{i}+R_{w}/\sqrt{2} \tag{17}\]

### Coordinates of \(a\)

With \(R\) now known, the coordinates of \(a\) can be found from equations 13 and 14.

### Coordinates of \(d\)

From figure 2, the angle \(Bfd\) is \(\pi/2-\phi_{s}/2-\phi_{w}/2\). The sine rule applied to triangle \(Bdf\) gives the angle \(Bdf\):

\[\angle Bdf = \arcsin\left(\frac{(Bf)}{R_{i}}\sin\angle Bfd\right) \tag{18}\] \[= \arcsin\left[\frac{(Bf)}{R_{i}}\cos\left(\phi_{s}/2+\phi_{w}/2 \right)\right]\]

Considering the triangles \(Bdf\) and \(Obf\) gives the polar-angle of \(d\):

\[\phi_{d}=\phi_{w}/2+\phi_{s}-\angle Bdf \tag{19}\]

so that \(d\) can be found from

\[d_{x} = R_{i}\cos\phi_{d}\] \[d_{y} = R_{i}\sin\phi_{d} \tag{20}\]

### Coordinates of \(c\)

The coordinates of \(c\) are determined by the maximum usable radius \(R_{w}\). First we find the length \((fc)\) by applying the cosine rule to triangle \(fcO\):

\[R_{w}^{2}=R^{2}+(fc)^{2}-2R(fc)\cos(\phi_{w}/2) \tag{21}\]

giving a quadratic in \((fc)\) with required root

\[(fc)=R\cos(\phi_{w}/2)+\sqrt{R_{w}^{2}-R^{2}\sin^{2}\phi_{w}/2} \tag{22}\]

Line (fc) makes an angle \(\phi_{s}+\phi_{w}/2\) to the \(x\)-axis, allowing the \(x\) and \(y\) displacements of \(c\) from \(f\) to be found. Adding these to the coordinates of \(f\) gives \(c\):

\[c_{x} = f_{x}+(fc)\cos\left(\phi_{s}+\phi_{w}/2\right)\] \[c_{y} = f_{y}+(fc)\sin\left(\phi_{s}+\phi_{w}/2\right) \tag{23}\]

### Calculating the maximum outer radius covered, \(R_{o}\)

The corner \(c\) lies on \(R_{o}\) hence

\[R_{o}=\sqrt{c_{x}^{2}+c_{y}^{2}} \tag{24}\]

### Coordinates of \(b\)

Consider triangle \(bBf\):

\[\angle Bfb=\pi/2-\phi_{s}/2+\phi_{w}/2 \tag{25}\]

The length \((bf)\) can be found by applying the cosine rule

\[R_{o}^{2}=(Bf)^{2}+(fb)^{2}-2(Bf)(fb)\cos\angle Bfb \tag{26}\]

with required solution

\[(fb)=(Bf)\sin\left(\phi_{s}/2-\phi_{w}/2\right)+\sqrt{R_{o}^{2}-[1+\cos\left( \phi_{s}-\phi_{w}\right)](Bf)^{2}/2} \tag{27}\]

The line \((fb)\) makes an angle \(-(\phi_{w}/2-\phi_{s})\) with the \(x\)-axis, allowing the point \(b\) to be found:

\[b_{x} = f_{x}+(fb)\cos\left(\phi_{w}/2-\phi_{s}\right)\] \[b_{y} = f_{y}-(fb)\sin\left(\phi_{w}/2-\phi_{s}\right) \tag{28}\]

### Active-area coordinates in the Sensor-frame

Finally we convert to the Sensor-frame using equation (1).

## 6 Sensor cut-edge coordinates

We now add a region of silicon around the active area, to hold guard rings and the extra space to the cut edge.

We assume a uniform width for this of \(g\) on all 4 sides. We then calculate the four vertices as the intersection of the two lines resulting from extending each side by \(g\) in a direction perpendicular to the side.

The intersection \((P_{x},P_{y})\) of a line through \((x_{1},y_{1})\) and \((x_{2},y_{2})\) with another line \((x_{3},y_{3})\) and \((x_{4},y_{4})\) is (see e.g. Line-line intersection in Wikipedia)

\[d=(x_{1}-x_{2})(y_{3}-y_{4})-(y_{1}-y_{2})(x_{3}-x_{4}) \tag{29}\]

\[P_{x}=(x_{1}y_{2}-y_{1}x_{2})(x_{3}-x_{4})-(x_{1}-x_{2})(x_{3}y_{4}-y_{3}x_{4}) /d \tag{30}\]

\[P_{y}=(x_{1}y_{2}-y_{1}x_{2})(y_{3}-y_{4})-(y_{1}-y_{2})(x_{3}y_{4}-y_{3}x_{4}) /d \tag{31}\]

To shift the bounding lines of the active area we construct the normal vector of size \(g\) and add this to the end points of the line. The \(i^{th}\) bounding line \(\mathbf{b}_{i}\) is given by the active area end-points on that edge:

\[\mathbf{b}_{i}=\mathbf{p}_{i+1}-\mathbf{p}_{i} \tag{32}\]

We derive \(\mathbf{g}\) by rotating the bounding lines through a right-angle, and scaling. It turns out that the outward-pointing normal is always arrived at by rotating by \(-\pi/2\) (dropping subscript \(i\) for now):

\[\mathbf{g}_{x}=\mathbf{b}_{y}g/|\mathbf{b}| \tag{33}\]

\[\mathbf{g}_{y}=-\mathbf{b}_{x}g/|\mathbf{b}| \tag{34}\]

We add \(\mathbf{g}_{i}\) to the active-area corners of the \(i^{th}\) side for all four sides. Finally we calculate the cut-corners as the intersection of lines through these points.

## 7 Hit-coordinates to strip calculation

In Geant simulation the digitisation step needs to work out which strip an energy deposit is in. Geant can give the deposit in the Sensor-frame in Cartesian coordinates as \((x,y,z)\). To obtain the strip this lies in, we convert \((x,y)\) to the Strip-frame in which all points along a strip have the same \(\phi\), then take the \(\phi\)-coordinate of this point. Dividing by the angular strip-pitch and taking the nearest smaller integer gives an integer index \(s\) to the strip. This can be adjusted by a constant offset to give \(s\) in the required range, such as 0 to the number of strips less one.

Transforming to the Strip-frame is accomplished using equation (2):

\[\begin{pmatrix}x^{\prime}\\ y^{\prime}\end{pmatrix}=\mathcal{R}(\phi_{\mathrm{s}})\begin{pmatrix}x\\ y\end{pmatrix}+\begin{pmatrix}R\\ 0\end{pmatrix} \tag{35}\]

The azimuthal angle is

\[\phi^{\prime}=\arctan(y^{\prime}/x^{\prime}) \tag{36}\]The strip-pitch \(\phi_{p}\), sensor-angle \(\phi_{w}\) and number of strips \(N\) (assumed even) are related by

\[\phi_{w}=N\phi_{p} \tag{37}\]

and the strip index is

\[s=\mbox{int}(\phi^{\prime}/\phi_{p})+N/2 \tag{38}\]

or

\[s=\mbox{int}[N(\phi^{\prime}/\phi_{w}+0.5)] \tag{39}\]

\(s\) runs from 0 to \(N-1\).

## 8 Strip Positions

The position of each strip can be defined by its two endpoints; e.g. these allow strips to be drawn or hit positions to be calculated from a strip number. They can be calculated in the Strip Reference Frame where the azimuthal angle \(\phi\) is constant along the strip and easily calculated. Here we assume sensors have inner and outer edges which are arcs of circles. The strips start and end close to these arcs. They are centred on the beam axis, not the strip focal point, and so require calculation of the intersection of a line and circle. The formula for this intersection are derived below in terms of the basic wafer parameters. Here we assume all strips in a wafer have equal length, but this is easily modified.

Typically one end of a strip implant is connected to a bias rail via a bias resistor, while the other end is not connected. The latter tends to have a smaller gap to the next feature than the former. Let \(g_{b}\) and \(g_{n}b\) be the two gaps.

Figure (3) illustrates a strip at an angle \(\phi\) from the sensor centre line, intersecting the are at radius \(R_{i}\) from the beam axis at point \(p\). The strip angle is

\[\phi=\angle Ofp \tag{40}\]

The radius of the intersection of this line with the arc at \(R_{i}\) is the length \(fp\). Consider \(\triangle Bfp\). Length \(Bp\) is \(R_{i}\); length \(Bf\) is given in equation (5); and the angle \(\angle pfB\) is

\[-\phi+\angle BfO=\pi/2-\phi_{s}/2-\phi \tag{41}\]

(see just before equation (5)). Note the sign of \(\phi\): in the figure, \(\phi\) is less than zero so must be _subtracted_ from \(\angle BfO\) to obtain \(\angle Ofp\). Using the cosine rule on this triangle then gives

\[R_{i}^{2}=r^{2}+(2R\sin\frac{\phi_{s}}{2})^{2}-2r(2R\sin\frac{\phi_{s}}{2}) \cos(\frac{\pi}{2}-\frac{\phi_{s}}{2}-\phi) \tag{42}\]

which can be rearranged into the standard quadratic form in \(r\):

\[r^{2}+br+c=0 \tag{43}\]

with

\[b=-2(2R\sin\frac{\phi_{s}}{2})\sin(\frac{\phi_{s}}{2}+\phi) \tag{44}\]

and

\[c=(2R\sin\frac{\phi_{s}}{2})^{2}-R_{i}^{2} \tag{45}\]Figure 3: Geometry used for calculating strip positions.

with required solution

\[r=(-b+\sqrt{b^{2}-4c})/2 \tag{46}\]

For a different radius arc to the one at \(R_{i}\), just substitute its radius for \(R_{i}\).

If the wafer has \(n_{r}\) rows of strips we divide the active area between \(R_{i}\) and \(R_{o}\) into regions separated by arcs with radii increasing successively by

\[L=\frac{R_{o}-R_{i}}{n_{r}} \tag{47}\]

and calculate the intersection of strips with arcs at these radii. Adding or subtracting \(g_{b}\) and \(g_{nb}\) as needed then gives the endpoints of strips in cylindrical coordinates.

These are transformed to Cartesian coordinates:

\[x=r\cos\phi \tag{48}\]

\[y=r\sin\phi \tag{49}\]

and transformed to the sensor frame using the inverse of equation (2):

\[\begin{pmatrix}x^{\prime}\\ y^{\prime}\end{pmatrix}=\mathcal{R}(\phi_{s})\left[\begin{pmatrix}x\\ y\end{pmatrix}+\begin{pmatrix}-R\\ 0\end{pmatrix}\right] \tag{50}\]

Code has been written to draw the wafers in SVG-format. For this a final transformation of the coordinates is made:

\[x_{SVG}=kx+t \tag{51}\]

\[y_{SVG}=-ky+t \tag{52}\]

where \(k\) is a scale factor and \(t\) is an offset. The minus sign for \(y_{SVG}\) arises from SVG using \(y\) down the page instead of up.

## 9 Sensor area

The sensor area can be calculated starting with the area of the quadrilateral defined by the four corners, then adding the area above the chord at the outer radius and subtracting the area above the chord at the inner radius.

The area of a quadrilateral defined by corners \(A,B,C,D\) with diagonals \(\mathbf{p}\) and \(\mathbf{q}\) is

\[A_{Q}=\frac{1}{2}|p_{x}q_{y}-q_{x}p_{y}| \tag{53}\]

with

\[\mathbf{p}=\mathbf{C}-\mathbf{A} \tag{54}\]

\[\mathbf{q}=\mathbf{D}-\mathbf{B} \tag{55}\]

The area bound by a chord of length \(c\) on a circle of radius \(r\) and subtending an angle \(\theta\) at the circle centre is

\[A_{C}=\frac{r^{2}}{2}(\theta-\sin\theta) \tag{56}\]

with chord-length

\[c=\sqrt{(A_{x}+B_{x})^{2}+(A_{y}+B_{y})^{2}} \tag{57}\]

and angle

\[\theta=2\arcsin\frac{c}{2r} \tag{58}\]

## 10 Concluding remarks

A simple program called petalwafers has been written which implements these formulae. For a given \(\phi_{w},\phi_{s},Ri,Rw\) it calculates the four corners, \(R\), and \(R_{o}\). This can be used to build up a set of wafers to cover a petal. An alternative approach, probably better, would be to build up a spread-sheet using these formulae.

Having a method and a set of formulae allows flexibility as the layout evolves. It allows different layouts to be evaluated with accurate estimates of the number of sensors, chips etc. needed, and so can help optimise the layout. The geometry proposed here benefits from the same basic strip layout used in the SCT, but adapted to petals.

Precise scalable drawings of sensors in SVG format are created by the same program.

There is a lot more to making a layout than these few formulae: details such as gaps, overlaps, choosing the inner and outer radii of discs all have to be worked out. These formulae are just one ingredient.

## References

* [1]_A possible layout of silicon-strip sensors on end-cap discs with stereo angle_, N.P. Hessey, April 2007. Available at [http://www.nikhef.nl/~r29/upgrade/stereodisc.pdf](http://www.nikhef.nl/~r29/upgrade/stereodisc.pdf)
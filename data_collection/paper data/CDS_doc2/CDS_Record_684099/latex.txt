[MISSING_PAGE_EMPTY:1]

Introduction

The use of codes for protection of the transmission and storage of digital data is a well-developed field, finding application in all aspects of information technology. The ATLAS Level-1 Calorimeter Trigger will make use of appropriate error detection techniques in order to minimise the impact of data errors on the performance of the trigger. The need for speed and compactness within the Calorimeter Trigger strongly favour the use of serialised communication between its components. However, the same factors place tight constraints on both communications bandwidth and processing time, which limit the scope for protection against data errors. This note describes a software model of Level-1 Calorimeter Trigger data which is used to estimate the effect of a given rate of errors in the transmission of serial data on the overall Calorimeter Trigger rate and to evaluate the protection provided by several error detection methods.

The level-1 trigger is a pipelined real-time system, which identifies trigger features indicating an interesting physics event within a latency envelope of \(<\)2 \(\mu\)s [1]. Level-1 trigger decisions are made by the central trigger processor (CTP) on the basis of combinations of trigger features; for the Calorimeter Trigger, these features are identified from localised calorimeter deposits as "clusters" -- due to isolated electrons, photons or hadrons from \(\tau\) decay -- and extended deposits due to "jets" of collimated particles. Vector and scalar sums of transverse energy are also provided to the CTP as trigger features. The calorimeter data from each LHC bunch-crossing are digitised at 40 MHz and subjected to the cluster/jet-finding algorithms. Each identified Calorimeter Trigger feature is discriminated at multiple transverse energy (\(E_{\rm T}\)) thresholds, and the resulting multiplicity of objects at each cluster/jet threshold is determined and sent to the CTP every 25 ns. A single corrupted digital input may be interpreted as a genuine \(E_{\rm T}\) of sufficient magnitude as to generate a fake trigger object which leads to a fake trigger. The relatively high granularity of the Calorimeter Trigger provides a large number of potential sources of fake trigger on each LHC bunch-crossing, and control of errors in the raw data is therefore essential.

The level-1 trigger is designed to operate at a maximum trigger rate of 100 kHz, although a practical target operating rate would be \(\sim\) 40 kHz. The 40 MHz LHC bunch-crossing rate is therefore reduced by a factor of \(10^{3}\). At low luminosity, approximately 15-20 kHz of the total trigger rate will be assigned to triggers coming from the Calorimeter Trigger, the remainder going to the muon trigger, and a small rate of calibration triggers. The target upper limit for non-background fake triggers is 1%, which means that the Level-1 Calorimeter Trigger may contribute up to 200 Hz of fake triggers, preferably considerably less. It is the intention of the Level-1 Calorimeter Trigger to introduce error-protection schemes to ensure that the requirement on fake triggers is met, whilst meeting the other performance goals. Since real triggers make up a very small fraction of the bunch-crossing rate (accepted level-1 rate will be \(\sim\) 1/1000 of the bunch-crossing rate, of which many accepted Calorimeter Trigger objects will in fact be background), a detected error can be suppressed with very little probability of introducing inefficiency. Fake triggers will be further limited by monitoring the rates of detected errors on each channel and shutting down any which exceeds a certain problem level.

The counts of trigger features at different \(E_{\rm T}\) thresholds which are delivered to the CTP as the basis for its trigger decisions are also susceptible to data errors. However, these data are transmitted to the CTP in parallel, at slower speeds than the serial data, which makes them less susceptible to noise. They are also far fewer in number than the inputs to the trigger, and therefore a less significant source of fake triggers. Parallel data is outside the scope of this note; error detection techniques will also be applied to the intermediate parallel data which are combined to form the Calorimeter Trigger outputs.

The remainder of this section describes the serial data paths within the Level-1 Calorimeter Trigger, to provide some context for the features of the trigger data which are included in the simulation. The following sections describe some features of error detection schemes, the software model of data transmission, the simulated performance of a range of error-detection schemes, and finally summarise the error protection to be used within the Level-1 Calorimeter Trigger.

### Level-1 Calorimeter Trigger serial transmission path

The Calorimeter Trigger processes \(\sim 7000\) analogue input channels, known as a trigger towers, each receiving data from an analogue sum of cells within one of the ATLAS calorimeters. The shaped analogue pulses coming from the calorimeters are digitised and filtered in a Pre-processor (PPr) before being used in highly parallelised cluster and jet search algorithms, performed by the Cluster Processor (CP) and the jet/energy processor (JEP) respectively. The analogue tower signals are digitised to 10 bits at 40 MHz, producing a sample corresponding to each LHC bunch-crossing (BC). The trigger tower signals are then digitally filtered by the Pre-processor in a step known as Bunch-Crossing Identification, or BCID, which reduces the long calorimeter pulses to a transverse energy (\(E_{\mathrm{T}}\)) value in a single time-slice at fixed latency with respect to the bunch-crossing which was the source of the signal. Trigger towers are then noise suppressed, re-calibrated for transverse energy scale and reduced to an 8-bit \(E_{\mathrm{T}}\) value, covering the range 0-255 GeV \(E_{\mathrm{T}}\) with a resolution of 1 GeV.

There are separate towers for deposits in the electromagnetic and hadronic calorimeters. In the region \(|\eta|<\) 2.5 the towers have a granularity of \(\Delta\eta\times\Delta\phi=0.1\times 0.1\) resulting in 6400 trigger towers. In the region out to \(|\eta|<\) 3.2 there are an additional 512 trigger towers with a granularity of \(\Delta\eta\times\Delta\phi=0.1\) or \(0.2\times 0.2\), and in the forward region 3.2 \(<\)\(|\eta|<\) 4.9 there are an additional 64 trigger towers sent from the Forward calorimeters.

The 0.1 \(\times\) 0.1 trigger towers are digitised by the Pre-processor and sent to the Cluster Processor along fast serial links as 8-bit words overing the range 0-255 GeV. In parallel, jet elements are formed within \(|\eta|<\)2.5 by combining 0.1 \(\times\) 0.1 trigger towers in 2*2 sums, before being transmitted from the Pre-processor to the Jet/Energy-sum Processor along similar serial links. For both towers and jet elements, electromagnetic and hadronic energy deposits are transmitted separately.

The PPr, CP and JEP sub-systems are organised on the basis of quadrants in azimuth, each quadrant being processed independent of the other three. There is a 2 \(\rightarrow\) 1 mapping between PPr Modules (PPMs) and CP Modules (CPMs) and a 4 \(\rightarrow\) 1 mapping between PPMs and Jet/Energy-Sum Modules (JEMs). Towers at quadrant boundaries are needed by modules in separate crates, and are therefore duplicated by the Pre-processor and sent on parallel links to the two CPMs or JEMs on either side of the quadrant boundary. The duplication of towers at quadrant boundaries increases the number of towers transmitted between PPr and CP sub-systems to 8000, and the number of elements sent between PPr and JEP to 2736.

The bandwidth required between PPR and CP is reduced using bunch-crossing multiplexing (BC-mux). BCID includes a peak-finding condition, so for any tower a non-zero value must always be followed by at least one zero (more frequently many zeros). Pairs of tower values can therefore be combined into two consecutive words in a serial channel with no loss of data. Each transmitted 8-bit tower \(E_{\mathrm{T}}\) value requires an additional flag bit describing the encoding. The BC-mux scheme achieves a factor-2 bandwidth saving between PPr and CP, and reduces the number of channels between PPr and CP to 4000. The BC-multiplexing is not decoded until the data reach its destination CP-ASIC. The combination of towers into jet elements means that zero cycles cannot be guaranteed for the sum, and no BC-multiplexing is possible on the PPr-JEP links.

The Calorimeter Trigger will use commercial LVDS (Low-Voltage Differential Signalling)high-speed serial links offering a word length of 10 bits; the Calorimeter Trigger has standardised on a 10-bit serial word which provides one free bit per word for error detection and monitoring purposes. For both the Cluster and and Jet/Energy-sum processors, each channel from the Preprocessor carries a tower pair (BC-multiplexed) or jet element, transmitted in 10-bit words at 40 MHz over a differential link. There are 9 information bits per word (8 \(E_{\mathrm{T}}\) bits plus BC-mux flag for towers, or 9 \(E_{\mathrm{T}}\) bits for jet elements) and the 10th bit in each word is surplus and therefore available for error protection. The LVDS serial link protocol inserts a guaranteed 0-1 bit transition as two additional bits at the end of every transmitted word. The model of LVDS thus includes two sync bits, the corruption of which has no consequences (single-cycle corruption of these bits is assumed not to result in loss of link synchronization). The transition speed of the LVDS link is therefore 480 Mbaud for a data rate of 400 Mbit/s on both CP and JEP links.

The CP and JEP cluster- and jet-finding algorithms operate in parallel on overlapping multi-tower/multi-element windows, within which localised energy deposits are identified by comparing sums of towers/elements to a range of cluster and isolation thresholds. The parallelism of the search requires sharing of tower/element data between processing elements, i.e. ASICs/FPGAs, modules and crates. Such data "fan-out" is a key technical problem which must be overcome to achieve the compactness necessary to meet the latency limits of the trigger. After being received from the Pre-processor, data are re-multiplexed to quasi-parallel 160- or 80-Mbit/s streams (4-bit or 2-bit "nibbles" respectively) for inter-module fan-out in the \(\eta\) direction via a fast quasi-serial backplane. There will be 3120 160-Mbit/s backplane fan-out streams in the CP sub-system and 924 80-Mbit/s fan-out streams in the JEP sub-system, considerably reduced by doubling the area covered by a JEM compared to a CPM, and the fact that electromagnetic and hadronic information are combined before being fanned out.

## 2 Error detection

Two important categories of error codes are _block codes_, which append a sequence of _parity bits_ to an unaltered sequence of information bits, and _distance codes_, which encode sequences of information bits into longer code-words such that only a subset of possible words are recognised as legitimate transmitted data. Both classes of codes can be made sufficiently sophisticated to enable not only detection of a large fraction of errors, but also the correction of a large subclass of potential errors. Codes capable of error-correction require a low _code-rate_, which is the ratio of information bits to total data rate, including additional code bits. The serial paths for the Calorimeter Trigger have been designed as 10 bit words, of which 9 are already allocated for information. The resulting 90% code rate is too high for complex error codes, and there is also insufficient time available for the reconstitution of corrupted data. The task is therefore to maximise the performance of error detection codes.

Block codes are described as \([j,i]\), where \(i\) is the number of information bits per word, and \(j\) the word length including parity bits. The constraint of Calorimeter Trigger bandwidth to 10 bits per serial word restricts the choice of error code to a very simple \([10n,9n]\) block code, where \(n=1,2,3\ldots\) words are jointly encoded and the resulting code bits are distributed over the \(n\) words. This allows for more complex error-encoding than single-word schemes, but if \(n>1\) then none of the \(1\ldots n-1\) words of the encoded field can be used until the \(n^{th}\) word is received. Such schemes inflate the latency of the level-1 trigger -- the numerous other stages in the calorimeter trigger bring the total latency very close to the \(2\,\mu\)s limit, and there is little margin for additional latency stemming from error detection.1 Block codes with \(n>2\) are ruled out, and \(n=1\) is to be preferred on latency grounds. Note, however, that the inputs to the CP system are already encoded over two consecutive words by the BC-mux scheme, which imposes a 1 cycle decoding latency at the receive end. The delay required for decoding an \(n=2\) scheme could therefore occur in parallel with the de-multiplexing delay, and the additional latency introduced by the scheme would be a single cycle at the transmit end. In the limit of an \([(i+1)\cdot n,i\cdot n]\) code with \(n=1\), a simple parity-check is the only available option.

Parity codes form a _checksum_ over the information bits of a word, and convert this into an appended parity code. With limited space available, the checksum is frequently converted to its modulus with respect to \(2^{b}\), for which \(b\) bits are required. A parity check may be _odd_ or _even_. With even parity, the parity bits are set so that when combined with the checksum, the result is 0, modulo-\(2^{b}\). For example, under modulo-2 even parity, the information word 000101001 has checksum 1 and even parity 1, which sum to 0, modulo-2. Odd parity provides parity bits which combine with the checksum to equal \(2^{b}-1\), such that the word 000101001 has modulo-2 odd parity 0, which sums to 1 modulo-2 when combined with the checksum. Although even parity is the most commonly used, there are two advantages to odd parity, which both result from the fact that an all-zeros information word has odd parity of all-ones. This provides _i)_ guaranteed bit transitions, which aid the Calorimeter Trigger in link synchronization, and _ii)_ automatic dead link detection, since zero data with odd parity is 00000000,1 which is distinguishable from a dead channel that appears as 00000000,0.

One proviso is necessary -- the LVDS protocol has a synchronization pattern 0101010101 that is sent to establish link lock. This violates odd parity, and will therefore produce a continual error condition. It is therefore sensible to be able to disable parity-encoding and parity-checking when the LVDS links are in link-lock mode.

The encoded parity is transmitted with the information. At the receiving end parity is re-calculated from the received information, using the same modulus as for transmission, and compared to the received parity code. If the information is corrupted between transmission and reception there may be a mismatch between the received and calculated parity, indicating a transmission error; this data can then be ignored, requested again, or even corrected if the parity encoding was sophisticated enough. Many parity schemes are blind to certain classes of transmission error, where corruption of the information result in the same calculated parity code as was received, despite the information having been altered. For example, modulo-\(2^{b}\) parity is blind to corruption of \(a\cdot 2^{b}\) bits, where \(a\) is an integer. A false negative may arise if the parity bits alone are corrupted, causing the parity check to be failed even though the information bits have been received intact. Finally, corruption of the information may be masked by corruption of the parity code, resulting in a false positive to the parity check.

The probability of two or more independent errors occurring in the same word falls rapidly with bit error rate (BER), and for a sufficiently small information word length may well be negligible ("negligible" must be defined with reference to the consequences of such an error occurring). But corruption of digital data need not be limited to independent occurrences of single bits in a serial bit-stream. Depending on the frequency spectrum of the noise source causing the corruption, a number of consecutive bits may be corrupted. These multi-bit errors are known as _burst errors_. The performance of error detection/correction schemes is often weaker for multi-bit errors, so it is important to consider a realistic model for the _error spectrum_, i.e. relative frequencies of burst errors of differing burst length. Unfortunately, it is often difficult to predict the right spectrum for digital noise. In general, one would expect predominantly short burst lengths, although the importance of longer bursts is enhanced by the limited ability of simple error schemes to cope with multi-bit errors. In the following we make do with a set of model spectra that attempt to cover the range of possibilities.

Single-bit parity, i.e. modulo-2, detects a problem in an information word with an odd number of corrupted bits, but is insensitive to an even number of corruptions. When the bit-corruptionprobability, \(p\), is small and uncorrelated between information bits, single-bit parity is largely sufficient; for the Calorimeter Trigger, a small but non-zero surviving error rate is tolerable. However, modulo-2 parity has no protection against errors of burst length \(2m\). Higher-modulus parity can achieve sensitivity to longer burst errors; modulo-4 parity can detect two-bit burst errors, as well as all odd-bit errors, but is insensitive to burst lengths which are higher multiples of 2. Because the Calorimeter Trigger code rate is limited to a single parity bit per word, modulo-4 parity (two parity bits) can only be implemented by jointly encoding two consecutive information words, and distributing the result in the parity bits of two transmitted words. This is an example of an \(n=2\) code where the parity bits must be distributed over several transmission words. This has the effect of _i)_ increasing the information field length encoded by a given set of parity bits, and thus the probability that one or more errors will be present, and _ii)_ forces additional latency at both transmit and receive ends by the need to accumulate \(n\) received data words before encoding or decoding is possible.

Additional error rejection can be obtained from an \(n=2\) two-bit parity scheme by _interleaving_ modulo-2 parity over alternate bits of two consecutive information words, as shown in figure 1. This scheme is sensitive to information errors of length \(m\) or \(2m\), where \(m\) is odd -- it not sensitive to \(m=4,m=8\) etc. Although apparently superior to modulo-4 parity, its real performance is dependent on the details of the transmission word format. Note that both \(n=2\) schemes above are weakened if one or more parity bits are corrupted in conjunction with the information bits, which is obviously possible when parity is transmitted over the same medium as the information bits.

Although every Level-1 Calorimeter Trigger channel is digitised and processed at 40 MHz, non-zero data are rather sparse, owing to the low occupancy of the trigger inputs, the removal of off-peak samples by the BCID algorithm and the suppression of noise by a per-tower threshold in the Pre-processor calibration. This means that a detected error can be replaced by an all-zeros word with little probability of having removed a real trigger; at a conservative estimate, only one tower value in \(10^{7}\) contains information which represents significant \(E_{\rm T}\) in a real trigger. Level-1 data are thus well-represented by an all-zeros transmitted pattern, rather than the random data pattern more normally assumed in the modelling of error rates.

## 3 Data model

A "fake" trigger can be caused by corrupted input data which introduce sufficient \(E_{\rm T}\) to create a trigger object which meets one of the CTP's criteria for generating a level-1 trigger. Genuine trigger objects are sufficiently scarce that triggers due to combinations of fake and real objects can be disregarded. Although trigger objects (cluster or jet) are formed by summations of towers/elements within the cluster/jet-finding algorithm window, a single corrupted tower or element may cause a fake trigger if its apparent \(E_{\rm T}\) value exceeds the minimum thresholds for

Figure 1: Interleaved dual mod-2 even parity distributed over two consecutive [10,9] words. Two separate parity checksums are formed from alternate bits over two consecutive information words. ‘*’ indicates the position of the parity bits in the encoded word.

a single-object trigger. The lowest single-object inclusive trigger thresholds will probably be \(\sim\!20\) GeV \(E_{\rm T}\) for a cluster and \(\sim\!100\) GeV \(E_{\rm T}\) for a jet (varying according to luminosity). Translated to the format of the CP/JEP data words transmitted from the Pre-processor, this is modelled as corruption of bit 4 or above (out of bits 0-7 describing the tower \(E_{\rm T}\) value) of a CP word, equivalent to \(\geq 16\) GeV, and corruption of bit 6 or above (out of bits 0-8 describing the element \(E_{\rm T}\) value) for JEP elements, equivalent to \(\geq 64\) GeV. Note that fake trigger objects are created by the conversion of transmitted zeros to received ones, and even then only in key bit positions in the serial stream that equate to significant amounts of deposited energy. These bits are described below as the "sensitive" bits of a word.

Earlier calculations have estimated that the Level-1 Calorimeter Trigger must achieve a per-channel BER of \(<\!10^{-9}\) to meet the \(<\!1\%\) target for fake triggers. Such calculations were based on multiples of channels containing single-bit errors, without taking account of the details of data format or error mode. To verify this estimate, and evaluate the kinds of error detection schemes proposed above, a detailed model of the data format and possible modes of data corruption has been constructed. The following aspects of calorimeter trigger data transmission have been considered in the model:

**Burst errors:** error burst spectra are implemented by assigning each burst length \(m\) a weight \(w_{m}\) describing its frequency of occurrence relative to errors of other length. All the spectra are limited to the range \(1\leq m\leq l\), where \(l\) is the length of the word under consideration, and normalised to unit probability. A number of choices for continuous spectra of weights are considered.

**Error mode:** the usual model for a corrupted bit is to reverse its state, irrespective of initial state. However, injection of a noise source into a digital stream seems more likely to force the carrier set bits to a particular state, which may or may not be the initial state. The observed corruption of data therefore depends on the initial data themselves; for example burst error could be reduced in apparent length if several of the affected bits are already in the state to which the noise source sends them. The error modes bit-flip, set-to-one and set-to-zero are therefore available.

**Data model:** the generic model of data transmission is to consider completely random data. However, in the particular case of the Level-1 Calorimeter Trigger a more appropriate model is pure zeros. An arbitrary model for the transmitted data is included by specifying a weight spectrum for each of the possible \(d\)-bit data words \(D=0\ldots 2^{d}\!-\!1\), where the weight for each word is equal to the probability of randomly choosing that word from the spectrum. The all-zeros data is a special case of the generic spectrum, with the weight distribution given by a delta function at D=0.

**Word structure:** the generation of a fake trigger object arises through corruption of certain of the \(E_{\rm T}\) data bits of a trigger tower or jet element. Corruption of the BC-mux flag in a PPr-CP word will interchange values between trigger towers and bunch-crossings; since most data are zeros it is unlikely that this will induce a fake trigger. Similarly, corruption of any error check bits is most likely to cause the word to fail an error-check and be suppressed, eliminating a fake trigger (and also any real trigger in that tower, but this is an unlikely event). The composition of the information word in terms of sensitive and insensitive bits, and their relative positions, affects the outcomes of introduced errors.

**Trigger criteria:** the relevant trigger thresholds are 16 GeV \(E_{\rm T}\) and 64 GeV \(E_{\rm T}\) for clusters and jets respectively, which mean that the sensitive bits are bits 4-7 and bits 6-8 (or 6-9 for the backplane) of the \(E_{\rm T}\) part of the respective CP and JEP information words. Note that a fake object can only be created when one or more of the sensitive bits of the received word contain a 1 when all sensitive bits in the original transmitted word were 0's.

**System structure:** each channel acts as an independent source of errors, and numbers of channels considered match those in the final system. The modelling of the backplane is based on the real system; an \(l\)-bit word is decomposed into \(j\)_nibbles_, at most one of which has a parity bit. Corruption is limited to one physical medium at a time, affecting a single nibble from the original word, but if the burst of length \(m\) extends beyond the end of the nibble of length \(k\), then the burst will affect the corresponding nibble in the subsequent word.

**Error protection:** finally, we wish to evaluate the performance of a number of error protection algorithms, and so the encoding and decoding of each must be included in the data-stream, as would be implemented in the real system. The following possibilities are appropriate for the Calorimeter Trigger and were evaluated for the benefits they might provide to level-1 serial data transmission:

* No parity (empty parity bit);
* Single-bit (modulo-2) parity;
* Modulo-4 parity distributed across two 10-bit words;
* Dual modulo-2 parity interleaved across two 10-bit words.

The key assumptions of the model are:

* Once corrupted, bits are never "un-corrupted".
* Separate physical media (links, backplane lines) are entirely independent, i.e. no cross-talk.
* Error probability is independent of data content or phase.
* Corruption of LVDS sync bits in a single cycle does not result in link lock loss.

The model has been implemented as a FORTRAN program, PCPOBJ.F. Information words of \(d=8\) or \(9\) bits (CP and JEP respectively) are generated and assigned the corresponding weight from a specified data spectrum. In the CP simulation, the 8-bit \(E_{\mathrm{T}}\) information word is augmented by a BC-mux flag bit; the JEP data consists only of the 9-bit \(E_{\mathrm{T}}\) information word. The 10-bit transmission word is completed by a parity bit generated according to the selected algorithm. The positions of the parity and BC-mux flag bits within the transmitted word are user-defined, but default to the two most significant bits of the word (see section 4.1).

The program also iterates over the burst spectrum under test. For each burst length, \(m\), an \(m\)-bit frame is scrolled along the transmitted word, and at each position the \(m\) bits within the frame are corrupted according to the selected error mode (flip, set or clear). Error bursts which span the boundary between two words are considered, with both words being potential fake objects. The received parity code is checked and if there is a mismatch, the error is detected and a count of trapped errors is incremented. If the parity check does not reveal an error, the received word is counted as a fake object only if all sensitive bits (bits 4-7 for a CP word and bits 6-8 for a JEP word) were zero in the transmitted word, and at least one was set in the received word. The iterations are repeated over each combination of information word, burst length and burst position.

The possibilities of detected error or fake object are not mutually exclusive; a single burst error which crosses an inter-word boundary can be detected as an error in one word and also give rise to a fake object in the adjacent word. In addition, an undetected error will not cause a fake object if sensitive bits are not affected. The minimum interval between triggers must be respected -- since this interval is only 4 BCs, and the fake trigger rate is always less than one part in \(10^{5}\) (1% of the level-1 rate after factor-1000 bunch-crossing rate reduction), thereis little probability of fake triggers occurring within this interval, or coinciding in the same bunch-crossing. Multiple fake objects in a single BC can lead to only one fake trigger.

The spectra are motivated by a desire to have a mix of burst-lengths greater than 1 in order make some test for "worst-case" performance of the various error schemes. There is no attempt to model the likely burst spectrum in the system through an analysis of the causes of different burst lengths, but by scanning the parameters of the spectra, error scenarios which are harder to suppress than single-bit errors can be tested, providing an estimate of the upper limit of the likely fake trigger rate.

The weight distributions for the burst spectra used are illustrated in figure 2. The single-bit burst spectrum is a delta function at \(m=1\), whereas the flat burst spectrum gives equal probabilities to burst lengths in the range \(1\leq m\leq 10\). The geometric spectrum has a constant ratio \(g\) between successively higher burst lengths, with the chosen ratio of \(g=0.5\) giving \(w_{m+1}=w_{m}/2\) (single-bit and flat spectra are special cases with \(g=0\) and \(g=1\) respectively). Two Poissonian spectra are also included, with the relative burst-length probabilities given by \(w_{m}=e^{-\lambda}\lambda^{m-1}/(m-1)!\) (strictly they are "shifted" Poissonian distributions, since the variate is \(m-1\), and \(m=0\) is excluded). The spectrum with \(\lambda=2\) peaks at \(m=2\) and \(m=3\) and

Figure 2: The weight spectra used in the simulation for multi-bit burst errors of length \(m\) bits (\(1\leq m\leq 10\)) each normalised to unit probability. a) shows single-bit errors, and a flat spectrum (\(1\leq m\leq 10\), b) shows a geometric spectrum (\(g=0.5\)), c) shows a shifted Poissonian spectrum (\(\lambda=0.5\)), and d) shows a broader Poissonian spectrum (\(\lambda=2\)).

tails off rapidly at higher burst lengths; the spectrum with \(\lambda=0.5\) is perhaps the most realistic, since it is dominated by single-bit errors, with a proportion of \(\sim\!1/3\) two-bit errors and longer bursts very much suppressed.

The iteration over all data, burst lengths and positions results in a weighting factor giving the fraction of errors which will produce fake objects. This is converted to a fake object rate relative to the per-channel raw (i.e. before error detection) BER by further weighting each accumulated error by \(1/\overline{m}\), where \(\overline{m}\) is the mean number of corrupted bits per burst, dependent on burst spectrum. The fake rates are dependent on the average channel BER, and since the bit error rates considered are in the range \(10^{-6}-10^{-12}\), the probability of multiple bursts affecting the same word is negligible and all fake rates are proportional to BER \(\times\) number of channels.

Four kinds of channel are considered: CP links (CPL) and backplane (CPB), and JEP links (JPL) and backplane (JPB). Their properties are summarised in table 1.

The four kinds of channel are treated independently, and their joint error-rate formed as:

\[\mathrm{Fake\,trigger\,rate} = N_{\mathrm{CPL}}*B_{\mathrm{CPL}}*P_{\mathrm{CPL}}+\] \[N_{\mathrm{CPB}}*B_{\mathrm{CPB}}*P_{\mathrm{CPB}}+\] \[N_{\mathrm{JPL}}*B_{\mathrm{JPL}}*P_{\mathrm{JPL}}+\] \[N_{\mathrm{JPB}}*B_{\mathrm{JPB}}*P_{\mathrm{JPB}}\]

where \(N_{x}\) is the multiplicity of channel-type \(x\) (\(x=CPL,CPB,JPL,JPB\), see table 1), \(B_{x}\) is the BER relevant to channel-type \(x\) and \(P_{x}\) is the per-channel fake-trigger probability for channel-type \(x\), normalised to BER. The fake probability incorporates the probability of an error of length \(m\) occurring (from the burst spectrum) and the fraction of such errors which survive any error detection scheme in place, and of those, the fraction which result in a significant fake trigger object (based on the word format).

## 4 Error detection performance

As an illustration of the factors which are relevant in determining the performance of error detection, combinations of burst spectrum, word format, and error protection scheme have been evaluated for a simple 10-bit word. A useful way to present the error detection performance is to consider the ratio of fake triggers to raw BER, i.e. before error rejection is applied. The results are shown in table 2. For each scenario, the proportion of errors \(p\) in a single channel which lead to a fake object is shown, normalised to the observable BER, such that if a BER of \(x\) were measured, the fake trigger rate from a single channel would be \(p\times x\).

\begin{table}
\begin{tabular}{|l|l|l|c|} \hline \hline Label & Definition & Format & Number \\ \hline \hline \(\mathrm{CPL}\) & \(\mathrm{PPr-CP}\) LVDS links (10m) & 12-bit words at 480 Mbaud & 4000 \\  & & (8 data + flag, parity, 2 sync bits) & \\ \hline \(\mathrm{CPB}\) & \(\mathrm{CPM-CPM}\) CMOS fan-out (2 cm) & 4-bit nibbles at 160 Mbaud & 3120 \\  & & (8 data + flag, parity \(\Rightarrow\) 3 nibbles) & \\ \hline \(\mathrm{JPL}\) & \(\mathrm{PPr-JEP}\) LVDS links (10m) & 12-bit words at 480 Mbaud & 2736 \\  & & (9 data, + parity, 2 sync bits) & \\ \hline \(\mathrm{JPB}\) & \(\mathrm{JEM-JEM}\) CMOS fan-out (2 cm) & 2-bit pairs at 80 Mbaud & 924 \\  & & (10-bit data, no parity \(\Rightarrow\) 5 pairs) & \\ \hline \hline \end{tabular}
\end{table}
Table 1: Details of the channels, formats and multiplicities contained within the data model.

The performance with single-bit errors is easily understood -- the error rate is equal to the fraction of bits out of 10 which are sensitive in the word, and any of the parity schemes is 100% effective in killing off any fake object. The performance with a flat spectrum introduces multi-bit burst errors. This generally results in an increase in the fraction of _burst errors_ which survive a particular error detection scheme, since there are usually some combinations of burst length and position for which any scheme is ineffective. Note also that for a burst of length \(m\geq 2\), a given sensitive bit can be affected by a burst at more than one position within the word, and so the proportion of _bursts_ which cause a fake actually goes up. However, multi-bit errors also decrease the ratio of _burst errors_ to _bit errors_ (since some bursts are multi-bit), and hence the rate fake triggers is a trade-off between the fraction of burst errors which go undetected and the ratio of burst errors to bit errors. This explains why words with no parity protection when exposed to multi-bit burst spectra show an apparent fall in fake rate normalised to BER, compared to single-bit errors only. The geometric spectra with \(g=0.5\) and the Poissonian spectra with \(\lambda=0.5,1.0,2.0\) attempt to explore this trade-off.

The reduction of the number of sensitive bits in a word obviously reduces the impact of burst errors, because there are then some bursts which do not result in a fake trigger object. The introduction of single-bit parity has a big impact on the spectra which are dominated by single-bit errors, but is progressively less effective as the proportion of multi-bit bursts increases. However,

\begin{table}
\begin{tabular}{|c|l|l||c|c|c|c|c|c|} \hline \hline  & \multicolumn{3}{c||}{10-bit Word} & \multicolumn{6}{c|}{Burst spectrum} \\ \cline{2-10}  & Data & Error & Single-bit & Flat & Geometric & \multicolumn{3}{c|}{Poissonian} \\  & format & scheme & & \(1\leq m\leq 10\) & \(g=0.5\) & \(\lambda=0.5\) & \(\lambda=1.0\) & \(\lambda=2.0\) \\ \hline \hline  & 10 bits & none & 1.000 & 0.182 & 0.503 & 0.667 & 0.500 & 0.333 \\  & (0-9) & & & & & & & \\ \cline{2-10}  & 9 bits & mod-2 & 0.0 & 0.100 & 0.167 & 0.199 & 0.213 & 0.171 \\  & (0-8) & (even) & & & & & & \\ \cline{2-10}  & 9 bits & mod-4 & 0.0 & 0.048 & 0.043 & 0.028 & 0.044 & 0.061 \\  & (0-8) & two-word & & & & & & \\ \cline{2-10}  & 9 bits & dual mod-2 & interleaved & 0.0 & 0.046 & 0.045 & 0.029 & 0.047 & 0.066 \\ \hline \hline  & 8 bits & none & 0.8 & 0.176 & 0.440 & 0.566 & 0.445 & 0.315 \\  & (0-7) & & & & & & & \\ \cline{2-10}  & 8 bits & none & 0.4 & 0.144 & 0.250 & 0.300 & 0.250 & 0.200 \\  & (4-7) & & & & & & & \\ \cline{2-10}  & 8 bits & mod-2 & 0.0 & 0.076 & 0.091 & 0.096 & 0.111 & 0.102 \\  & (4-7) & (even) & & & & & & \\ \cline{2-10}  & 8 bits & mod-4 & 0.0 & 0.032 & 0.023 & 0.007 & 0.020 & 0.039 \\  & (4-7) & interleaved & & & & & & \\ \hline \hline  & 9 bits & none & 0.9 & 0.180 & 0.477 & 0.626 & 0.482 & 0.329 \\  & (0-8) & & & & & & & \\ \cline{2-10}  & 9 bits & none & 0.3 & 0.131 & 0.200 & 0.233 & 0.200 & 0.166 \\  & (6-8) & & & & & & & \\ \cline{2-10}  & 9 bits & mod-2 & 0.0 & 0.067 & 0.083 & 0.090 & 0.101 & 0.091 \\  & (6-8) & (even) & & & & & & \\ \cline{2-10}  & 9 bits & mod-4 & 0.0 & 0.036 & 0.025 & 0.016 & 0.025 & 0.036 \\  & (6-8) & two-word & & & & & & \\ \cline{2-10}  & 9 bits & dual mod-2 & 0.0 & 0.036 & 0.033 & 0.026 & 0.036 & 0.043 \\  & (6-8) & interleaved & & & & & & \\ \hline \hline \end{tabular}
\end{table}
Table 2: CP and JEP per-channel fake object rates for a range of burst-length spectra, dependent on word format (10-bit word, sensitive bits in parentheses) and error detection scheme. Original data are all zeros, with a bit-flip error mode. Rates are expressed relative to the underlying BER for each spectrum.

simple mod-2 parity does seem to reduce the fake trigger rate to \(\sim 10\%\) of BER or better for all of the spectra examined. The multi-word parity checks successfully check a proportion of the multi-bit errors; for example, for a Poissonian burst spectrum with \(\lambda=1\), going from mod-2 parity to mod-4 parity (over two consecutive words) reduces the fake rate in a CP-type word from \(0.111x\) to \(0.020x\) and in a JEP-type word from \(0.101x\) to \(0.025x\), where \(x\) is the prevailing BER. It seems that the distributed mod-4 scheme is slightly more effective than the interleaved mod-2 scheme.

### Alternative word formats

The default word format in the examples above placed the parity bit after the information (\(E_{\rm T}\)) bits of the word, and assumed that the information was transmitted LSB-first. The fact that the "sensitive" bits (in terms of forming an above-threshold trigger object) of the information part of the word are adjacent or close to the parity bit allows correlated corruption of the information and parity code to prevent the recognition of some significant errors. An alternative format was therefore evaluated, with the parity bits placed at the LSB end of a CP-type word, with the data following.

The rejection power of the error schemes under consideration for the CP system is shown against individual burst lengths in figure 3. This includes the formats of CP-type words, and

Figure 3: CP-link fake object probabilities vs burst length for a) no parity, b) mod-2 parity, c) 2-word mod-4 parity, and d) interleaved dual mod-2 parity. Each word contains 9 information bits, with bits 4–7 of the CP word sensitive.

the alternative placements of parity at bit 0 or bit 9 of the word. Error rejection is generally better for burst lengths of an odd number of bits, since the mod-2 parity is sensitive to an odd number of bits being corrupted, but not an even number. Rejection power tends to weaken as the bursts get longer, since there are more burst positions which will include the corruption of sensitive bits and there are also more possibilities to corrupt the parity in a way that masks the corruption of the information. For most burst lengths, placement of parity at bit 0 improves rejection compared to parity at bit 9 -- joint corruption of sensitive bits and the parity bit allows some fake objects to go undetected, but with parity further from the sensitive bits at bit 0, this is reduced for all but the longest bursts (which are a small proportion of the most realistic spectra). The performance of any burst spectrum can be formed from these figures (and similar for other word formats) by weighting the fake object probability for each burst length by its weight in the associated burst spectrum.

### Fake trigger rates

A comprehensive model of error rejection performance was put together using the available details of the hardware data paths and the options for format of the serial data transmitted. The numbers of channels -- link and backplane -- are as stated in table 1. The serial link words were 12 bits in length, including the two LVDS sync bits, and where appropriate were jointly encoded with a second (all-zero) data word under the \(n=2\) parity schemes. For each burst length and position, a transmitted data word was corrupted according to the selected error mode (bit-flip) and the resulting received word was tested for parity in order to determine whether the corruption was detected, and if not, whether the received word represented a significant fake trigger object. Burst lengths of \(m=1-12\) bits were considered under a variety of burst spectra.

For the backplane transmission, a word formatted as for the links was broken into _nibbles_ of 4 bits (CPB) or _pairs_ i.e. 2 bits (JPB). Each of the possible nibbles/pairs from a given word (3 CPB nibbles or 5 JPB pairs) was considered separately as a potential source of error, taking account of the fact that corresponding nibbles/pairs from consecutive frames might be part of two words which were jointly encoded in one of the \(n=2\) parity schemes. After corruption of the nibble/pair in question, words were then re-assembled (other nibbles/pairs un-corrupted) and the same parity check as for the link words was applied.

Figure 4 shows for simple mod-2 parity the variation of fake trigger rates as the Poisson spectrum parameter \(\lambda\) is scanned from \(10^{-2}\) to \(10^{1}\), covering spectra which have a progressively higher fraction of multi-bit burst errors. The fake trigger rates include the multiplicity of channels of each type, and are shown in Hz for a per-channel BER of \(10^{-9}\).

Figure 4.a) shows the fake trigger rates for the CP links and backplane, and their sum. For both, the placement of parity at either LSB (b0) or MSB (b9) positions is considered; the LSB position achieves a significant reduction in fake rate, more so for the backplane, where the nibble structure can completely separate the parity bit from the sensitive bits of the word. The CP fake trigger rate, \(R\), peaks for a \(\lambda\) value of 1, with \(R=28\) Hz for b9 parity placement, and \(R=22\) Hz for b0 placement. Note that for the case of dominant single-bit errors (approximated by \(\lambda=0.01\)) the CP fake trigger rate is reduced to a negligible \(1\) Hz.

Figure 4.b) shows the fake trigger rates for the JEP links and backplane, and their sum. The nominal JEP backplane will have no parity protection, and single-bit parity errors (prevalent at low-\(\lambda\)) are therefore unsuppressed; as \(\lambda\) increases the JPB fake rate in comparison to BER is only diminished by the rising average burst length. When combined with the JEP links (similar rates to CP links), this produces a JEP fake rate which peaks at \(\lambda=0.5\) with \(R=18\) Hz or \(R=16\) Hz for b9 and b0 parity placement respectively, and remains more or less flat even as single-bit errors become dominant. The option remains to include single-bit parity on the JEP

Figure 4: Fake trigger rates versus \(\lambda\) parameter for a shifted Poissonian burst length spectrum with simple mod-2 parity, and a per-channel BER of \(10^{-9}\). a) shows CP links and backplane, b) JEP links and backplane, and c) CP and JEP combined (note change in scale). The dark symbols indicate parity located at the MSB end of the information word (b9), and the hollow symbols indicated parity located at the LSB end of the information word (b0). In b) and c) the stars (\(\star\)) indicate absence of parity-checking on the JEP backplane, as currently foreseen.

backplane, and this produces a curve much like the CP backplane, but at a lower rate since there are only 1/3 as many JEP backplane channels as for the CP backplane. In this case, the peak JEP fake trigger rate could be reduced to \(R=12.5\) or \(10.5\,\mathrm{Hz}\) for b9 or b0 parity placement, and single-bit fake rates would again be negligible.

Figure 4.c) combines the estimates for the CP and JEP fake rates, where the former is dominant and "dilutes" the effect of the unprotected JEP backplane. The peak fake rates are \(R=45\,\mathrm{Hz}\) (b9) or \(37\,\mathrm{Hz}\) (b0) without JEP backplane parity, reduced to \(40.5\,\mathrm{Hz}\) or \(32.5\,\mathrm{Hz}\)_with_ parity protection on the JEP backplane. With single-bit errors, the unprotected JEP backplane dominates the fake trigger rate of \(\sim 16\,\mathrm{Hz}\), which falls to \(<2\,\mathrm{Hz}\) for all channels with mod-2 parity protection. Note that the worst-case error rate presented here (for a BER of \(10^{-9}\)) is a factor of \(\sim 5\) less than the specified upper limit on the fake rate of 1% of level-1 trigger rate. For single-bit errors, which may turn out to be a perfectly valid model of the actual Calorimeter Trigger error regime, the safety margin is doubled to an order of magnitude, for an average BER of \(10^{-9}\) on each link or backplane line. If single-bit parity protection is extended to the JEP backplane, this margin can be extended to two orders of magnitude, allowing a mean BER of up to \(10^{-7}\) to be tolerated.

Rather similar distributions to figure 4 were found for geometric burst spectra with the parameter scanned all the way from 0 (single-bit errors) to 1 (flat spectrum). Because these spectra tended to contain a higher proportion of both single-bit and maximum-length bursts than the Poissonian burst spectra, the worst-case fake trigger rate was generally about 20% below the worst case rate for the Poissonian spectra.

Figure 5 shows the benefits gained from a more complex \(n=2\) error scheme (both mod-4 and dual mod-2 are very similar in performance), again with Poissonian burst spectra. The low-\(\lambda\) spectra are greatly suppressed by the enhanced error rejection, resulting in a CP fake trigger rate of \(<\)10 Hz. The JEP backplane will still contribute a large fake trigger rate if unprotected, but the combined fake trigger rate is limited to \(17.5\,\mathrm{Hz}\) for b9 parity placement, or \(14.5\,\mathrm{Hz}\) for b0 parity placement, which is also the trigger rate in the limit of single-bit errors dominant. If the JEP backplane were also protected with \(n=2\) parity, the peak fake trigger rate would fall to \(12-13.5\,\mathrm{Hz}\), and the single-bit dominant error rate would be well below \(1\,\mathrm{Hz}\).

The total fake trigger rates for combinations of burst spectrum, word format and error-scheme are summarised in table 3. An additional scenario is included, in which there is no parity protection on any channel. In this case, the "raw" fake trigger rate would be \(132\,\mathrm{Hz}\times\mathrm{BER}/10^{-9}\) when the burst spectrum is dominated by single-bit errors (and progressively less as the mean burst length increases -- \(R=80\,\mathrm{Hz}\times\mathrm{BER}/10^{-9}\) for \(\lambda=1\)). This can be taken as a base-line against which to compare the non-trivial parity schemes. Simple mod-2 parity can reduce this by a factor of \(\sim 2\) with a worst case spectrum, or \(\sim 8\) for a single-bit dominant error regime. Inclusion of parity-checking on the JEP backplane can reduce the worst-case rate slightly, but will cut the single-bit fake trigger rate to \(\sim 1\%\) of the raw fake rate. By implementing two-word mod-4 parity (and thereby invoking a latency penalty) the fake trigger rate improvement is almost a factor of 10 over the raw fake rate, and reduced to practically zero when parity is implemented on all channels, including the JEP backplane. In all cases, a small advantage is to be achieved from using LSB (b0) parity placement.

### Error monitoring

In addition to the automatic rejection of a hopefully large proportion of errors, the detection of errors can be used to identify channels which have a systematic problem. Such error monitoring will be incorporated into the decoding of each channel, with a count of errors being returned regularly to the software which controls the Calorimeter Trigger. Channels which are identifiedFigure 5: Fake trigger rates versus \(\lambda\) parameter for a shifted Poissonian burst length spectrum with two-word mod-4 parity, and a per-channel BER of \(10^{-9}\). a) shows CP links and backplane, b) JEP links and backplane, and c) CP and JEP combined (note change in scale). The dark symbols indicate parity located at the MSB end of the information word (b9), and the hollow symbols indicated parity located at the LSB end of the information word (b0). In b) and c) the stars (\(\star\)) indicate absence of parity-checking on the JEP backplane, as currently foreseen.

as persistent sources of data errors will be disabled, to be repaired when possible. For all the scenarios examined, any of the schemes identifies at least 50% of errors, and so any noisy channel should be apparent. An accurate measurement of BER will not be possible, due to the inefficiency of error detection (and its dependence on burst length) but a count of trapped errors in a fixed period of time is sufficient. Since the BER per channel is expected to be several orders of magnitude below the level at which the fake trigger rate becomes significant, one can allow a relatively loose limit for the error rate a channel can sustain. If it is assumed that the system has less than 1% of channels that are error-prone, then an upper limit to the error rate per channel of \(\sim\!2\,\mathrm{Hz}\), corresponding to a BER of \(\sim\!10^{-6}\), might be permitted before the channel is closed down.

## 5 Conclusions

A detailed software model of the serial data within the ATLAS Level-1 Calorimeter Trigger has been constructed. The parity-encoding of serial data will be maintained across a multi-stage data path, decoded at the ASIC or FPGA which uses the data for the cluster- or jet-finding algorithms. Bandwidth limitations constrain error protection to simple \([10n,9n]\) block codes, where \(n\) is a multiple of words over which parity codes may be distributed. Latency limitations strongly disfavour \(n>2\). The structure of the data words and the trigger criteria reduce sensitivity to data corruption in terms of the rates of fake triggers generated. An important consideration in the assessment of real errors is the inclusion of multi-bit burst errors which corrupt a sequence of bits in a serial data-stream.

When presented with a spectrum of burst error lengths, simple mod-2 parity achieves a reduction in fake trigger rate by a factor of \(\sim\!2\), rising to \(\sim 8\) when single-bit errors are dominant. However, the current default design has no parity on the JEP backplane, and in error regimes

\begin{table}
\begin{tabular}{|l||l|l|l|r|r|r|} \hline \hline \multicolumn{6}{|c||}{Word format} & \multicolumn{2}{c|}{Burst spectrum} \\ \hline Data & \multicolumn{4}{c|}{Error scheme} & \multicolumn{2}{c|}{Poissonian} \\ format & \multicolumn{2}{c|}{CPL} & \multicolumn{2}{c|}{CPB} & \multicolumn{2}{c|}{JPL} & \multicolumn{2}{c|}{JPB} & \multicolumn{2}{c|}{*single-bit”} & \multicolumn{2}{c|}{*worst-case”} \\ \hline \hline No parity & none & none & none & none & 132.3 Hz & **—** \\ \hline \hline Parity b9 & mod-2 & mod-2 & mod-2 & none & 16.1 Hz & 45.3 Hz \\ Parity b0 & mod-2 & mod-2 & mod-2 & none & 15.7 Hz & 37.0 Hz \\ \hline Parity b9 & mod-2 & mod-2 & mod-2 & mod-2 & 1.5 Hz & 40.5 Hz \\ Parity b0 & mod-2 & mod-2 & mod-2 & mod-2 & 1.2 Hz & 32.6 Hz \\ \hline \hline Parity b9 & mod-4s & mod-4s & mod-4s & none & 14.7 Hz & 17.4 Hz \\ Parity b0 & mod-4s & mod-4s & mod-4s & none & 14.6 Hz & 14.7 Hz \\ \hline Parity b9 & mod-4s & mod-4s & mod-4s & mod-4s & 0.0 Hz & 13.5 Hz \\ Parity b0 & mod-4s & mod-4s & mod-4s & mod-4s & 0.1 Hz & 12.0 Hz \\ \hline \hline Parity b9 & mod-2i & mod-2i & mod-2i & none & 14.8 Hz & 16.6 Hz \\ Parity b0 & mod-2i & mod-2i & mod-2i & none & 14.7 Hz & 14.1 Hz \\ \hline Parity b9 & mod-2i & mod-2i & mod-2i & mod-2i & 0.2 Hz & 13.3 Hz \\ Parity b0 & mod-2i & mod-2i & mod-2i & mod-2i & 0.1 Hz & 12.7 Hz \\ \hline \hline \end{tabular}
\end{table}
Table 3: Comparison of combined CP+JEP fake trigger rates with alternative placements of parity bit at either b9 (adjacent to MSB of information) or b0 (adjacent to LSB of information). Abbreviations of mod-4s and mod-2i are used to indicate the mod-4 distributed scheme and the dual mod-2 interleaved scheme respectively. Fake trigger rates are shown for average BER of \(10^{-9}\) on all channels, both serial links and backplane. “Worst-case” indicates the maximum fake trigger rate found when the Poissonian spectrum parameter was scanned from 0.01 to 10.

where parity-checking is very effective, the JEP backplane fake trigger rate of \(15\,\mathrm{Hz}\times\mathrm{BER}/10^{-9}\) is the dominant contribution. Distributed multi-bit parity schemes -- such as mod-4 or dual mod-2 interleaved -- improve the fake rejection to \(\sim 5\), rising to \(\sim 10\) for single-bit dominant errors, but at the cost of two additional cycles of latency.

In all cases odd parity is favoured over even parity, since it provides guaranteed bit transitions which assist with link synchronization and automatic dead link detection. In terms of word format, there is a reduction of fake trigger rate when parity is located at the LSB end of the word rather than adjacent to the MSB, since joint corruption of sensitive bits _and_ the parity code is much reduced.

Single-bit mod-2 odd parity located at the LSB end of the word is therefore recommended as sufficient to provide i) some reduction in fake triggers, ii) a means of detecting error rates from which to monitor and control problem channels. This latter capability allows the detection and monitoring of systematic high-rate channels, which can be suppressed if necessary. With this error detection scheme in place, the fake trigger rate is unlikely to exceed \(40\,\mathrm{Hz}\times BER/10^{-9}\) and will be smaller by a factor of \(\sim 2\) if the spectrum is dominated by single-bit errors, which is a likely error regime. In this case, the fake trigger rate is dominated by the unprotected JEP backplane; implementing mod-2 parity on this backplane can further reduce the fake trigger rate to \(1.2\,\mathrm{Hz}\times BER/10^{-9}\). A further point is that in this model the fake triggers occur randomly in all bunch-crossings; in the real ATLAS environment up to 20% of fake triggers will be identifiable as such by their occurrence in non-beam bunch-crossings and can therefore be rejected by the central trigger processor.

In conclusion, the target fake trigger rate of \(<1\%\) of total level-1 trigger rate will be met for serial channels with an average BER of \(5\cdot 10^{-8}\) or below, for any burst spectrum, with an average BER of as high as \(10^{-7}\) being tolerable if single-bit burst errors are dominant. Any channel which generates detected errors at this level or above should be suppressed to prevent the proportion of fake triggers from exceeding 1% of the total. The selected technologies for serial data transmission in the Level-1 Calorimeter Trigger are very likely to improve upon this BER limit by several orders of magnitude; preliminary measurements of data integrity on LVDS serial links and CMOS backplanes have shown BERs of \(<\!10^{-13}\).

## References

* [1] ATLAS Level-1 Trigger Group, 'Level-1 Trigger Technical Design Report', ATLAS TDR-12, CERN/LHCC/98-14 (June 1998).
Jet Reconstruction at the ATLAS Second Level Trigger

S. Tapproogge (CERN)

30 June 1998

This note describes a first study of jet treatment at the ATLAS second level trigger using fully simulated and reconstructed generated events. A first implementation of a CONE jet algorithm using (preprocessed) full granularity calorimeter information in the ATRIG framework is presented. Using simulated files from the ATLAS jet production, the performance of the LVL2 jet algorithm in terms of energy and position reconstruction is studied and the rate reduction possible at LVL2 (in comparison to LVL1) is investigated. No optimization of the parameters available has been attempted.

_Jet Reconstruction at the ATLAS Second Level Trigger ATLAS internal note Version 1.2 306/98_

## 1 Introduction

The aim of treating jets at LVL2 is to reduce the rate of events containing jets by improving the measurement of jet energies and positions. This improvement in rate reduction and selectivity has to be balanced with the amount of data transfer needed to get the calorimeter data necessary from the read-out buffers to the LVL2 system. It is important to keep in mind that in contrast to e.m. clusters, jets cannot be flagged as background. This would require a reconstruction of exclusive final states which is not foreseen at LVL2.

The improvement in the jet measurement is achieved by a refined energy calibration, a refined jet definition and detailed threshold adjustments. At the same time the data transfer from the read-out buffers to the LVL2 system has to be minimized. This could be achieved by projecting all calorimeter cells - before transferring the data - into trigger towers (e.g. of size 0.1"0.1 in \(\eta\)*\(\phi\)).

Previous studies of jet rates at LVL2 only considered fast simulations of the ATLAS detector. This study uses for the first time fully simulated di-jet events obtained from PYTHIA and takes place in the ATRIG framework. The response of LVL1 is simulated using the corresponding ATRIG routines, code has been added to ATRIG to include the processing of jets at LVL2 using the full granularity of the ATLAS calorimetry.

Not addressed in this note will be the question of the actual load on the LVL2 system due to the need of data transfer for the jet processing. This aspect of the processing of jets at LVL2 will be studied in the LVL2 Pilot Project, in close connection with the Trigger Performance Group.

This note is organised as follows: the next section contains a description of the datasets used to study the jet reconstruction at LVL2. The third section describes the reference jet algorithms used, followed by the description of the LVL1 jet algorithm and the differences to the LVL1 TDR version. Next the LVL2 jet algorithm and the preprocessing is presented, followed by a compilation of the results obtained so far. After a discussion of topics to be studied in the future, the results of the study of jets at LVL2 are summarized.

_Jet Reconstruction at the ATLAS Second Level Trigger_

_Version 1.2 306/98_

## 2 Datasets

In this section the datasets used for the study of jets at LVL2 are described, explaining the parameters used for the generation of the PYTHIA events and the method used to select those candidates subjected to a full simulation. Finally the effects taken into account during reconstruction of the events are listed.

### Generated PYTHIA events

The results presented in this section have been obtained using events generated by PYTHIA [8], where all hard scattering processes within the Standard Model were taken into account. The events were generated with cuts on the hard scattering of \(\mathrm{p_{T}>17\,GeV}\) and a maximal pseudo-rapidity of \(\left|\eta\right|<7\), corresponding to a total cross section of 1.07 mb.

### Particle level 'di-jet' filter

In order to reduce the amount of CPU time needed for the simulation, a 'di-jet filter' was applied on particle level. All events to be simulated were demanded to contain at least two regions (of size 1.0*1.0) inside the pseudorapidity range of \(\left|\eta\right|<3.2\) in each of which the summed transverse energy of all particles was above 40 GeV.

It is important to note that the di-jet particle filter leads to a bias in the inclusive jet rate, which is underestimating the true rate. (Configurations where one of the two leading jets is outside the ATLAS acceptance of \(\left|\eta\right|<3.2\) are not selected by the particle level filter and thus can not contribute to the inclusive jet rate.)

### Simulation and reconstruction

The selected events (about 10000 out of 390000 generated PYTHIA events) have then been passed through a full simulation of the ATLAS detector [9, 10]. For the simulation, only particles within \(\left|\eta\right|<3.4\) were taken into account to further reduce the amount of CPU time needed. The tapes [16] used are the following: Y00301-Y00308 (files 1-40), Y00309 (files 1-29) and Y00344 (files 1-40), being simulated with DICE version 97_6.

After the simulation and digitization of the detector signals, electronic noise has been added to each calorimeter cell, according to the expected values as described in [11].

### Validity of simulation

The files used give valid results only for the case of low luminosity (\(10^{33}\,\mathrm{cm}^{-2}\mathrm{s}^{-1}\)), since for this study, the effect of pile-up due to multiple interactions per bunch-crossing has been ignored.

## Events from a minimum bias simulation

In order to estimate the contribution to the jet rate from minimum bias events, a set of fully simulated minimum bias events (about 3200 events) was subjected to the same procedure as described in the next section. The total cross-section for these events corresponds to 70 mb and the tapes [18] used are: LT00035 (files 13-15).

## Events from another di-jet production

For cross-checks, the di-jet selection from the ATLAS 96/97 jet production [6] was used (tapes [17] LL00078 (files 1-32) and LL00088 (files 1-61), DICE version 97_6). These files were however not used to determine jet rates, since the di-jet particle filter has a bias1. In comparison to the tapes Y003nn mentioned above, these events were generated with a cut of \(\mid\eta\mid<2.7\) on the hard scattering. About 19000 events passed the di-jet particle level filter, out of about 940000 generated PYTHIA events.

## 3 Definition of the reference jets

This section contains the description of the reference jets used for comparison and efficiency determination in Section 6. The selection of particles is described, followed by an explanation of the two algorithms used and a comparison of their relative performance. The section is concluded by a compilation of the expected rates (on particle level) from these algorithms.

### Input to the jet algorithms

The reference jets used for comparison were obtained from the list of particles generated by PYTHIA (excluding neutrinos and muons and using only those particles with \(\,\mathrm{l}\,\mathrm{\eta}\,\mathrm{l}\,<\,3.2\)). On this set of particles two jet algorithms were run: (a) a CONE algorithm and (b) a \(\mathrm{k}_{\mathrm{T}}\) algorithm. Since the KINE bank also contains particles created during the tracking process of GEANT, it was required that the particles used have to originate from the primary vertex.

### Description of the CONE algorithm

The CONE algorithm (taken from the jet finder library [14]) starts by searching for a seed particle with an energy above the seed threshold (\(\mathrm{E}_{\mathrm{T}}>1\) GeV). The seed with the maximal \(\mathrm{E}_{\mathrm{T}}\) is taken and a cone of radius 0.4 drawn around the seed position. The (transverse) energy of all particles inside the cone is summed and if the sum is above a threshold (set to 15 GeV in this case), a jet is found. The energy of the jet is the energy inside the cone, the coordinates are the energy weighted \(\eta\) and \(\phi\) coordinates of all particles inside the cone. The seed with the next highest energy is taken and a new cone drawn, until all seeds have been treated.

In the version of the CONE algorithm used, no iteration on the position of the jet is done. (e.g. by taking the energy weighted position as the direction for the new cone and repeating the procedure until some convergence has been achieved.) Also the case of overlapping cones is not resolved.

### Description of the \(\mathrm{k}_{\mathrm{T}}\) algorithm

The \(\mathrm{k}_{\mathrm{T}}\) algorithm is, in contrast to CONE type algorithms, a clustering algorithm, which implies by definition an unambiguous and exhaustive assignment of particles to jets. For hadron collisions, different implementations of clustering algorithms (being invariant under longitudinal boosts) have been proposed, differing mainly in the definition of "closeness" between two particles and the definition of the merging scheme for two particles. In comparison to e*e' annihilation, where clustering algorithms are widely used, in hadron collisions care has to be taken to include the effect of the beam remnant systems.

The implementation used in this study (Montreal \(\mathrm{k}_{\mathrm{T}}\) algorithm from the jet finder library [14]) is based on [12] and can be summarized as follows:

* all particles form a list of so-called "proto-jets"* for each pair (i,k) of proto-jets, a distance d\({}_{\rm ik}\) between the two proto-jets is defined by \({\rm d}_{\rm ik}={\rm min}({\rm E}^{2}{\rm T}_{\rm 1};{\rm E}^{2}{\rm T}_{\rm k})* ((\Delta{\rm n}_{\rm ik})^{2}+(\Delta{\rm o}_{\rm ik})^{2})\)
* for each proto-jet, a distance d\({}_{\rm iB}\) to the beam axis is defined by \({\rm d}_{\rm iB}={\rm E}^{2}{\rm T}_{\rm 1}\;{\rm R}^{2}\), where R is the resolution parameter
* the minimum value of all d\({}_{\rm ik}\) and d\({}_{\rm iB}\) is denoted d\({}_{\rm min}\)
* if d\({}_{\rm min}\) is one of the d\({}_{\rm iB}\) then the proto-jet is not mergeable and is added to the list of jets found (and removed from the list of proto-jets)
* if d\({}_{\rm min}\) is one of the d\({}_{\rm ik}\), then the two proto-jets are merged into a new proto-jet (and removed from the list of proto-jets) using the combination scheme:
* \({\rm E}_{\rm T}={\rm E}_{\rm T\,i}+{\rm E}_{\rm T\,k}\)
* \(\eta=({\rm E}_{\rm T\,i}\,\eta_{\rm i}+{\rm E}_{\rm T\,k}\,\eta_{\rm k})\) / \({\rm E}_{\rm T}\)
* \(\phi=({\rm E}_{\rm T\,i}\,\phi_{\rm i}+{\rm E}_{\rm T\,k}\,\phi_{\rm k})\) / \({\rm E}_{\rm T}\)
* the procedure is repeated until no more proto-jets are left

## Comparison between CONE and \(\rm k_{T}\)

As shown in [19], for a choice of R = 1.35 * R\({}_{\rm CONE}\) the cross-section (calculated to \(O(\alpha^{3}{}_{\rm S})\)) for the \(\rm k_{T}\) algorithm is identical to the one calculated using a CONE algorithm with radius R\({}_{\rm CONE}\) for a C.M.S. energy of 1.8 TeV and for \({\rm E}_{\rm T}\) = 100 GeV. A natural choice for the resolution parameter is to be of order unity, this then leads to a corresponding cone radius of 0.7. In the present study, a smaller cone size (0.4) and thus a smaller value for the resolution parameter R = 1.35 * 0.4 was used.

To study the effect of the differences in the jet definition between the CONE and the \(\rm k_{T}\) algorithm, jets were defined on particle level using the \(\rm k_{T}\) algorithm with the resolution parameter set to R=1.35 * 0.4. Next the efficiency to find such a jet by running a CONE algorithm (with R\({}_{\rm CONE}\) = 0.4 and \({\rm E}_{\rm T\,seed}\) = 1 GeV) was determined as a function of the threshold applied on the \(\rm E_{T}\) of the CONE jet. Figure 1 shows the efficiency for 40, 60 and 80 GeV \(\rm k_{T}\) jets, Figure 2 the ones for a 100, 140 and 180 GeV \(\rm k_{T}\) jets, as a function of the energy threshold apply the CONE jet. In all cases, the threshold curve rises steeply around the nominal jet energy, it reaches however the 100 % plateau only slowly. For example, 95 % efficiency is reached for a 80 (180) GeV \(\rm k_{T}\) jet only for a threshold value on the energy inside the cone of 55 (150) GeV.

## Jet rates from generated particles

Using the KINE information on the tapes Y003nn mentioned in the previous section, jet rates have been derived both for the CONE algorithm (R\({}_{\rm CONE}\) = 0.4) and the \(\rm k_{T}\) algorithm (R = 1.35 * 0.4). Figure 3 shows the rates of events with at least one jet, at least two, at least three and at least four jets, obtained from the CONE algorithm. In Figure 4 the corresponding rates as determined using the \(\rm k_{T}\) algorithm are shown. As mentioned in the previous section, the inclusive jet rate is biased due to the particle level filter and can only be used as a lower limit to the actual inclusive jet rate. The multi-jet rates should not be affected by this filter (for jet energies above 50 GeV). Between the rates for events with \(\geq\) n+1 and \(\geq\) n jets (n = 2,3) the rate differs by roughly one order of magnitude, the ratio of the inclusive to the \(\geq\) 2 jet rate is approximately a factor of 4. The rate obtained using the \(\rm k_{T}\) algorithm is found to be always larger than the one of the CONE algorithm, the effect being most pronounced at small energies and low jet multiplicities.

## Uncertainties on the jet rates

Not mentioned nor studied in this note are the uncertainties on the jet rates, either from purely theoretical source, like:

* renormalisation and factorisation scale dependence
* higher order corrections
* parton densities functions
* description of the underlying event 

[MISSING_PAGE_EMPTY:10]

## 4 Jet algorithm used for LVL1

This section contains a brief description of the LVL1 jet algorithm used to generate the RoIs for the LVL2 algorithm. The emphasis is on the differences to the algorithm as described in the LVL1 TDR.

### ATRIG version used

The studies presented in this note are based on ATRIG [20] (version 4.02/01), which does not contain the latest version of the LVL1 jet algorithm as presented in [13].

### LVL1 algorithm description

The LVL1 jet algorithm (as described in the LVL1 TDR [13]) offers the possibility to define 3 different window sizes, all derived from the same basic granularity of \(0.2*0.2\) in \(\eta*\phi\), also called a trigger tower. The sizes of the window are either \(0.4*0.4\), \(0.6*0.6\) or \(0.8*0.8\) in \(\eta*\phi\), where always the window is sliding by 0.2 in both directions. The basic unit in the LVL1 calorimeter trigger are trigger towers of \(0.1*0.1\), which are digitised with 8 bit resolution, leading for a maximal energy of \(255\,\mathrm{GeV}\) per trigger tower to a least significant bit corresponding to \(1\,\mathrm{GeV}\) (and thus an effective energy cut of \(1\,\mathrm{GeV}\) per trigger tower).

### LVL1 algorithm performance

As shown in the LVL1 TDR [13] the resolution of the LVL1 jet algorithm leads for 100 GeV jets (in the case of low luminosity) to an efficiency of 95 % with respect to a \(\mathrm{k_{T}}\) algorithm on KINE particles for a threshold of 65 GeV on the LVL1 jet energy.

### Differences to LVL1 TDR algorithm

As mentioned above, the version of ATRIG used does not contain this latest version, but only an earlier version based on a window of \(0.8*0.8\), sliding by 0.4 in each direction. No BCID algorithm is applied, the digitization however is correctly done. The effect of the missing BCID is expected not to be very significant in the study present in this note since here only the case of low luminosity is considered. Thus the effects of pile-up are negligible, however the BCID algorithm leads also to a reduction of noise. The latter effect might imply that the ATRIG LVL1 algorithm has a worse resolution than the one described in the LVL1 TDR. The threshold for the LVL1 jets has been set deliberately low to ensure a 100 % efficient algorithm for low energy jets (above 40 GeV).

## Performance of the LVL1 jet algorithm

The energy seen by the LVL1 jet algorithm, as used in the study presented, is compared to the nominal jet energy from a CONE reference algorithm (taking all reference jets with more than 40 GeV energy). Figure 1 shows the relative deviation of the LVL1 jet RoI energy as a function of the nominal jet energy. The difference amounts to about -45 % for small energies (around 50 GeV) and decreases to a deviation of about -25 % for energies above 150 GeV. This indicates a missing jet energy calibration in the LVL1 algorithm used, which was not needed in the case of the results presented in [13]. Figure 2 shows the deviation as a function of the nominal \(\eta\), Figure 3 the deviation as a function of \(\phi\). The \(\phi\) distribution is almost flat, in the case of \(\eta\) some more variations are visible. The relative variation of the deviation is always below 10 %. The algorithm, as used in ATRIG, has been optimized (in terms of the energy scale) only for electromagnetic clusters, for jets this has to be investigated in the future, once the most recent version of the algorithm is implemented in ATRIG.

Figure 1: Dependence of the relative deviation of the reconstructed jet energy at LVL1 with respect to the reference jet found by the CONE algorithm on KINE particles as a function of \(\phi\).

Figure 3: Dependence of the relative deviation of the reconstructed jet energy at LVL1 with respect to the reference jet found by the CONE algorithm on KINE particles as a function of \(\phi\).

Figure 2: Dependence of the relative deviation of the reconstructed jet energy at LVL1 with respect to the reference jet found by the CONE algorithm on KINE particles as a function of \(\eta\).

## 5 Jet algorithm used for LVL2

In this section the jet algorithm and its parameters as implemented for LVL2 are described. Some details are given concerning the actual implementation in ATRIG.

### Preprocessing of calorimeter data

The calorimeter cells (\(\mid\eta\mid\)\(<\) 3.2) obtained from the full simulation were summed onto a matrix of trigger towers of size 0.1 * 0.1. Only those calorimeter cells have been used which pass an energy cut corresponding to twice the sigma of the expected electronic noise contribution. In the case of jets, which are defined by larger windows than e.g. in the case of e.m. clusters, the noise cut is of great importance due to the large number of cells (esp. for the e.m. calorimeters) involved. The projection includes a weighting procedure1 for the hadronic and electromagnetic parts of the calorimeters to optimise the response to jets, given the non-compensating ATLAS calorimetry.

Footnote 1: For the e.m. calorimeters (preshower, accordion and e.m. end cap) this factor is 1.1, for the tile calorimeter it amounts to 1.05 and for the hadronic endcap it is 1.25. At present no \(\eta\) dependent factors are used, except for a correction of the transition region around \(\mid\eta\mid\) = 1.5 between the barrel and the endcap parts.

### CONE algorithm on trigger tower matrix

For a given LVL1 RoI, a window around the RoI direction with a size of 1.0 * 1.0 was selected and a CONE algorithm (with radius R = 0.4 and seed threshold of 1 GeV) was run on the trigger towers inside this window. If the algorithm found more than one jet inside the RoI window, the one with the maximal E\({}_{\mathrm{T}}\) was selected.

### Available parameters

The following list shows the parameters available at the present implementation which can be used to optimise the processing of jets at LVL2:

* cell energy cut (noise cut) besides the size of the window also the cut on the minimum cell energy influences the amount of data to be transferred to the LVL2, if this cut is performed already in ROBs. Also the sensitivity to electronic noise and pile-up can be reduced, at the expense of cutting (for large thresholds) on part of the true jet energy (mostly relevant for low E\({}_{\mathrm{T}}\) jets)
* trigger tower size the size of the trigger tower directly influences the amount of data transfer needed, the larger a trigger tower can be chosen, the less data needs to be transferred. On the other hand, larger trigger towers imply a loss in position resolution. The energymeasurement should not be affected that much, given that a cell-by-cell calibration - if needed - can be performed before the summation is done.
* trigger tower energy cut before transferring the information of a trigger tower, a cut could be performed on its energy. It is not clear what the implications of such a cut are, at least the threshold (for a trigger tower size of e.g. \(0.1*0.1\)) would have to be significantly less than 1 GeV in order not to reproduce the LVL1 situation. One possible application could be the suppression of common mode effects, leading to a correlated shift in the energies of several cells.
* window size for LVL2 jet algorithm the amount of data transfer needed scales directly with the size of the window inside which the LVL2 jet algorithm is run. In the case of a CONE algorithm, the minimal window size is given by the radius used for the algorithm. Probably it is better to allow for a somewhat larger window (e.g. \(1.0*1.0\) for a CONE with radius 0.4) since the position of a jet does not need to coincide with the window center. Thus losses of jet energy (outside the window transferred to LVL2) can be minimised.
* cone size of LVL2 algorithm the size of the cone is certainly the most physics related parameter for a jet algorithm. From a theoretical point of view, a cone size of 0.7 (corresponding to a \(\mathrm{k_{T}}\) resolution parameter of 1) seems to be favoured (at least at TEVATRON energies). Given the amount of pile-up expected especially at high luminosity, a smaller cone size might be preferable. This parameter has to be chosen very carefully in order to avoid any biases for a certain physics channel.
* maybe in the same RoI
- will be found, if it is too high, low energy jets (or jets with large fluctuations in the energy deposition) might be lost.

The above discussed parameters have to be determined by an optimisation procedure, not only taking into account the physics performance, but also the "cost" of the jet algorithm in terms of the load on the LVL2 system and the associated network bandwidth. These studies will be performed in the framework of the LVL2 Pilot Project, using online (C or C++) versions of the algorithm together will an emulation of the ROBs.

## Implementation in ATRIG

The implementation of the LVL2 jet algorithm followed closely the program structure used in the case of e.m. cluster FEX at LVL2. First, for a given RoI (and window size), two internal arrays are filled, containing the energies and positions of the calorimeter cells inside the window selected. One array contains all e.m. cells (from the pre-shower, the accordion and the e.m. endcap calorimeter), the second one holds the hadronic cells from the tile-calorimeter and the hadronic endcap.

In order not to bias the LVL1 algorithm by applying a noise cut (during the CALOUNPK step), no noise cut is applied to the cells using the DETP cards. However, in the process of filling the above mentioned cell matrices for the LVL2 jet processing, a \(2\,\sigma\) noise cut is applied on all cells.

When doing the pre-summation into the matrix of trigger towers (of size \(0.1*0.1\)), the weighting procedure to obtain a better jet response is done. It should be noted, that no QCERACK correction for the crack at \(|\eta|=1.5\) is performed, this is done later directly on the n-tuple variables. In Section 6 the effect of this correction will be described in detail.

The following list contains the most important variables written to the n-tuple:

* for each LVL1 RoI:
* (transverse) energy in LVL1 window
* \(\eta\) and \(\phi\) coordinates
* for each jet found from a LVL1 RoI (in case that there is more than one jet found inside a given RoI window, the one with the highest transverse energy is retained):
* (transverse) energy
* \(\eta\) and \(\phi\) coordinates
* number of (sub-)jets inside the same RoI window
* for each RoI window, a CONE algorithm is run on KINE particles (generated from PYTHIA, not during the GEANT simulation) within this window, storing for each jet found the following quantities (also here in case of multiple jets, only the one with the highest transverse energy is kept):
* (transverse) energy
* \(\eta\) and \(\phi\) coordinates
* number of (sub-)jets inside the same window
* for each jet found by running a CONE algorithm (radius 0.4) and a \(k_{T}\) algorithm (resolution parameter \(1.35*0.4\)) on all KINE particles within \(|\eta|<3.2\):
* (transverse) energy
* \(\eta\) and \(\phi\) coordinates

With the settings chosen, it happens only in a few per cent of all events that in a RoI more than one jet is found.

_Jet Reconstruction at the ATLAS Second Level Trigger ATLAS internal note Version 1.2 306/98_

## 6 Results

This section contains the results from the study performed. Firstly the efficiency for matching a LVL1 RoI / a LVL2 jet to a reference jet is presented. From this a cut on the matching distance is derived which is used for the rest of the section. Next, the position reconstruction quality is discussed, followed by a description of the quality of the energy measurement. Here some details about the correction for the barrel / endcap crack are given. In the following the jet finding efficiency as a function of the jet energy threshold is determined and used to obtain jet rates. The last section compares the LVL2 jet rates obtained to those from LVL1.

### Efficiency to find a matching Rol / jet

The reconstruction quality of the LVL2 algorithm was studied by selecting an isolated reference jet from the CONE algorithm (requiring no further jet within \(\Delta\)R = 1). Next a matching LVL1 RoI as well as a matching LVL2 jet, based on a LVL1 RoI, were searched as a function of the distance \(\Delta\)R=((\(\eta\)(jet)-\(\eta\)(ref.))\({}^{2}\) + (\(\phi\)(jet)-\(\phi\)(ref.)\({}^{2}\))\({}^{1/2}\) in the \(\eta\)\(-\)\(\phi\) plane. Figure 2 shows the efficiency to find a matching Rol as a function of \(\Delta\)R, in Figure 2 the corresponding efficiency for a LVL2 jet is shown. The efficiency in the case of a LVL1 RoI reaches the 100 % plateau for values of \(\Delta\)R larger than 0.4, in the case of LVL2 jets, the plateau is reached faster (100 % efficiency already for \(\Delta\)R > 0.2). No dependence on the jet energy is observed, the efficiency curves for 50, 100 and 150 GeV jets overlap almost completely.

A value of 0.4 for the matching distance was used in the following to find for a given reference jet a matching LVL1 jet RoI and a value of 0.2 for finding matching LVL2 jets.

## Reconstruction quality

In this paragraph the differences between the position of the reference jet and the LVL2 jet are investigated. The first Figure 3 shows the deviation of \(\eta\)(jet) the reconstructed to \(\eta\)(ref.) of the reference jet. A fit of a Gaussian to the distribution gives a resolution of \(\sigma=0.030\) for \(\eta\). Figure 4 shows the difference for between \(\phi\)(jet) of the LVL2 jet and \(\phi\)(ref.) of the reference jet, leading to a resolution of \(\sigma=0.025\) for \(\phi\). Clearly visible are more pronounced tails in the case of the \(\Delta\phi\) distribution which are due to the effect of the magnetic field. The distance \(\Delta R=(\) (\(\eta\)(jet)-\(\eta\)(ref.))\({}^{2}+(\phi\)(jet)-\(\phi\)(ref.)\({}^{2})\)\({}^{1/2}\) between the reconstructed and the reference jet in the \(\eta\)\(\phi\) plane is shown in Figure 5 for the case of the LVL1 jet RoI and in Figure 6 for the case of the LVL2 jet. The mean of the distribution is about 0.17 for the LVL1 RoI and about 0.036 for the LVL2 jet, which is clearly an improvement at LVL2 with respect to the LVL1 resolution. This improvement in spatial resolution is important for the separation of nearby jets and the possible calculation of invariant masses of jets. The resolution obtained is close to the expectation for the off-line reconstruction.

## Energy correlation: reference - reconstructed jet

In Figure 7 the correlation between the energy of a jet defined using a CONE algorithm on particles from the KINE information with the energy inside the LVL1 jet RoI (requiring a match in the \(\eta\)\(\phi\) plane of less than 0.4) is shown. Besides the clear correlation of the two energies the broadening of the distribution at small E\({}_{\rm T}\) is visible and also the fact, that in the ATRIG LVL1 algorithm, when run on fully simulated data, the energy actually reconstructed for the LVL1 RoI is small (about 50 %) compared the energy of the reference jet.

The corresponding relation for the jets found at LVL2 (matching cut of less than 0.2) is shown in Figure 8. Here also a good correlation of the energies is observed, however in this case there is much better agreement between the reconstructed and the reference energies. This is partially due to the additional "calibration" applied on the n-tuple information, as discussed in details in the following paragraphs.

Figure 5: Resolution in AR of the LVL1 jet RoI algorithm. Shown is the difference in the n*\(\phi\) plane (\(\Delta\)R = ((n(RoI)-\(\eta\)(ref.))\({}^{2}\) + (\(\phi\)(RoI)-\(\phi\)(ref.)\({}^{2}\) )\({}^{1/2}\)) between the LVL1 RoI and the reference jet obtained from the CONE algorithm.

[MISSING_PAGE_EMPTY:20]

ed jet. The threshold behaviour shows a sharp rise towards a plateau of 100 % efficiency. A value of 95 % (90 %) for the efficiency is reached for a threshold being about 10 (3) \(\mathrm{GeV}\) smaller than the nominal \(\mathrm{E_{T}}\) of the jet.

Figure 11: Dependence of the relative deviation of the reconstructed jet energy at LVL2 with respect to the reference jet found by the CONE algorithm on KINE particles as a function of \(\eta\), before the additional “calibration”.

Figure 14: Dependence of the relative deviation of the reconstructed jet energy at LVL2 with respect to the reference jet found by the CONE algorithm on KINE particles as a function of \(\phi\), after the additional “calibration”.

Figure 12: Dependence of the relative deviation of the reconstructed jet energy at LVL2 with respect to the reference jet found by the CONE algorithm on KINE particles as a function of \(\eta\), after the additional “calibration”.

Figure 13: Dependence of the relative deviation of the reconstructed jet energy at LVL2 with respect to the reference jet found by the CONE algorithm on KINE particles as a function of \(\phi\), before the additional “calibration”.

In Figure 16 the corresponding efficiency is shown for jets of 50, 100 and 150 GeV nominal energy, this time however the reference jet is defined using the \(\mathrm{k_{T}}\) algorithm on particle level. Clear differences are observed with respect to Figure 16: the threshold behaviour is less sharp and a value of 95 % (90 %) for the efficiency is reached only for a threshold on the LVL2 jet energy being about 30 (18) GeV smaller than the reference jet energy. The value of 30 GeV for 95 % efficiency (in the case of the \(\mathrm{k_{T}}\) algorithm) is in the same order as the one obtained from the comparison between \(\mathrm{k_{T}}\) and CONE algorithms on particle level as discussed in Section 3, whereas the value for the CONE of about 10 GeV as given in the previous paragraph is much smaller and dominated by detector resolution effects. In the following, the CONE algorithm will therefore be used as reference to avoid biases due to the jet definition.

## Jet rates

Using the procedure as described above to determine the threshold needed for a given value of the efficiency for reference jets (from the CONE algorithm on particle level) with fixed \(\mathrm{E_{T}}\) between 50 and 200 GeV, a relation between the \(\mathrm{E_{T}}\) of the reference jet and the threshold to be applied on the reconstructed transverse energy for the LVL2 algorithm is obtained. The efficiency of the LVL2 algorithm with respect to the reference algorithm was required to be 90 %. A similar procedure was performed for LVL1, where the thresholds for the algorithm were chosen to be 95 % efficient with respect to the same reference algorithm. This gives a relative efficiency for LVL2 of 95 % with respect to LVL1.The relation between the energy threshold for the LVL1 jet RoI as a function of the nominal jet energy (both for CONE and \(\mathrm{k_{T}}\) algorithm) is shown in Figure 17. For the CONE algorithm as reference jet definition, the LVL1 jet RoI \(\mathrm{E_{T}}\) threshold is found to be \(\mathrm{E_{T}}^{\mathrm{threshold}}(\mathrm{LVL1})=-24.1\mathrm{\ GeV}+0.79* \mathrm{E_{T}}^{\mathrm{nominal}}(\mathrm{KINE}}\mathrm{,CONE})\), whereas for the \(\mathrm{k_{T}}\) algorithm as reference the relation is \(\mathrm{E_{T}}^{\mathrm{threshold}}(\mathrm{LVL1})=-29.7\mathrm{\ GeV}+0.75* \mathrm{E_{T}}^{\mathrm{nominal}}(\mathrm{KINE}}\mathrm{,}\mathrm{k_{T}})\).

In Figure 18 the analogue relation is shown for jets reconstructed at LVL2, here the threshold indicates a 90 % efficiency with respect to the reference jet (either CONE or \(\mathrm{k_{T}}\)) on KINE particles. The relations obtained from a fit of a linear regression are: in the case of the CONE algorithm as reference: \(\mathrm{E_{T}}^{\mathrm{threshold}}\)(LVL2) = -2.5 GeV + 0.97 * \(\mathrm{E_{T}}^{\mathrm{nominal}}\)(KINE) and for the \(\mathrm{k_{T}}\) algorithm as reference \(\mathrm{E_{T}}^{\mathrm{threshold}}\)(LVL2) = -18.1 GeV + 0.98 * \(\mathrm{E_{T}}^{\mathrm{nominal}}\)(KINE) is found. These differences in the threshold dependencies leads to different rate predictions, depending on the reference algorithm chosen (see next paragraph).

The jet rates at LVL2 shown in Figure 19 (determined with efficiencies derived from the CONE algorithm as reference) and in Figure 20 (with the \(\mathrm{k_{T}}\) algorithm as reference for the efficiency determination) show a similar behaviour as the ones shown in Figure 3 and Figure 4 of Section 3 for rates from particles. The factor of about 10 between the rate for events with \(\geq\) n and \(\geq\) n+1 jets (n = 2,3) is also found at LVL2 and also a factor of about 4 for the ratio of inclusive to \(\geq\) 2 jets is observed. The rates themselves are (at small \(\mathrm{E_{T}}\)) larger than the ones from particles at KINE level, more details are given in the next subsection.Selected jet rates are listed in Table 1 for LVL1 (95 % efficiency) and in Table 2 for LVL2 (90 % efficiency).The rates shown for LVL2 are larger (by about a factor of 2) than the ones appearing in the trigger menu for low luminosity of [3] since in this study LVL2 was required to be 90 % efficient w.r.t to KINE particles. This leads to a threshold at LVL2 which is smaller then the nominal jet energy. In contrast, the rates shown in the menu were obtained by setting the threshold to the nominal jet energy. For the LVL1 rates (which are defined as 95 % efficient as in the trigger menu) the discrepancy is larger (up to a factor of 3.5). The reason for this increase is due to differences in the LVL1 jet algorithm used, especially does the LVL1 algorithm used in this study not contain an optimal energy calibration for jets. Furthermore LVL1 was defined to be 95 % efficient with respect to LVL2 (i.e. a different normalization was adopted than in the present study).

Using the simulated minimum bias events mentioned in Section 2, the following rates for inclusive jets of 45 GeV have been obtained: about 2.2 kHz for a CONE on KINE particles, about 

[MISSING_PAGE_EMPTY:24]

with increasing jet energy, indicating that the effect of the 1 GeV threshold per trigger tower at LVL1 becomes less important at larger jet energies. For events with \(\geq\) 1,..., 4 jets the ratio has a value of about 2 at a nominal jet energy of 80 GeV. At larger nominal energies, the ratio slowly approaches a value close to 1 (about 1.1 to 1.2 at 200 GeV). For smaller energies down to 50 GeV the ratio is larger, giving factors between 4 and 6 at 50 GeV. The rate reduction achieved by LVL2 is found not to depend significantly on the reference algorithm (at least for small \(\mathrm{E_{T}}\)).

The apparent drop in the jet rate ratio for the case of \(\mathrm{k_{T}}\) as reference in the region of \(\mathrm{E_{T}}\) \(<\) 60 GeV is an artifact. Due to the lower threshold to be applied in case of the \(\mathrm{k_{T}}\) reference choice, the threshold reaches the 40 GeV or less region in \(\mathrm{E_{T}}\) where a bias due to the particle level filter selection of 40 GeV is expected.

The ratio of jet rates shown in this paragraph is going to change when the most recent version of the LVL1 jet algorithm is implemented within the ATRIG framework. If the actual LVL1 rate is going to be smaller than the rate shown here, the ratio of LVL1 to LVL2 rate will get smaller too.

## Correlations between LVL1 and LVL2

In order to investigate the effect of correlations between LVL1 and LVL2, two further methods of determining the thresholds for LVL1 and LVL2 were studied. Correlations can arise e.g. by a fluctuation in the shower development, leading to a larger energy in both levels.

The first cross-check defined (as done above) LVL1 to be 95 % efficient with respect to the CONE algorithm on KINE particles. For reference jets with a given nominal energy, then the efficiency of LVL2 (as a function of the LVL2 energy threshold) was studied for those events which passed the LVL1 stage (at 95 % efficiency). A fit to the relation between nominal jet energy and energy threshold at LVL2 (for 90 % efficiency w.r.t. to KINE particles, under the condition of LVL1 accept) leads to the following expression for the threshold as a function of the nominal energy: \(\rm E_{T}^{threshold}(LVL2)=-8.954~{}GeV+0.994^{*}~{}E_{T}^{nominal}(KINE)\). The threshold obtained in this way is lower (by about 6 GeV) then the one obtained when requiring LVL2 to be 90 % efficient with respect to KINE particles without demanding LVL1 to have accepted the event. The effect of determining LVL2 threshold with this method is to increase the LVL2 rate (only for values of \(\rm E_{T}<100~{}GeV\)) and thus a lower ratio between the LVL1 and LVL2 jet rates at low \(\rm E_{T}\) values. This is an indication that correlations between LVL1 and LVL2 exist and have to be taken into account in more detailed studies.

A second cross-check was attempted by setting LVL2 to be 90 % efficient with respect to KINE particles. Next, the LVL1 efficiency with respect to all events passing the LVL2 (at 90 % efficiency) was studied as a function of the LVL1 energy threshold. Demanding that LVL1 accepts 95 % of all events accepted by LVL2, leads the following relation between the energy threshold and the nominal energy: \(\rm E_{T}^{threshold}(LVL1)=-25.20~{}GeV+0.7743*E_{T}^{nominal}(KINE)\) for a CONE algorithm and \(\rm E_{T}^{threshold}(LVL2)=-20.85~{}GeV+0.8045*E_{T}^{nominal}(KINE)\) for a \(\rm k_{T}\) algorithm. These values are close to the ones obtained by demanding that LVL1 is 95 % efficient with respect to KINE particles without demanding anything for LVL2. In this case, no indication of a correlation is observed, the rates being almost identical.

These studies have to be repeated and extended, once the final LVL1 jet algorithm is available in the ATRIG framework.

## 7 Topics to be studied

In this section a detailed list of topics to be further studied is given and some priorities are indicated on the importance of different items.

### Optimisation of parameters

Starting from the list of available parameters on page 13, the following parameters are considered to have the most influence on the algorithm performance:

* size of trigger towers for pre-summation of cell energies (data transfer vs. resolution) study the difference between no pre-summation, a trigger tower size of \(0.1*0.1\) and a size of \(0.2*0.2\) (the latter corresponds to the LVL1 granularity)
* CONE size (sensitivity to pile-up and noise vs. best energy measurement) besides the results presented in this note using R\({}_{\text{CONE}}\) = 0.4 a further study should be performed for a CONE size of 0.7 (leading to a window size of at least \(1.4*1.4\), better probably \(1.6*1.6\) or even more). An interesting aspect in this context is to compare the performance of a CONE algorithm with radius 0.7 with respect to a k\({}_{\text{T}}\) algorithm with resolution parameter of order unity (\(1.35*0.7\)). The question is whether the differences observed in this study (dependence on the reference algorithm) are reduced with this choice of parameters or will remain similar?
* size of the RoI window used (data transfer rate) given a choice of a CONE size for the LVL2 algorithm, the main parameter to be studied in this context is the additional area needed (wanted), which will further increase the amount of data transfer
* energy thresholds given a set of values for the previously mentioned three parameters, a further reduction of the data transfer can be attempted by adjusting cell and trigger tower energy thresholds, trying not to spoil the performance achieved while in the same time reducing the amount of calorimeter data involved.

* together with the Jet/Etmiss working group, a detailed calibration of the response of the ATLAS calorimeters to jets has to be used (parametrization). This aspect also has to address the effect of including the scintillator to improve the response to jets.

### Luminosity dependence

Related to the above mentioned optimisation of parameters, the dependence of the parameters on the luminosity has to be studied. Especially important is the influence of the multiple interactions per bunch crossing, which will e.g. lead to different effects for CONE algorithm of different cone sizes.

## Different jet algorithms

In comparison with the presently used simple CONE algorithm, more advanced CONE like algorithms are available and are being used e.g. at the TEVATRON experiments. This could include an iteration on the cone position or a treatment of overlapping cones.

One question to be investigated is the possible use of a \(\mathrm{k_{T}}\) algorithm inside an RoI window. The restriction of a finite window size implies already a CONE like pre-selection, this might lead to biases of the \(\mathrm{k_{T}}\) algorithm and needs further studies. Also other algorithms could be investigated, like the M\(\mathrm{\ddot{u}}\)guisin algorithm [14], which show superior performance for certain physics channels and lies in terms of processing time in between a CONE type and a \(\mathrm{k_{T}}\) type algorithm. The most important aspect however is to try to possibly avoid any bias of the event selection at LVL2 due to the choice of a particular jet algorithm (or parameter for an algorithm).

## Unbiased inclusive jet rate

As mentioned on page 2, the particle level 'di-jet' filter applied leads to a bias of the inclusive jet rate. In order to avoid this, an unbiased filter (requiring only one region with summed energy above a threshold value) has to be run. It would be interesting to get a sample of low energy jets (unbiased) starting from maybe 30 GeV of \(\mathrm{E_{T}}\) up to about 100 GeV, and a second sample (with more statistics) of jets of higher \(\mathrm{E_{T}}\) (e.g. above 100 GeV).

## Rates from physics processes

The rates presented in this note were derived using QCD di-jet events, which will form the major part of the background to any physics channel. To study the performance of the algorithm on physics processes and to derive (process dependent) efficiencies and signal rates, e.g. the following processes should be studied:

* top pair production with 4 and 6 jet final states
* higgs to b anti-b

## Common treatment of LVL1 and LVL2

As already started in this note, the jet algorithms at LVL1 and LVL2 (and eventually also in the event filter) have to be treated in a common and consistent way. This is especially important when studying the efficiencies and rate reduction factors obtained at each level. To do this, the latest version of the LVL1 jet algorithm needs to be implemented within the ATRIG framework, to be able to make more precise statements about relative efficiencies. Another question to be addressed concerns the normalization of the efficiencies. At present, the reference is obtained from the particles produced by the generator, another possibility is to take as reference the off-line jet reconstruction.

## Data transfer

A question mainly to be addressed in the LVL2 Pilot Project is the measurement of the induced data transfer to the LVL2 system by running a jet algorithm. The planned testbeds will allow to measure this quantity in a realistic environment and to study the impact of a change in the parameters.

_Jet Reconstruction at the ATLAS Second Level Trigger ATLAS internal note Version 1.2 30_/6/98

## 8 Summary

In this note a first investigation of jet reconstruction at LVL2 using fully simulated data has been presented for a low luminosity scenario. The results shown indicate that the processing of jets at LVL2 can lead to a rate reduction. The values obtained for this reduction are only important for low nominal jet energies (\(<\) 100 GeV), where the largest part of the jet rate is located. For nominal jet energies between 50 and 80 GeV, reduction factors between 6 and 2 have been found. (these numbers might however change when the study is repeated with the most recent version of the LVL1 jet algorithm)

The results presented did not yet include an optimisation of parameters which is under study. These parameters include the size of the trigger towers for the pre-summation (which is directly related to the amount of data transfer needed), the various thresholds available (noise cut on cell energies, cut on trigger tower energies, the value of the transverse energy for the seed of the CONE algorithm) and the choice of CONE algorithm (or other algorithms). Other parameters are the CONE radius (which might depend on the amount of pile-up present) and the size of the RoI window, inside which the jet algorithm is run. Also the calibration for jets has to be studied, together with the inclusion of the signal of the scintillator to improve the calorimeter response. A further question to be addressed concerns the treatment of overlapping jets, which can fake a jet of higher energy.

## Acknowledgements

The work presented in this note has profited very much from discussions, active help and support by M. Bosman, N. Ellis, D. Froidevaux, S. George, K. Jakobs, T. Hansl-Kozanecka, I. Park, B. Gonzalez-Pineiro, E. Richter-Was and A. Watson.

## References

* [1] LVL2 Pilot Project, [http://atlasinfo.cern.ch/Atlas/GROUPS/DAQTRIG/L2PILOT/l2pilot.html](http://atlasinfo.cern.ch/Atlas/GROUPS/DAQTRIG/L2PILOT/l2pilot.html)
* [2] ATLAS Trigger Performance Group, [http://atlasinfo.cern.ch/Atlas/GROUPS/DAQTRIG/SIMULATION/simulation.html](http://atlasinfo.cern.ch/Atlas/GROUPS/DAQTRIG/SIMULATION/simulation.html)
* [3] ATLAS Collaboration, Trigger Performance Status Report, CERN/LHCC/98-15.
* [4] ATLAS Collaboration, ATLAS Technical Proposal, CERN/LHCC/94-43, December 1994.
* [5] E. Richter-Was and D. Froidevaux, MSSM Higgs searches in multi-b-jet final states, PHYS-NO-104, July 1997.
* [6] E. Richter-Was and D. Froidevaux, ATLAS Jet Production, PHYS-NO-102, July 1997.
* [7] J. Bystricky et al, ATLAS Trigger Menus at Luminosity 10\({}^{33}\) cm-\({}^{2}\)s-\({}^{1}\) DAQ-NO-54, June 1996.
* [8] PYTHIA 5.7 and JETSET 7.4, Physics and Manual, T. Sjostrand, CERN-TH 7112/93
* [9] GEANT, Detector Description and Simulation Tool, Application Software Group, Computing and Networks Division, CERN, CERN Program Library Long Writeup W5013
* [10] DICE Manual: Version 0.10 A. Dell'Acqua et al., ATLAS internal note SOFT-No-11
* [11] ATLAS: Calorimeter Performance, Technical Design Report, CERN/LHCC/96-40, ATLAS TDR 1
* [12] M.H. Seymour, Nucl. Phys. B513 (1998), 269.
* [13] ATLAS: Level 1 Trigger, Technical Design Report CERN/LHCC/98-14, ATLAS TDR 12, June 1998
* [14] Jet finder library: version 1.0, M. Bosman et al., ATLAS internal note in preparation
* [15] J. Bystricky, Jet trigger rates from fast simulation, ATLAS internal note, DAQ-No-29
* [16] Di-jet production for LVL1 trigger studies: [http://atlasinfo.cern.ch/Atlas/GROUPS/SOFTWARE/HELP/jetlvl1prod.html](http://atlasinfo.cern.ch/Atlas/GROUPS/SOFTWARE/HELP/jetlvl1prod.html)
* [17] ATLAS jet production: [http://atlasinfo.cern.ch/Atlas/GROUPS/SOFTWARE/HELP/jet_production.html](http://atlasinfo.cern.ch/Atlas/GROUPS/SOFTWARE/HELP/jet_production.html)
* [18] Minimum bias files: [http://wwwinfo.cern.ch/~dario/tapes.minbiases](http://wwwinfo.cern.ch/~dario/tapes.minbiases)
* [19] S.D. Ellis, D.E. Soper, P.R. D48 (1993), 3160
* [20] ATRIG, [http://atlasinfo.cern.ch/Atlas/GROUPS/DAQTRIG/SIMULATION/software/atman.h](http://atlasinfo.cern.ch/Atlas/GROUPS/DAQTRIG/SIMULATION/software/atman.h)
**Strategy for the transition from Geant3 to Geant4 in ATLAS**

**D. Barberis, G. Polesello, A. Rimoldi**

**Version 1.1 - 13 November 2003**

## 0 - Introduction

As a general rule, every computing service (in this case the toolkit for the simulation of the passage of particles through the matter in the ATLAS experiment) has typically a lifetime of a few years. After management approval (for Geant4 and OO Software in ATLAS this took place in 1999) the prototype may be timed into an official service with user support, monitoring and documentation being provided. If the new service replaces an existing one (the Geant3 based simulation in our case) an appropriate migration phase is prepared. Once this is done the new service runs in production for several years with limited modifications until it becomes obsolete and the chain will continue with the following generation of services. The Geant3 to Geant4 migration in ATLAS follows these rules.

The Geant3 toolkit (vs. 3.21) was started in 1984 and was revised several times until 1994. In 1997 it was frozen, but it has been used in ATLAS, with minor bug fixes, for event productions until now.

Since 1997 Geant4 was developed by the RD44 Collaboration and from 1999 the production service, the international Geant4 Collaboration has managed user support and development of Geant4. Within this Collaboration many specialized working groups are responsible for the various domains of the toolkit. The Geant4 source code is freely available, accompanied by an installation guide and an extensive set of documentation.

The ATLAS Collaboration has been using Geant3 as the main simulation engine since the Collaboration was formed in 1992. During these years the description of both the ATLAS geometry and the simulation of detector response have been considerably refined. Data Challenges DC0 (2001) and DC1 (2002) were the most recent large event productions using this tool.

The simulation program now under development in ATLAS is based on Geant4. All functionalities are under test and development since several years. The new simulation in the OO environment in ATLAS started as a stand-alone project with its own framework. Many examples of applications in all subdetector domains including all testbeam set-ups and general detector geometry were developed; since the end of 2002 the Geant4-based simulation was successfully migrated into the standard ATLAS framework (Athena). All new developments are now only carried on in this framework.

## 1 Validation and migration procedure

All the required functionalities are expected to be soon available in the ATLAS Geant4 simulation program, and this program will be used for large-scale simulation in the framework of Data Challenge 2 (DC2).

Since the first public release in 1999 Geant4 itself has been considerably improved in all its aspects, mainly in the physics domain for the treatment of electromagnetic and hadronic interactions. Currently it is considered that electromagnetic physics in Geant4 is better (i.e. can reproduce test beam results with better accuracy) and hadronic physics is at least at the same level of accuracy as in Geant3. This performance has been achieved with a large contribution of the ATLAS-Geant4 Physics Validation Group, which coordinated extensive sets of comparisons between Geant4, Geant3 and Test Beam data. We do not address here physics performance issues but we will focus on the migration of the main simulation environment from atlsim/Geant3 to Athena/Geant4.

The program needs to be tested through the analysis first of single particles, then of simulated proton-proton interactions at 14 TeV in the full ATLAS set-up. The technical side of this, including issues of CPU and memory usage, is addressed in the detailed schedule. There is also a physics side where statistical distributions of physics-related quantities will be looked at. For this it will be useful to have a comparison term, which can only be the understanding of benchmark physics processes in the ATLAS detector that was gained through the Geant3 simulation. To this effect, it is desirable to run limited validation samples of the same physics events through comparable set-ups for the ATLAS detector in Geant3 and Geant4. The feasibility under the technical, timing and manpower viewpoint of this program of work needs to be studied in detail. Given the present time scale of DC2, the detailed analysis will only be possible after DC2 is completed. It is however mandatory, before the large production is launched, that the usability of the simulated events for analysis by the physics groups is verified.

This need is less stringent for the combined test beam, where Geant4 can be compared to real data. However, some detector communities may want to compare specific developments done in Geant3 to the implementation in Geant4, and these requirements should be taken into account, and discussed in the framework of the general effort.

The Geant3 framework will still be useful for some time for specific tasks, which have not yet been implemented in Geant4, as they have lower priority with respect to getting Geant4 ready for DC2 and next year's combined test beam. Examples are the commissioning studies and radiation calculations, which are at present used by the community.

Although we are focusing here on Geant4, on which most of the development effort in ATLAS has been directed, a requirement is the availability of multiple tools incorporating different approaches to physics, in order to cross-check the respective performances. It is a longer-term requirement that the ATLAS detector simulation be made capable of utilizing the Fluka package, which is at present being validated in parallel to Geant4 in the broader LHC environment. It is foreseen that this work will be done in common for all LHC experiments in the context of the LCG simulation project.

## 2 - Current attsim/Geant3 functionalities

The ATLAS version of Geant3 can be run currently in the atlsim framework. atlsim provides the following functionalities:

* input of events from an external event generator, stored in a sequential file (ZEBRA format) or in a root file (HepMC structure in AthenaRoot format);
* generation of single particles of a specified type and with specified ranges of momentum (or energy), \(\eta\) and \(\varphi\);
* selection of the particles to be tracked according to a specified \(\eta\) range;
* tracking of the particles with Geant3 and generation of the Hits in all detectors;
* output of the tracks and vertices generated during tracking and of the association of the Hits with the tracks that generated them;
* pile-up, i.e. superposition of the current "physics" event with an appropriate number of minimum-bias events, according to the simulated luminosity and each detector response time;
* digitization of the Hits and creation of the Digits (RDOs, or RawDataObjects, in modern terminology);
* output of selected blocks of information to a sequential file in ZEBRA format.

## 3 - Current Athena/Geant4 functionalities

Geant4 can be run in the Athena framework. Athena/Geant4 provides currently the following functionalities:

* input of events from an external event generator, stored in a ROOT or POOL file (HepMC structure in AthenaRoot or AthenaPool format);
* generation of single particles of a specified type and with specified ranges of momentum (or energy), \(\eta\) and \(\varphi\);
* selection of the particles to be tracked according to a specified \(\eta\) range;
* tracking of the particles with Geant4 and generation of the Hits in all detectors with POOL persistency;
* output of the tracks and vertices generated during tracking (in the HepMC structure) and of the association information of the Hits with the tracks that generated them;
* pile-up, i.e. superposition of the current "physics" event with an appropriate number of minimum-bias events, according to the simulated luminosity and each detector response time (work in progress)1; Footnote 1: Pile-up is a framework service and not strictly part of the simulation algorithm. It is mentioned here for completeness, as pile-up in Athena is needed to have the full Geant4-based simulation chain working with the same functionality as the atlsim/Geant3 chain.
* digitization of the Hits and creation of the Digits (RDOs, or RawDataObjects, in modern terminology) for a subsample of detectors and persistiIf the migration from Geant3 to Geant4 consisted of the previous points only, there is no doubt that the transition could be put in place immediately and there is no reason to delay it, but the transition to the new OO software requires a wider plan due to the implications and the concept itself of OO programming.

In the OO/C\(++\) software environment, there is a separation between framework (Athena) services, such as data input and output, and the execution of different algorithms. In addition, the detector geometry is provided by a package (GeoModel) that is independent of the simulation and reconstruction clients. The above sequence of actions should be integrated by a new action that is essential for a complete test of the new software environment, including the transition to Geant4 in a global transition to the new software:

* set up the geometry in Athena using GeoModel, with input of geometry data from the geometry database (currently NOVA), and initialisation of the Geant4 geometry.

A good level of documentation is also needed.

## 4 - Criteria for Geant4 acceptance as the main simulation engine

The Athena/Geant4 software can become the main simulation engine for ATLAS when:

1. the functionality described above is fully available in the Athena/Geant4 framework;
2. the performance in terms of CPU consumption and storage needs for the output data in POOL are considered acceptable by the Collaboration;
3. users can have access to the geometry parameters for tests and updates and can choose which geometry to use (e.g., full ATLAS or test beam);
4. the geometry description in GeoModel is properly interfaced with simulation and reconstruction code, so as to have automatic propagation of geometry changes.

As immediately visible, the vast majority of these requirements are not addressed to Geant4, but rather to Athena, GeoModel, the NOVA database, the Event Data Model, POOL I/O and detector digitization algorithms.

## 5 - Development plan

According to the WBS and the current release plan, this is what we should expect in the way of software developments in the near future:

* initialisation of Geant4 geometry in Athena through GeoModel/NOVA: release 7.3.0;
* I/O in Athena of events from an external event generator, stored in a POOL database (HepMC structure in AthenaPool format): exists;* generation of single particles of a specified type and with specified ranges of momentum (or energy), \(\eta\) and \(\varphi\): exists;
* selection of the particles to be tracked according to a specified \(\eta\) range: exists;
* tracking of the particles with Geant4 and generation of the Hits in all detectors: exists;
* output of the tracks and vertices generated during tracking and of the association of the Hits with the tracks that generated them: release 7.4.0;
* pile-up according to the simulated luminosity and each detector response time: exists for some detectors (Pixel and LAr), completed by release 8.0.0;
* digitization of the Hits (creation of the RDOs) and output in POOL: release 7.3.0;
* user interface to NOVA and selectable geometry in GeoModel: release 8.0.0;
* GeoModel geometry used by reconstruction: in progress.

The aim is to be able to use the complete simulation chain as described above for the two major computing operations of 2004: DC2 and the Combined Test Beam. The timescales are similar, i.e. the software has to be ready, and tested, by the end of March 2004. Overall more than \(10^{7}\) complete physics events will be simulated for DC2, in addition to large samples of single particles. This will be the final test for the Geant4-based simulation suite: from that time on Geant4 will be the main, and therefore default, simulation engine for ATLAS.
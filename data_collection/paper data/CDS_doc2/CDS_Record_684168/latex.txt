[MISSING_PAGE_EMPTY:1]

###### Contents

* 1 Introduction
* 2 Presentation of PERSINT
	* 2.1 General Description
	* 2.2 Installation
	* 2.3 Databases and input files
	* 2.4 Running
	* 2.5 The HIGZ Window
	* 2.6 Generating postscript files
	* 2.7 Basic elements of Graphic Interfaces
* 3 The Navigator
	* 3.1 Introduction
	* 3.2 Spatial Navigation
	* 3.3 Visualization Properties
	* 3.4 Access to Applications
	* 3.5 Online Help
* 4 The Interface to AMDB
* 5 The Interface to AGDD
* 6 The Interactive Reconstruction and Event Display Package
* 7 The Interactive Generation of Muon Tracks
* 8 The Magnetic Field Interface
* 9 The XML Digits Display
* 10 The "Move Volume" Window
* 11 The Detection of Intersecting Volumes
* 12 Boolean Volume Operations
* 13 The Command Mode
	* 13.1 Generic Commands
	* 13.2 The Generation of Volumes and Boolean Volume Operations
	* 13.3 XML Commands
	* 13.4 3D Characters
* 14 Record of Released Versions
* 15 Appendix

Introduction

This document describes the PERSINT Interactive Visualization program, a non-commercial product developed by the Saclay Muon Software Group primely for the ATLAS collaboration. It corresponds to the **version 2.04** of the program.

## 2 Presentation of Persistent

### General Description

The PERSINT program is designed for the three-dimensional representation of objects and for the interfacing and access to a variety of independent applications, in a fully interactive way.

The display of objects and the interactivity between the user and objects or applications is realized through the use of the HIGZ package [1]. Facilities are provided for the spatial navigation and the definition of the visualization properties, allowing to interactively set the viewing and viewed points, and to obtain the desired perspective. In parallel, applications may be launched through the use of dedicated interfaces, such as the interactive reconstruction and display of physics events.

### Installation

The program is available on AFS at CERN in the official Persint repository located at :

/afs/cern.ch/atlas/offline/external/Persint

This repository consists in a tree-like structure as illustrated in Figure 1 which provides, for each version of the program, the source and executable files, together with documention and useful input databases, and for developers, the tools necessary to compile and load. Each version of the program is attributed with a version subdirectory Persint.x.xx, where x.xx denotes the version numbering.

Each version subdirectory contains itself the directories **doc**, **src**, **bin**, and **test**, plus an executable file for compiling and loading.

In **bin**, executables of the program are available for exploitation on Compaq-Alpha and Sun-Solaris UNIX, and for Linux, in the directories of corresponding names, under the "persint.exe" name. In **src** and **doc** are contained the source files and the documentation, while **test** provides a number of databases and input files. **test** contains soft link to the executables, and can be seen as a prototype for a working directory, in which the program may be run.

Beside the official repository, the PERSINT webpage can be used to download the program and find the most up-to-date informations and developments:

[http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/persint.html](http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/persint.html)

To install the program, the user should copy the persint.exe file of its choice (version and platform) in its working directory. It is recommended to copy also the databases and input files described in the following sections, or access them through the use of soft links. Another possibility is to use the "tar" file provided in the repository which contains all the necessary files to run on any platform.

### Databases and input files

For proper initialization of certain applications, the program loads several databases and input files. Facilities are provided to load any database during run time, but it is of interest to load default files, so that the program can initialize its applications when they are launched for the first time. These are the following, under their exact denominations, which should be respected :\(\Rightarrow\)default_amdb_simrec, geometrical database of the ATLAS Muon Database (A MDB ) type

\(\Rightarrow\)default_AGDD.xml, database of the ATLAS Generic Detector Description type

\(\Rightarrow\)default_bmagatlas, magnetic field database

\(\Rightarrow\)default_muhits, event/hit file generated with DICE, LHCTOR, GEANT4, etc...

\(\Rightarrow\)default_muonbox_data_cards, reconstruction data cards

\(\Rightarrow\)alphabet, contains the description of 3D characters

During run-time, it is possible to load new databases, for example if one needs to visualize different geometrical databases or event files. It is thus possible to modify the geometry online and visualize it without having to stop the program.

Figure 1: Tree of sub-directories and files of the official Persint repository.

### Running

Upon being launched, the program goes through a series of steps, whereby answers to specific questions are required, to ensure a proper initialization. Default answers are generally sufficient.

\(\Rightarrow\) the first step is to define the workstation type, by entering the IP address of the user display;

this results in the initialisation of the HIGZ package and the opening of the HIGZ Window.

\(\Rightarrow\) in a second step, the possiblity is offered to use the HIGZ double buffer mode (not advised).

\(\Rightarrow\) the third step is associated to the pre-loading of the geometrical database default_ambb_simrec.

\(\Rightarrow\) the fourth step is associated to the pre-loading of the geometrical database default_A GDD.xml.

\(\Rightarrow\) finally, the possibility is offered to perform the initialisation of the MUONBOX application;

in this case, the program loads the default_muonbox_data_cards input file and the geomagnetic field database default_bmagatlas.

At the end of this initial procedure, if the user has answered "yes" to at least one of the last three questions, the program launches the Navigator Interface. The resulting configuration is illustrated in Figure 2. If not, the program goes to the Command Mode. The answers are automatically stored as default for the next execution, in the default_yes_no file.

Figure 2: PERSINT at run-time with the Navigator Interface launched, featuring the Command Window and the HIGZ Display Window.

### The HIGZ Window

The HIGZ Window is dedicated to the colour display of both the objects computed by the program for visualization and the graphical interfaces. The interactivity between the user and the displayed objects/applications is established once the Navigator Interface has been launched, and is realized through a cross-shaped cursor allowing to click graphical elements.

The default size and position of this window may be modified in the higz_windows.dat file in the user home directory. Once the window is opened, its size can be enlarged or reduced at will by dragging its borders or corners with the mouse, left button pushed down. This results in the erasing of the image on display, which can be recovered by a double-click anywhere on the window. In this operation, the perspective remains unchanged, though the aspect ratio is modified.

After modification of the window sizes, the number of vertical columns and horizontal is printed on the command shell. This information is useful for generating views with identical display sizes, after having stopped the program.

### Generating postscript files

To generate postscript pictures, a file should first be open in the Command mode by typing the following instruction :

> psf toto.ps

Once the Navigator is launched, one or more given views can be saved in this file by a single click on a dedicated Push Button (see Section 3).

### Basic elements of Graphic Interfaces

In this section the basic elements which are employed by the Graphic Interfaces of the program are described. The operating principles of these objects are illustrated through some typical examples, representative of a number of other applications.

**Push Buttons**

The program interfaces make abundant use of Push Buttons. These, upon being clicked, engage an action or invoke a new interface to a lower level application. An example is shown in Figure 3 for the AMDB interface application, which may be invoked from the Navigator Interface.

Figure 3: Example of utilization of a Push Button

**Octant and Z-half Selectors**

The geometry of the ATLAS Muon Spectrometer is characterized by its two approximate symmetries :

* the 8-fold symmetry with respect to \(\phi\) of the Toroids and the Muon Chambers in terms of associated Small and Large Sectors
* the symmetry between the \(Z>0\) and \(Z<0\) regions

In order to profit from these symmetries, the interface to the geometry is organized around Octants and Z-halves Selectors. The working of this basic type of interactive graphical element is illustrated in Figure 4.

**Scales**

In order to act on variables involved in graphical interfaces, incrementing scales are utilized. They consist on a series of Push Buttons allowing to increase (green buttons) or decrease (red buttons) the value of a given variable, each button being associated with a power of 10. An example of such an object is pictured in Figure 5.

**Scales**

Figure 4: Illustration of the working of an Octant and Z-half Selector

Figure 5: Example of a Scale and its operating principleThe Navigator

### Introduction

The Navigator is the master interface to the various graphics applications provided by PERSINT and contains the navigation facilities necessary to survey the entire detector space. This application is launched from the command mode by typing the "**nav**" command; the Navigator pops-up in the lower-right corner of the HIGZ window.

The interface consists in an assembly of Push Buttons and clickable 1D and 2D gauges. The Push Buttons are used to launch lower level applications. Gauges are used to scale navigation and visualization actions. The Navigator facilities are detailed in Figure 6.

### Spatial Navigation

The spatial navigation, as well as the modification of the visualization properties, are realized through the use of gauges which define the amplitudes of the movements of the Viewing and Viewed Points and of the change in focal length of the observer eye, such as to obtain the desired perspective. Each action is validated with the "**GO**" Push Button.

An example of spatial navigation is shown in Figure 7. In this case the user visualizes a complete sector of the large muon chambers including precision chambers and trigger chambers, together with the projective and axial alignment system. These volumes are seen from some distance in the first picture. The first action, consisting in a forward displacement of the viewing point, is achieved by clicking the "Forward Motion" arrow of the Navigator according to the desired amplitude of motion. The second action consists in a rotation around the observed point, which is obtained by activating the "Displace Viewing Point" 2D gauge of the Navigator.

Figure 6: The Navigator Interface

Figure 7: Example of Interactive Navigation

1. Normal View (35mm F.L.)
2. 70mm Focal Length
3. Isometric View (infinite F.L.)
4. Z Projection
5. X Projection

Figure 8: Defining the Perspective

### Visualization Properties

PERSINT offers the possibility to modify interactively the visualization focal length. In the Navigator, a sectioned gauge may be used to select the Normal View, equivalent to a focal length of 35 mm, the Isometric View, equivalent to an infinite focal length, or to increase or decrease the focal length at will.

Moreover, X, Y, Z, or \(\phi\) projections of the volumes on display may be obtained by clicking dedicated Push Buttons. In the case of X, Y, and Z projections, the observing point position (e.g. X\(>0\) or X\(<0\)) can be modified by clicking the "Displace Viewing Point" 2D gauge on the corresponding half. In the case of \(\phi\) projection, this same gauge can be used to define the value of \(\phi\). Examples of visualization of the same volumes with different perspectives are presented in Figure 8.

### Access to Applications

The Navigator allows direct access to the following applications :

\(\Rightarrow\) the AMDB Interface

\(\Rightarrow\) the AGDD Interface

\(\Rightarrow\) the Reconstruction and Event Display Interface

\(\Rightarrow\) the Muon Track Generation Interface

\(\Rightarrow\) the Magnetic Field Display

\(\Rightarrow\) the XML Digits Display

\(\Rightarrow\) the Detection of Intersecting Volumes

These applications are invoked or closed upon clicking their associated Push Buttons. After being launched, these applications remain coupled to the Navigator. For instance, most of the actions defined in a low level application will be engaged by clicking upon the "**GO**" Push Button of the Navigator.

### Online Help

The Navigator is equipped with an Online Help facility through which the user can get help and information on all the capabilities offered by this interface. This is realized by a simple click with the mouse middle button on any object of the Navigator (gauges or push buttons), upon which a frame pops-up on the display nearby that contains the relevant information. An illustration is shown in Figure 9.

Figure 9: Click on Navigator objects with Mouse Middle Button to get helpThe Interface to AMDB

The AMDB Interface is the application allowing the interactive access to the geometrical dat abases of the amdb_simrec type [2]. Based on a symbolical representation, the constitutive elements of a database may be selected for display. This Interface provides a set of facilities allowing customization of the detectors volume display.

This Interface is invoked from the Navigator by clicking the "**AMD**" Push Button. It will appear on the left side of the HIGZ window. An illustration is shown in Figure 10.

The representation of the database elements is based on Octants and Z-halves selector which reproduce symbolically the symmetries inherent to the Muon Spectrometer. To each subdetector type is associated such a selector, which allows to pickup the desired elements for display. The working principle of this selector is described p. 6.

The Muon Spectrometer subsystems of the database are organized by columns, each column corresponding to a given technology (MDT, RPC, etc). A specific column is dedicated to the Matter elements (toroids, feet, etc).

In the lower part of the Interface a number of facilities for generic usage are provided :

* a default selector allows to choose an Octant and Z-half configuration that will be applied directly to every element by a simple click on the octant selector centers
* the "**CLR**" Push Button allows to reset the selection
* a colour bar utilized to choose the colour of the volumes that will be selected
* the "**Axis**" buttons allow to select axis system of different sizes for display
* A colour bar utilized to set the colour density

Finally, technology-specific applications are available :

* a series of Push Buttons allows to select which details of the MDT chambers should be visualized
* a series of Push Buttons defining the details of the alignment system to be displayed

## 5 The Interface to Agdd

The AGDD interface is the application allowing the interactive access to databases of the ATLAS Generic Detector Description type [3]. It is based on a fully clickable tree-like structure allowing selection of the desired volumes for display. As for the AMDB Interface, a set of facilities is provided that facilitates the customization of the display properties.

This Interface is invoked from the Navigator by clicking the "**XML**" Push Button. It will appear on the left side of the HIGZ window. An illustration is shown in Figure 11.

The Interface offers the representation of the volume tree in its full depth. The user can deploy or hide sub-structures by clicking Volume Tree Pointers appearing as triple arrows. An operating example is shown in Figure 12.

In the lower part of the Interface are provided the following facilities :

\(\bullet\) a colour bar utilized to choose the colour of the volumes that will be selected

\(\bullet\) the "**Put**" and "**Remove**" buttons must be engaged to enable selection or removing Figure 10: The Interface to A MDB

Figure 11: The Interface to AGDD

Figure 12: Example of an Interactive Volume Tree and its operating principle

of an element of the Tree.

\(\bullet\) the "**Clear**" Push Button allows to reset the selection

\(\bullet\) the "**Color**" Push Button is used to give the same colour to elements of the same technology

\(\bullet\) the "**Axis**" buttons allow to select axis system of different sizes for display

\(\bullet\) the "**Envelopes**" buttons enable the representation of volume envelopes, by setting of the desired level of envelope for display, 0 corresponding to basic volumes.

A useful tool of the XML package is the simultaneous visualization of the Volume Tree and of the selected volumes, as shown in the example of Figure 13. This is achieved by typing the following instruction in the command mode :

> trx

Figure 13: Display of the Volume Tree together with the selected Volumes

The Interactive Reconstruction and Event Display Package

The interactive reconstruction application of PERSINT allows the reading of event hit files, the visualization of these hits, and the reconstruction of the event through coupling to the MUONBOX program [4, 5].

The application is launched from the Navigator by clicking the "**Rec**" Push Button. The Reconstruction Interface, presented in Figure 14, pops-up on top of the Navigator.

Clicking anywhere on this window ensures the initialisation of MUONBOX, if not already done. The user can choose the event number for display using a pair of scales and obtain the visualization of the hits by clicking the "**Cur. Ev.**" Push Button. Another possibility is to use the "**Next Ev.**" Push Button to visualize the next event in the event file. The details of the hits visualization (chambers, strips, tubes) can be defined using a series of Push Buttons.

Each visualization of a new event is done from a predefined perspective. The user can then navigate at will around the event volumes using the Navigator facilities and add or remove other volumes loaded from the geometrical database.

The reconstruction of an event is engaged by clicking the "**Mu. Rec.**" Push Button. The event is reconstructed according to the specifications imposed by the MUONBOX data card file. An example is shown in Figure 15 for a Standard Model 150 GeV Higgs to four muons event generated with the LHCTOR simulation [6].

The results of the reconstruction are displayed on a dedicated window that pops-up beside the Navigator. Informations specific to every reconstructed track are given, labelled by a number. On the event display are shown the reconstructed candidate tracks with their associated labels. Global event reconstruction characteristics are also given, when relevant, such as the reconstructed Invariant Mass. Additional informations are printed in the command window, the detail of which can be set through the data card file.

Figure 14: The MUONBOX Interface

Tube hits on display are attributed with the following colour code : before reconstruction, red tubes are muon hits and violet tubes are background hits. After reconstruction, black tubes are the tubes selected by the pattern recognition, and violet tubes still indicate the others.

The display of CSC hits is available in this application. This includes the visualization of the reconstructed hit position obtained from hits cluster fitting, associated to a colour code similar to that of MDT tubes. An example is shown in Figure 16. In this example, an inner segment was found by MUONBOX, that is not compatible with the final fit.

Figure 15: Interactive Reconstruction and Display of a Higgs to four muons event

In all generality, PERSINT can accommodate the visualization of any kind of detector hit, independent of the nature of detector technology. In its current version, the Event Display package allows visualization of Inner Detector tracks and hit Calorimeter cells. An example of display of a combined event is shown in Figure 17. It consists in a Higgs to two muons and two electrons event associated with pileup, which has been generated by the DICE simulator [7].

Finally, the Event Display package incorporates the visualization of \(\mu\)FAST objects. \(\mu\)FAST is a trigger algorithm dedicated to the Level 2 Muon feature extraction [8]. PERSINT allows to visualize the segments and superpoints utilized by the algorithm, and makes a visual comparison with the MUONBOX results feasible. An example is shown in Figure 18 for a \(p_{\mathrm{T}}\)=20 GeV/c muon generated with DICE.

Figure 16: Display of CSC hits and associated reconstruction objects

Figure 17: Display of combined event

Figure 18: Display of Level 2 segments and superpoints together with chambers, tubes and strip hits. The segments calculated by the \(\mu\)FAST algorithm are shown in violet, with their associated superpoints symbolised by boxes. The result of the MUONBOX track-fit is also shown. The upper picture shows the entire assembly of chambers hit (small chambers of sector 8). The lower pictures are closeup views of the middle chamber from different perspectives.

The Interactive Generation of Muon Tracks

The Muon Tracks Interface is used to generate and compute tracks of muons throughout the entire detector system. It is coupled to the MUONBOX [4, 5] and BFIELDTB [9] programs and can estimate a track's trajectory, taking into account the magnetic field, multiple scattering, and energy loss.

This application is launched from the Navigator by clicking the "**Muo**" Push Button. A window then appears in the upper-left corner of the HIGZ window.

In this window, a row of ten master Push Buttons is displayed. From these, a list of tracks may be defined, each track being associated with one of the Push Buttons. Upon clicking one of the button, a column of scales will appear, such as presented in Figure 19, that allows to define the properties of the track : \(\eta\), \(\phi\), transverse momentum, position of origin. Another scale allows to modify the number of multiscattering points. A colour code is attributed to the master Push Buttons : the blue colour signals the tracks that have been already defined, the red colour indicates which muon track is being defined, while the empty circle indicates the tracks that are not selected yet. Once the tracks are defined, they are computed and displayed by clicking the "**GO**" Push Button of the Navigator.

Muon tracks are displayed as thin ribbons following the exact trajectory. Red cubes distributed along the ribbons indicate the energy loss in matter volumes. The amount of material crossed and of energy lost can be obtained by a simple click on these cubes, upon which the information appears in the "Move Volume" Window.

An example is shown in Figure 20 for muons of transverse momenta 100 GeV/c generated in a Small Chambers Sector of the ATLAS Muon Spectrometer.

To compute the trajectory, this application takes only into account those matter elements that are selected through the Interface to AMDB. It is thus possible to add or remove matter elements to understand how they affect the muon trajectory. An example is shown in Figure 21, where a low energy muon track is generated with and without the calorimeters.

Figure 19: The Muon Tracks Interface

Figure 21: Example of a low energy muon track. Left : calorimeters taken into account. Right : without the calorimeters. The Barrel Coils are displayed using the Magnetic Field Interface.

Figure 20: Left : Example of muon tracks generated in a Small Chambers Sector of the ATLAS Muon Spectrometer. Right : wide-angle view on the middle chambers region, showing cubes indicating the energy losses in the chamber material (one chamber removed from view). Upon clicking a cube, the “Move Volume” Window pops-up in the upper-right corner, indicating the amount of material crossed and of energy lost.

The Magnetic Field Interface

This application provides a fully interactive 3D visualization of the Magnetic Field. It is launched from the Navigator by clicking the "**Fie**" Push Button, upon which the interface appears in the lower-left corner of the HIGZ window. The interface is pictured in Figure 22. This application is coupled to the BFIELDTB set of subroutines [9] that read the field database and compute the field at any given point.

The field is visualised by means of arrows located at a series of lattice points. The direction and length of the arrow correspond to the direction and magnitude of the B-field. The lattice, either 2D or 3D, is customized by the user in terms of mesh and spatial limits, allowing to build the vector field either in very localized regions or over large distances. An example is shown in Figure 23.

A set of Push Buttons disposed vertically are used to choose to display the field in a fixed plane \((X,Z,\phi)\) on a 2D lattice. Upon clicking one of these a scale appears that allows to choose the coordinate of the plane. A 3-D lattice may be preferred by clicking the "**3D Lattice**" Push Button. In this case, the lattice is established along the \((X,Y,Z)\) axis-system.

Both 2D and 3D lattices can be customized by invoking the "**Lattice def**" interface (see Figure 23). This interface allows to choose, by the means of scales, the limits and meshes of the lattice in all directions.

An additional push button series is provided to modify the scale applied to the 3D arrows, as well as a switch allowing to choose a linear or a logarithmic representation.

To initialize the application (reading and computing of the field), the "**ON/OFF**" Push Button acts as a switch that must be turned on by clicking on it. Once all properties of the field visualization are defined, the display is obtained by clicking the "**GO**" Push Button of the Navigator.

Finally, the elements of the Magnet System may be visualized, through a set of Oct ant selectors (see e.g. Figure 23).

Figure 22: The Magnetic Field Interface

Figure 23: Visualization of the Magnetic Field

[MISSING_PAGE_FAIL:25]

Figure 25: Examples of XML Digits Display

The "Move Volume" Window

The "Move Volume" Window is an interface used to act on the spatial properties of volumes on display. It is also used to collect information on these volumes.

Upon clicking on any volume present on the display, a window appears in the upper-right corner of the HIGZ window. In this window are given the \((X,Y,Z)\) and \((R,\phi,\eta)\) coordinates of the last clicked point, together with the name of the volume and the name of supervolume to which it belongs.

The window is equipped with a permanent red Push Button which allows to deploy or hide a set of scales that can be utilized to apply any rotation and translation to the supervolume that has been selected by clicking on one of its elements. The transformation is validated with the "**GO**" Push Button of the Navigator. An example of the interface with its transformation scales deployed is shown in Figure 26.

The interface offers a quick way to remove supervolumes on display through the use of the blue "**Rem**" Push Button. After having engaged this application, all the supervolume clicked will be removed once the "**GO**" Push Button is pushed. The red colour of the "**Rem**" Push Button indicates that the application is active. It is de-activated by clicking the "**Rem**" Push Button, thus restoring its blue colour.

The removal of a supervolume from the display is indicated in the Navigator Interface by the Lighting-up of the "**Mov**" Push Button. Any removed volume can be restored to its initial position by pushing this Button.

It should be noted that removing a volume is obtained by the application of a translation of 100 m along the X, Y, and Z axis. In some instances, the removed supervolume may thus be still visible. This may be dealt with by applying an additional translation along an adequate axis.

Figure 26: The “Move Volume” Window

To dispose of the "Move Volume" Window, click once in any empty region of the display.

## 11 The Detection of Intersecting Volumes

PERSINT has the rare feature of computing and display of intersecting volume. This ability is of utmost importance when developing large geometrical databases, where mistakes are unavoidable. PERSINT signals the intersecting volumes to the command shell, together with graphical highlight.

An example of clashing volumes is shown in Figure 11, where a misplaced EndCap station intersects a BOL chamber. PERSINT automatically highlights the intersections of the volumes with continuous red lines.

To detect and identify the possible intersections of volume, the "**Cla**" Push Button of the Navigator must be engaged, upon which the volumes in clashes are listed in pairs in the command shell. Only those clashes involving volumes with different colour attributes are listed.

Figure 27: Example of clashing volumes

Boolean Volume Operations

PERSINT offers the rare feature of being able to compute fully and display volumes resulting from Boolean operations.

Being given two initial Supervolumes (a Supervolume is an ensemble of volumes), the program is able to perform the three basic operations (addition, subtraction, intersection) to generate a new Supervolume. This facility is independent of the complexity of the initial objects. An example is shown in Figure 28, which illustrates how the program generates the voussoirs of the Barrel Toroid.

This feature of PERSINT allows to generate complex-shaped volumes from very basic objects. The program provides, through the Command Mode, a set of instructions allowing to generate basic volumes and to perform Boolean operations (see section 13.2).

Figure 28: Example of Boolean Volume Operations

The Command Mode

In this section of the Manual are described the commands which can be interpreted by PERSINT in the command mode. They are separated in categories as follow.

The Generic commands incorporate instructions of general use, including the handling of input files and databases, and navigation and visualization commands. Some commands are redundant with applications available in the Navigator mode. However, they can be useful when generating macroexecutions.

The Generation of Volumes and Boolean Volume Operations commands section list the instructions available to generate and handle volumes, and how to perform boolean operations on volumes. The XML commands list useful instructions related to the display of XML/AGDD volumes. The 3D Characters commands describe how to generate and visualize three-dimensional characters.

### Generic Commands

```
2BU_n_
```

**Action:** switch to HIGZ double buffer mode
**Parameters:**

```
\(n\): flag of integer type \(0\) double buffer set off \(1\) double buffer set on
```

```
AAA_x_y_z
```

**Action:** set coordinates of viewing point
**Parameters:**

```
\(x,y,z\): coordinates (cm) of real type
**Related commands:** PRI, DLL, DXA, DYA, DZA, DXO, DYO, DZO, OOO
``` AMD_file_name ```
**Action:** read and load AMDB geometry database
**Parameters:**
``` file_name: string of maximum 80 characters ```
**ARR_c_
```

**Action:** define colour of volume edges
**Parameters:**_c_: colour code, of integer type

0 edges have same colour as volume

**References:**: see available colours in Table 1 of this manual

**Related commands:**: EPA

**ATL**: \(n\)

**Action:**: switch for operating reference system

**Parameters:**

\(n\): flag of integer type

0 operate in PERSINT coordinates system

1 operate in ATLAS coordinates system (default)

**BOX**

**Action:**: transfer A MDB geometry to MUONBOX

**CLA**

**Action:**: return names of clashing volumes which are on display

**References:**: see section 11 of this manual

**Related commands:**: INT

**CLR**

**Action:**: clear display, discard volumes to be viewed from memory

**Related commands:**: EXA

**COL**

**Action:**: display colours available to the graphics engine

**CON**

**Action:**: continue execution sequence contained in macroexecution file already read
**Related commands:**: REA, SAV

**CRO**: \(n\)1 \(n\)2 \(n\)3 \(n\)4 \(n\)5

**Action:**: switches for display of MDT chambers details

**Parameters:**

\(n_{i}\) : flags of integer type (default 1 0 0 0 0)

\(n_{1}\) flag for cross bars

\(n_{2}\) flag for longbeams

\(n_{3}\) flag for endplugs

\(n_{4}\) flag for Faraday cage

\(n_{5}\) flag for staircasing of trapozeidal chambers

**DEM**: \(n\)

**Action:**: switch for display of cube symbols providing informations on physical processes taken into account in muon reconstruction (dE/dx, M.S.)
**Parameters:**

\(n\) : flags of integer type

\(0\) switch off cubes display

\(1\) switch on cubes display (default)

**DIG**: \(n_{1}\) _n_\({}_{2}\) _n_\({}_{3}\)
**Action:**: define digitization level and flag systematics to be accounted for in muon reconstruction
**Parameters:**

\(n_{i}\) : integers (default -1 1 0)

\(n_{1}\) level of digitization (ranges from 1 to 4)

\(-1\) obsolete toy model (default)

\(0\) linear r-t, constant resolution

\(1\) linear r-t, r-dep. resolution

\(2\) non-linear r-t, constant resolution

\(3\) non-linear r-t, r-dep. resolution

\(4\) non-linear r-t, non-gaussian r-dep. resolution

\(n_{2}\) flag for Lorentz angle effect

\(0\) switch off Lorentz angle effect

\(1\) switch on Lorentz angle effect (default)

\(n_{3}\) flag for TOF effects

\(0\) switch off TOF effects (default)

\(1\) switch on TOF effects

**DLL**: \(x\)

**Action:**: forward/backward displacement of the viewing point with respect to the viewed point
**Parameters:**

[MISSING_PAGE_FAIL:33]

**Related commands:** PRI, DLL, DXA, DYA, DZA, DDO, DZO

**DZO \(x\)**

**Action:** displace viewed point along Z coordinate

**Parameters:**

\(x\) : displacement (cm) of real type

**Related commands:** PRI, DLL, DXA, DYA, DZA, DDO, DYO

**EMI \(e\)**

**Action:** set lower threshold on energy deposition for representation of calorimeter hit cells

**Parameters:**

\(e\) : real (GeV)

**Related commands:** PMI

**END**

**Action:** exit PERSINT

**EPA \(n\)**

**Action:** set thickness of edge lines of volumes

**Parameters:**

\(n\) : integer (default 1)

**Related commands:** ARR

**ExI**

**Action:** exit PERSINT

**FIX name \(n\)**

**Action:** restore displaced volume name to initial position

**Parameters:**

\(\underline{\mbox{name}}\) : string of maximum 80 characters

\(n\) : flag of integer type

**Related commands:**: MOV

**FOC \(x\)**

**Action:**: set focal length

**Parameters:**

\(x\) : real, unit mm, default 35

**FRA \(n\)**

**Action:**: draw a frame around the display

**Parameters:**

\(n\) : flag of integer type

\(0\) remove frame

\(1\) draw frame (default)

**HIT file_name**

**Action:**: read and load hits input datafile

**Parameters:**

file_name : string of maximum 80 characters

**INT \(n\)**

**Action:**: handle correct visualization of intersecting volumes.

**Parameters:**

\(n\) : flag of integer type

\(0\) clashing problems are not handled; possible graphics bugs

\(1\) clashing problems are handled (default). Intersections are underlined
**References:**: see section 11 of this manual
**Related commands:**: CLA

**MAG file_name**

**Action:**: read and load magnetic field map file
**Parameters:**

file_name : string of maximum 80 characters

**MET \(n\)****Action:**: handle opening and closing of postscript metafile
**Parameters:**:

\(n\): flag of integer type

\(0\) close postscript metafile

\(1\) open postscript metafile
**References:**: see section 2.6 of this manual
**Related commands:**: PSF

**MOV name \(n\)\(R_{1}\)\(R_{2}\)\(R_{3}\)\(T_{1}\)\(T_{2}\)\(T_{3}\)****Action:**: rotate and translate volume name according to transformations \(R\) and \(T\)
**Parameters:**:

file_name : string of maximum 80 characters

\(n\): flag of integer type

\(1\) performs transformation

\(R_{1}\)\(R_{2}\)\(R_{3}\): rotation angles (deg)

\(T_{1}\)\(T_{2}\)\(T_{3}\): translation (cm)
**Related commands:**: FIX

**NAV**:
**Action:**: invoke navigator interface, end command mode
**References:**: see section 3 of this manual

**OOO \(x\)\(y\)\(z\)****Action:**: set coordinates of viewed point
**Parameters:**:

\(x,y,z\): coordinates (cm) of real type
**Related commands:**: PRI, AAA, DLL, DXA, DYA, DZA, DXO, DYO, DZO
**PMI \(p\)****Action:**: set lower threshold on transverse momentum for representation of tracks in inner tracker
**Parameters:**:\(p\): real, unit GeV/c

**Related commands:** EMI

**PRI**: \(n\)
**Action:**: open a frame in lower left corner of main window and display coordinates of viewing and looked at points
**Parameters:**

\(n\): flag of integer type

\(0\) clear coordinates, close frame

\(1\) open frame, display coordinates

**PSF**: \(\underline{\mbox{file\_name}}\)
**Action:**: define output postscript file
**Parameters:**

\(\underline{\mbox{file\_name}}\): string of maximum 80 characters
**References:**: see section 2.6 of this manual
**Related commands:**: MET

**QUI**
**Action:**: exit PERSINT

**REA**: \(\underline{\mbox{file\_name}}\)
**Action:**: read and execute macroexecution file
**Parameters:**

\(\underline{\mbox{file\_name}}\): string of maximum 80 characters
**Related commands:**: SAV, CON

**REP**: \(n\) **m**
**Action:**: repeat \(m\) times the last \(n\) commands
**Parameters:**

\(n\), \(m\): integers

**Action:** rotate viewing point with respect to the viewed point around the X-axis

**Parameters:**

\(x\) : angle (deg) of real type

**Related commands:** ROY, ROZ

**ROY \(x\) Action:** rotate viewing point with respect to the viewed point around the Y-axis

**Parameters:**

\(x\) : angle (deg) of real type

**Related commands:** ROX, ROY

**SAV file_name**

**Action:** write to file a macroexecution describing the configuration of volumes on display

**Parameters:**

\(\text{file\_name}:\) string of maximum 80 characters

**Related commands:** REA, CON

**SXA \(x\) Action:** set X coordinates of viewing point

**Parameters:**

\(x\) : coordinate (cm) of real type

**Related commands:** PRI, SYA, SZA, SXO, SYO, SZO

**SYA \(x\) Action:** set Y coordinates of viewing point

**Parameters:**

\(x\) : coordinate (cm) of real type

**Related commands:** PRI, SXA, SZA, SXO, SYO, SZO

**SZA \(x\)**

**Action:** set Z coordinates of viewing point

**Parameters:**

\(x\) : coordinate (cm) of real type

**Related commands:** PRI, SXA, SYA, SXO, SYO, SZO

**SXO \(x\)**

**Action:** set X coordinates of viewed point

**Parameters:**

\(x\) : coordinate (cm) of real type

**Related commands:** PRI, SXA, SYA, SZA, SYO, SZO

**SYO \(x\)**

**Action:** set Y coordinates of viewed point

**Parameters:**

\(x\) : coordinate (cm) of real type

**Related commands:** PRI, SXA, SYA, SZA, SXO, SZO

**SZO \(x\)**

**Action:** set Z coordinates of viewed point

**Parameters:**

\(x\) : coordinate (cm) of real type

**Related commands:** PRI, SXA, SYA, SZA, SXO, SYO

**VUE**

**Action:** compute and display volumes to be viewed

### The Generation of Volumes and Boolean Volume Operations

``` SUV nameAction:declarenewsupervolume Parameters:name:stringofmaximum128characters V00name1name2Action:booleanoperator,createnewvolumewithintersectionofvolumesname1andname2.Newvolumeiscalledname1Parameters:name1,name2:stringsofmaximum128characters V10name2Action:booleanoperator,subtractvolumename2fromvolumename1.Newvolumeiscalledname1Parameters:name1,name2:stringsofmaximum128characters V11name1name2Action:booleanoperator,addvolumename2tovolumename1.Newvolumeiscalledname1Parameters:name1,name2:stringsofmaximum128characters VAPnamenAction:definevolumeappearance Parameters:

**Action:** create an arrow-shaped volume

**Parameters:**

name : name of the volume, string of maximum 128 characters

\(r_{1}\) : radius of body of arrow, of real type

\(r_{2}\) : radius of base of arrow head, of real type

\(z_{1}\) : length of body of arrow, of real type

\(z_{2}\) : length of arrow head, of real type

\(n\) : number of facets, of integer type

\(c\) : colour code for the volume, of integer type

**References:** see available colours in Table 1 of this manual

**VBT name \(x_{1}\)\(x_{2}\)\(y_{1}\)\(y_{2}\)\(z\)\(e\)**

**Action:** create a generic trapezoidal volume

**Parameters:**

name : name of the volume, string of maximum 128 characters

\(x_{1}\)\(x_{2}\)\(y_{1}\)\(y_{2}\)\(z\) : dimensions of the volume, of real type

\(c\) : colour code for the volume, of integer type

**References:** see available colours in Table 1 of this manual

**VBK name \(x\)\(y\)\(z\)\(e\)**

**Action:** create a box shaped volume

**Parameters:**

name : name of the volume, string of maximum 128 characters

\(x\)\(y\)\(z\) : dimensions of the volume, of real type

\(c\) : colour code for the volume, of integer type

**References:** see available colours in Table 1 of this manual

**VCO name \(r\)\(z\)\(n\)\(e\)**

**Action:** create a cones shaped volume

**Parameters:**

name : name of the volume, string of maximum 128 characters* base radius, of real type
* half-length, of real type
* number of radial facets, of integer type
* colour code for the volume, of integer type

**References:** see available colours in Table 1 of this manual

**VCP** **named** **name2** \(n\)

**Action:** copy volume **name1** in new volume **name2**

**Parameters:**

* name1, name2 : strings of maximum 128 characters
* : colour code for new volume, of integer type (default=1)

**References:** see available colours in Table 1 of this manual

**VCS** **name** \(r_{1}\)**\(r_{2}\)**\(r_{3}\)**\(r_{4}\)**\(l\)**\(n\)**\(c\)**

**Action:** create a conic tube shaped volume

**Parameters:**

* name : name of the volume, string of maximum 128 characters
* \(r_{1}\)\(r_{2}\) : inner and outer radii of the tube at first cone base, of real type
* \(r_{3}\)\(r_{4}\) : inner and outer radii of the tube at second cone base, of real type
* \(l\) : length of the conic tube, of real type
* \(n\) : number of radial facets, of integer type
* \(c\) : colour code for the volume, of integer type

**References:** see available colours in Table 1 of this manual

**VEL** **name**

**Action:** eliminate volume **name**

**Parameters:**

* name : string of maximum 128 characters

**VPR** \(n\)

**Action:** print infos on volumes in memory. Return total number of supervolumes, vol umes, planes, edges, edges

**Parameters:**:

\(n\): integer

\(0\): return info

\(1\): detail supervolume numbering (Is), volume numbering (Iv), plane numbering (Ip), edges, edges

**VRF name \(n\) a**:

**Action:**: make \(n\) copies of volume name, rotate copy \(i=1,n\) around Y-axis by an angle \((i-1)\times a\)
**Parameters:**:

name : string of maximum 128 characters

\(n\): number of copies, of integer type

\(a\): factor of rotation angle (deg), of real type

**VRX name \(\theta_{x}\)**:

**Action:**: rotate a volume with respect to X-axis
**Parameters:**:

name : name of the volume, string of maximum 128 characters

\(\theta_{x}\): rotation (deg) of the volume, of real type

**VRY name \(\theta_{x}\)**:

**Action:**: rotate a volume with respect to Y-axis
**Parameters:**:

name : name of the volume, string of maximum 128 characters

\(\theta_{y}\): rotation (deg) of the volume, of real type

**VRF name \(\theta_{x}\)**:

**Action:**: rotate a volume with respect to Z-axis
**Parameters:**:

name : name of the volume, string of maximum 128 characters

\(\theta_{z}\): rotation (deg) of the volume, of real type 

**VSP name \(d\)\(n_{1}\)\(n_{2}\)\(n\)**

**Action:** create a spherical volume

**Parameters:**

name : name of the volume, string of maximum 128 characters

\(d\) : diameter, of real type

\(n_{1}\) : number of latitude-wise facets of a hemisphere, of integer type (default 5, minimum 2)

\(n_{2}\) : number of longitude-wise facets originating at the poles, of integer type (default 5, minimum 2)

\(c\) : colour code for the volume, of integer type

**References:** see available colours in Table 1 of this manual

**VTR name \(x\)\(y\)\(z\)**

**Action:** translate a volume

**Parameters:**

name : name of the volume, string of maximum 128 characters

\(x\)\(y\)\(z\) : translation (cm) of the volume, of real type

**VTU name \(l\)\(r_{1}\)\(r_{2}\)\(n\)\(c\)**

**Action:** create a tube shaped volume

**Parameters:**

name : name of the volume, string of maximum 128 characters

\(l\) : length of the tube, of real type

\(r_{1}\)\(r_{2}\) : inner and outer radii of the tube, of real type

\(n\) : number of radial facets, of integer type

\(c\) : colour code for the volume, of integer type

**References:** see available colours in Table 1 of this manual

### XML Commands

``` XMLREAfile_nameAction:readandloadXMLdatabaseParameters:file_name:stringofmaximum80charactersXMLPRIAction:printgeometricalpropertiesofXMLvolumesXMLDIGdig_namefile_name_nAction:displaydigitsofthedig_nametypeParameters:dig_name:stringofmaximum80charactersfile_name:stringofmaximum80characters\(n\):Switchofintegertype\(0\)removedigitsfromdisplay\(1\)displaydigits(default)\(\mathtt{TRX}\)Action:switchONorOFFthedisplayofVolumeTreeontopofcurrentview

### 3D Characters

**C3D** \(n\)

**Action:** set front face colour for 3D characters

**Parameters:**

\(n\) : colour code of integer type (default=1)

**References:** see available colours in Table 1 of this manual

**C3S** \(n\)

**Action:** set colour of side facets for 3D characters

**Parameters:**

\(n\) : colour code of integer type (default=1)

**References:** see available colours in Table 1 of this manual

**D3D** \(h\)

**Action:** define height of characters to be displayed

**Parameters:**

\(h\) : height (dm) of real type (default 10.0)

**E3D** _name_

**Action:** define 3D characters to be displayed

**Parameters:**

\(n\)ame : string of maximum 80 characters

use capital letters only; use underscore for blank space

**X3D** _x y z_

**Action:** define location of 3D characters to be displayed

**Parameters:**

\(x\), \(y\), \(z\) : coordinates (cm) of real type

## 14 Record of Released Versions

* 13 released 06/2000. Last release for PERSINT 1*. Interfaced to MUONBOX 5. Navigator capabilities : full spatial navigation. Available applications : Interface to AMDB and AGDD, Detection of Clashing Volumes Interface to Event Display and Reconstruction Generation of Muon Tracks, "Move Volume" Window
* 2.01 released 02/2001. Interfaced to MUONBOX version **6.01.02** First documented version. First version released in the official Persint repository. New navigator capabilities : projections, focal length definition, save-to-postscript button. New applications : XML Digits Interface, Magnetic Field Interface.
* 2.02 released 02/2001. Interfaced to MUONBOX version **6.01.03** Correct bug in the \(X\_Y\) attribute of the _mposz_ AGDD XML element.
* 2.03 released 03/2001. Interfaced to MUONBOX version **6.01.07** Modified applications : Move Volume Window, Interface to AGDD (specification of the level of detail visualization using envelopes), Interface to AMDB (8-fold symmetry generalized to _n_-fold), update D0 applications. Introduce Wire Volume visualization capabilities. Replace \(X\_Z\) attribute of the _mposy_ AGDD XML element by \(Z\_X\).
* 2.04 released 04/2001. Interfaced to MUONBOX version **6.03.01** (dealing with _chamber_ misalignment) New application : Online help for the Navigator. Correct '_profile_' attribute of the _tubs_ and _cons_ AGDD XML elements.

[MISSING_PAGE_EMPTY:48]

## Index

\(\mu\)FAST, 17

2BU, 29

3D Characters, 45

AAA, 29

AGDD, 11

AMD, 29

AMDB, amdb_simrec, 11

ARR, 29

ATL, 30

Axis System, 11, 14

Boolean Volume Operations, 28, 39

BOX, 30

C3D, 45

C3S, 45

CLA, 30

Clashing Volumes, 27

Clickable Gauges, 7

CLR, 30

COL, 30

Combined Reconstruction, 17

Command Mode, 29

Command Window, 4

CON, 30

CRO, 30

D3D, 45

DEM, 31

DIG, 31

Digits Display, 15, 24

DLL, 31

DXA, 32

DXO, 32

DYA, 32

DYO, 32

DZA, 32

DZO, 33

E3D, 45

EMI, 33

END, 33

Envelopes, 14

EPA, 33

Event Display, 15

EXI, 33

FIX, 33

FOC, 34

Focal Length, 10

FRA, 34

Help, 10

HIGZ Window, 5

HIT, 34

Hits Display, 15

INT, 34

Intersecting Volumes, 27

Isometric View, 10

MAG, 34

Magnetic Field, 22

MET, 35

MOV, 35

Muon Tracks, 20

MUONBOX, 15

NAV, 35

Navigation, 7

Navigator Interface, 4, 7

Octant Selector, 6

OOO, 35

Perspective, 10

PMI, 35

Postscript File, 5, 7

PRI, 36

Projections, 10

PSF, 36

Push Buttons, 5

QUI, 36

REA, 36

Reconstruction, 15

REP, 36

Repository, 2

ROX, 36

ROY, 37

ROZ, 37SAV, 37

Scales, 6

SUV, 39

SXA, 37

SXO, 38

SYA, 37

SYO, 38

SZA, 38

TRX, 14, 44

V 00, 39

V 10, 39

V 11, 39

VAP, 39

VAR, 39

VBT, 40

V BX, 40

VCO, 40

VCP, 41

VCS, 41

VEL, 41

Versions, 46

Viewed Point, 7

Viewing Point, 7

Volume Appearance, 39

Volume Removing, 26

Volume Rotation, 26

Volume Translation, 26

Volume Tree, 11

Volume Tree Pointers, 11

Voussoirs, 28

VPP, 41

VRF, 42

VRX, 42

VRY, 42

VRZ, 42

VSP, 43

VTR, 43

VTU, 43

VUE, 38

Wire Frame, 39

X 3D, 45

XML, 11

XML DIG, 44

XML Digits Display, 24
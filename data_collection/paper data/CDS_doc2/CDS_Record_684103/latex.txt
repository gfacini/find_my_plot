# Naming and numbering scheme

for the

Endcap muon trigger system

D. Lellouch and L. Levinson,

Weizmann Institute of Science

K. Hasuko,

University of Tokyo

ATLAS Level-1 muon trigger group

14 January 2001

Version 1.1

###### Abstract

_A naming and numbering scheme is described which meets the requirements of all aspects of the construction and operation of the Muon Endcap trigger detector system: simulation, assembly, installation, trigger, read-out, data-base operations, item bar-coding, and finally analysis._

\begin{tabular}{c c l} \hline \hline
**Revision** & **Date** & (Changes from previous version are marked by revision bars in the margin.) \\ \hline DRAFT & 1 March 2000 & initial draft for comments \\
1.0 & 5 June 2000 & Indicated that channel numbering is from 0 from the patch panels to offline. \\  & & Added appendix on mirror symmetry and parity \\  & & Clarified F and B-type units and their alternating placement on the wheels \\  & & Added tomographs of T8 F and B-type triplet units \\  & & Added reference to Dallas DS2401 \\  & & Added LDB for Sector Logic readout \\  & & added section on difference between MUCTPI and TGC octant definitions \\
1.01 & 6 June 2000 & update to Figure 6 \\
1.1 & 14 Jan 2001 & Corrected error in chamber type: M1 E2 is T07. \\  & & All Forward chambers are now either F-type (side C) or B-type (side A). \\ \hline \hline \end{tabular}

This document can be found at: [http://cern.ch/ATLAS-TGC/docs/numbering.pdf](http://cern.ch/ATLAS-TGC/docs/numbering.pdf)

## 1 Introduction

The terms "naming" and "numbering" refer in fact to three totally different concepts:

**Type Naming:**: The "taxidermy" of the zoology. The same name can be shared by several physical objects, this defining the "multiplicity" of the object. An example of type naming in a zoo is 'lion', or hierarchically, _'felis leo'_; in this example, the "multiplicity" is the number of lions living in the zoo.
**Object Numbering:**: In order to differentiate physical objects with the same type name, a running number is used. This numbering can be shared by objects of different types (pure serial number) or be different for objects of different type (serial number by type). Examples of pure serial number object naming in a zoo are the animal id number, e.g. '4375', or just their names (Simba, Mufasa, Scar,...). An example of serial number by type object naming in a zoo is the lion id number, e.g. 'LN027'.
**Location naming:**: The list of "locations" or "virtual objects" that need to be filled. Each of these locations is unique but has a defined type. Another location may have the same defined type. Examples of location naming in a zoo is 'lion cage4', or 'cage436'.

A closely related, but separate issue is **data formats**. Type, object and location names are used in many contexts, including documents, stickers, database field names and field contents, and in various forms of the event data. The names may be encoded in different ways, depending on the context. Data formats, e.g. hit formats, use object or location names to identify data items. Data is often sorted to optimize a particular algorithm, e.g track finding. Different parts of a name may be used as sort keys in an order different from the name itself.

## 2 General principles

1. Hierarchical naming is preferred rather than flat lists of names.
2. At each stage, the naming should be best adapted to its environment. This implies that some schemes start counting from 0 and others from 1. Nonetheless, whenever possible, the numbering runs from 0 to n-1 and not from 1 to n.
3. The same is true for the channel counting direction in both \(\theta\) (r increasing vs \(\eta\) increasing), for which preference is given to increasing \(\eta\), and \(\phi\), for which, whenever possible, preference is given to the ATLAS coordinate system (\(\phi\) = 0 pointing to the center of the accelerator for both ends) over hardware oriented counting.

## 3 Naming of the chambers

A "unit", the basic item coming out of the production line, is a sandwich of either 2 or 3 "detectors" (i.e. gas gaps). These units are named according to their external dimensions (their "major type"); there are 11 major types, 01 to 11. For the wires, read-out electronics can be located on either side of the trapezoid: a unit will be called 'F' (Forward) if, for an observer at the interaction point, the wire ASD boxes are on the _clockwise_ side of the unit they service, and 'B' (Backward) conversely. Each wheel has **both** F and B-type units as shown in Figure e4.

The two endcaps are none-the-less mirror images of each other in order to maintain parity invariance. See Section 14, "Appendix: Chamber mirror symmetry". For the strips, because of the gas flow connections, the strips are read out from the outer (large) side of the trapezoid for types T01-T05, T07 and T10, and from the inner (small) side for types T06, T08, T09 and T11. This difference for the strips is not reflected in the naming.

A unit of a given major type can be placed in one or more of the four substations: 1 for M1 (triplets), 2 and 3 for M2 and M3 (doublets), and 4 for the I substation (doublets). Major types are further differentiated into "minor types": \(\Upsilon\) (for integral, or regular), \(\mathrm{H}^{\prime}\) (hollowed to allow space for the alignment corridors) and 'S' (special or short chambers). The full scheme is shown in Table 1.

Thus, valid examples of unit names are:

**U08B11**: Unit type 8, backward read-out, substation M1, integral detector
**U06F3H**: Unit type 6, forward read-out, substation M3, hollowed detector

The exact breakdown of the various types and their multiplicities is shown in Table 2.

\begin{table}
\begin{tabular}{|c|l l|l|} \hline
**U** & **major-type** & **B/F** & **Wheel** & **minor-type** \\ \hline
01..11 & B=Backward & 1=M1 (triplet) & I=Integral \\  & F=Forward & 2=M2 (doublet) & H=Hollowed \\  & & 3=M3 (doublet) & S=Short \\  & & 4=I (doublet) & \\ \hline \end{tabular}
\end{table}
Table 1: Type naming scheme for the Units

Figure 1: Forward and Backward Units, with their FE-electronics, ASD, boards, as seen from the Interaction Point. Refer also to Figure 4 to see how the ‘F’ and ‘B’ chambers are arranged on the wheels.

[MISSING_PAGE_FAIL:4]

Figure 3: Tomograph of a Type 8 **Backward** (as in forward-backward) triplet unit (U08B11). For Side A, \(\phi\) increases from right to left; for sid eC from left to right.

Figure 2: Tomograph of a Type 8 **Forward** (as in forward-backward) triplet unit (U08F11). For Side A, \(\phi\) increases from right to left; for side C from left to right.

## 5 Overall geometry and location naming

The TGC system consists of two sides, A and C, which are **mirror** images of each other. A is on the side of the +\(z\) axis (which points to Mont Blanc) and C of the -\(z\) axis (which points to the Jura). Because of the slope of the tunnel (1.23%), C is located \(\sim\)30 cm above A. This is the standard ATLAS coordinate system described in [ref. 1].

The TGC System is designed to match more or less the MDT arrangement, with its large and small sectors. But the matching is only approximate: the basic \(\phi\) segmentation of the TGC system is 15\({}^{\circ}\), while an MDT octant is divided into a small (18\({}^{\circ}\)) and a large (27\({}^{\circ}\)) sector. We propose to just **FORGET ABOUT MDT SECTORS** as far as the TGC geometry is concerned.

Figure 4: Example of location naming according to the various schemes. The “-” in the E-1, etc. rings denotes that they are on Side C. T1, T3, T6, T7, T8 are type names. (The small squares are the alignment corridors.) F and B denote the Forward and Backward-edge readout described in Section 3, “Naming of the chambers”. Side A has an F-type unit opposite side C’s B-type unit, and vice versa.

[MISSING_PAGE_FAIL:7]

## 6 DataBase identifiers

In the wake of discussions among ATLAS General Detector Description (AGDD, based on XML) database experts [ref. 4], it was decided to enforce an "identifier scheme" common to all muon subsystems. The proposal for the \(\eta\) division is shown in Figure 5. The location naming scheme agreed upon is detailed in Table 5 and an example is given in Figure e4.

## 7 Front-End Electronics location naming

There are two types of front-end amplifier-shaper-discriminator, ASD, boards: one with, the other without, a lemo connector for the analog charge output from channel 1. One wire channel per chamber will have its analog charge monitored. It is not yet defined which channel will be monitored. The ASD boards have no object serial number. The ASD boards are located on the chambers and, following the hierarchical principle, their location naming follows that of the units:

\begin{table}
\begin{tabular}{|c|c|l|l|l|l|l|} \hline
**ASD** & **A/C** & **wheel** & **E/F** & **\(\phi\)** & **layer** & **W/S** & **board** \\ \hline Side & 1=M1 & E1= Endcap outermost & \(\phi\) division & A,B for doublet & W=wire & **1** to n \\  & 2=M2 & E4 or E5= Endcap & (0..23 for F, & A,B,C for triplet & S=strip & Strips: \\  & 3=M3 & innermost & 0..47 for E) & & n=2 \\  & 4=I & F=Forward & & & \\ \hline \end{tabular}
\end{table}
Table 6: ASD board location numbering scheme

Figure 5: \(\eta\) division identifiers, as proposed for the ATLAS General Detector Description (AGDD) database.

\begin{table}
\begin{tabular}{|c|l|l|l|l|} \hline
**TGC** & **wheel** & **E, F** & \(\pm\eta\) & **L** \\ \hline
1=M1 & E=EndCap, & \(\eta\) division **numbered from 1** & \(\phi\) division & layer \\
2=M2 & F=Forward & (-ve for side C, +ve for side A) & 0..23 for F, & (0..1 or 0..2) \\
3=M3 & & & 0..47 for E & \\
4=I & & & & \\ \hline \end{tabular}
\end{table}
Table 5: Proposal for ATLAS General Detector Description (AGDD) database identifiers for location names

[MISSING_PAGE_FAIL:9]

The location naming scheme is shown in Table 11. Note that it slightly breaks the principle of hierarchical naming: in the endcap region, the module numbering runs from 0 to 47, though the fact that pairs of adjacent modules (\(2i,2i+1\)) belong to the same PSpack should be reflected in the naming scheme. Hierarchical naming is also broken for the running \(\eta\) division of the Slave Boards, which ignores the fact the two adjacent Slave Boards service the same Patch Panel.

## 9 Unique, electronically readable ID for each Patch Panel

Downstream of the patch Panels there are several stages of trigger and readout electronics, each connected by cables or fibers. These stages are spread out geographically over three layers per endcap, the circumference of the I and M1 wheels, fiber patch panels between UXA15 and USA15, and finally racks in USA15. Tracing cable connections by wiggling cables is obviously impossible. Considering that there are about 2500 Slave Boards, it is even unreasonable to work via telephone with a person and pulser at one end, e.g. on a wheel, and another person and

\begin{table}
\begin{tabular}{|c|c|c|c|l|l|} \hline
**SLB/PP** & **A/C** & **E/F** & \(\blacklozenge\) & **W/S** & **D/T/\(\hbar\)** & \(\blacktriangledown\)** \\ \hline \multirow{4}{*}{Slave} & Side & E=Endcap & Set & W=Wires & D=Doublet & \(\eta\) division, \\  & F=Forward & (0..23 for F & S=Strips & T=Triplet & running from 0 to \\  & & 0..47 for E) & & I=Inner & the maximum value \\ \cline{1-1} \cline{3-6}  & & & & & shown in Table 10. \\ \hline \end{tabular}
\end{table}
Table 11: Location naming for Slave Boards and Patch Panels

Figure 6: Sub-fields of location names for one Endcap and one Forward sector of trigger boards and their interconnection. The \(\phi\) part of the field, which runs from 0 to 23 for the forward and 0 to 47 for the endcap region, has been omitted.

receiver at the other. The solution is a unique electronic ID integral to each Patch Panel. This ID can be loaded into the Slave Board and passed through the entire readout chain to the ROD buffers. One then knows the route the data took.

Since the Patch Panels are mounted on the chambers, if great care is taken in connecting the ASD board output cables to the correct Patch Panel inputs, then the ROD knows the wire or strip for any hit it receives, even if there are cabling errors downstream from the Patch Panel. Use of such an ID system will save days of checking and will guarantee the integrity of the data readout.

Similarly the DCS system can know the Patch Panel source of all DCS channels by injecting this same ID into the DCS node on each Patch Panel. The Slave Board\(-\)HiPt-Sector Logic connections can be verified by sending the ID on this pathway and using the DCS system to read it at each point.

Dallas Semiconductor provides a "silicon serial number" part, DS2401[ref. 5], which provide a unique, factory-lasered and tested 64-bit registration number with no two parts alike. They are read out via a serial protocol.

## 10 HiPt boards and Sector Logic

In the trigger system, a tower, along \(z\), of modules is called a sector. Recall that a module is \(1/48^{\rm th}\) of the wheel for the Endcap and \(1/24^{\rm th}\) for the Forward. Each sector is served by one (Forward) or two (Endcap) HiPt boards for the wires and one HiPt board for the strips. The location naming scheme for these boards is summarized in Table 12. All the boards in one sector are shown in Figure 6 above.

For the Sector Logic, which consists of one board per sector, the situation is even simpler, as shown in Table 13. The sector numbering is such that module 0 is in Sector 0. There is only one type of Sector Logic board. See also Figure 7, below. Trigger sectors and Regions-of-Interest

The trigger sectors are numbered from 0, from \(\phi=-15^{\circ}\), as shown in Figure 7. Also shown are the sub-sectors in each sector. Each sub-sector is a Region-of-Interest. There are \(4\times 16\)= 64 sub-sectors in each Forward sector; there are \(4\times 37=148\) sub-sectors in each Endcap sector. They are numbered in the direction of increasing \(\phi\).

\begin{table}
\begin{tabular}{|c|l|l|l|} \hline
**SL** & **A/C** & **E/F** & \(\phi\) \\ \hline \multirow{2}{*}{Side} & E=Endcap & Sector \\  & F=Forward & 0.23 for F \\ \cline{1-1}  & & 0.47 for E \\ \hline \end{tabular}
\end{table}
Table 13: Location naming scheme for the Sector Logic.

\begin{table}
\begin{tabular}{|c|c|l|l|l|} \hline
**HIPT** & **A/C** & **E/F** & \(\phi\) & **W/S** & **board** \\ \hline \multirow{2}{*}{Side} & E=Endcap & Sector & W=Wires & 0 or 1 for wire Endcap \\  & F=Forward & 0.23 for F & S=Strips & 0 otherwise \\  & & 0.47 for E & & \\ \hline \end{tabular}
\end{table}
Table 12: Location naming scheme for the HiPt boards

### Octant definitions and the connection to the MUCTPI

The TGC octant definition, -15\({}^{\circ}\) to +30\({}^{\circ}\), is not the same as that for the RPC trigger sectors, -22.5\({}^{\circ}\) to +22.5\({}^{\circ}\). (The boundary of the TGC octant is the edge of a unit. The boundary of the RPC octants is the _center_ of a small RPC.) A MUCTPI octant, however, must match hits in the same \(\phi\) range for both detectors. The difference is the range in \(\phi\) of exactly one Endcap trigger sector. In order to accommodate this difference (see Figure 7), MUCTPI octant 0 is sent the trigger data from TGC trigger sectors 47, 0, 1, 2, 3, 4, MUCTPI octant 1 is sent sectors 5 to 10,... MUCTPI octant 7 is sent sectors 41 to 46. The Forward TGC chambers are designed not to have any overlap with the Endcap chambers, so their MUCTPI processing is done independently. Consequently MUCTPI octant 0 receives trigger data from TGC Forward sectors 0, 1, 2, MUCTPI octant 1 receives sectors 3, 4, 5, and so on.

Figure 7: Trigger sectors and ROI numbering for Side A, viewed from the interaction point. Side C, a mirror image of Side A, has \(\phi\) increasing in the opposite direction. Note that Sector 0 does not begin at \(\phi\)=0. The shading identifies MUCTPI octant 0; TGC octant 0 consists of EndCap sectors 0 to 5 and Forward sectors 0 to 2.

## 11 Star Switches and RODs

Each Star Switch serves a Local Data Block, LDB. The LDBs are named by location for each octant as in Table 14. There are 13 LDBs in each octant for the Slave Boards and one for the Sector Logic.1

Footnote 1: The HiPt boards are no longer read out; their 2 LDBs per octant therefore no longer exist. The Sector Logic is now read out instead.

The RODs are named by location as shown in Table 15.

## 12 ROB input hit format

_This section is preliminary._

We propose a ROB input hit format that is meant to aid RoI retrieval and track finding by the Level-2 trigger2. It is shown in Table 16. When sorted in this format, all the hits in a trigger sector are close together. Note that since the information of the actual chamber in \(\eta\) division is lost for wires downstream of the Patch Panels, one just gets a running wire group number, from 0 to 511, 0 being the outermost one. The situation for strips is more complicated and is described below.

\begin{table}
\begin{tabular}{c c c c c c c c c c} \cline{2-10}  & Side & Octant & E/F & set & module & w/s & Station & layer & Channel \\ \cline{2-10} \# of bits & 1 & 3 & 1 & 2 & 1 & 1 & 2 & 2 & 9 \\ Values & 0=A & 0..7 & 0=E & 0.2 & E: 0/1 & W=0 & 0=M1 & D: 0/1 & wires: 0..511 \\  & 1=C & & 1=F & F: 0 & S=1 & 1=M2 & TW: 0/1/2 & strips: \\  & & & & & 2=M3 & TS: 0/2 & see text \\  & & & & & 3=I & & & & \\ \end{tabular}
\end{table}
Table 16: ROB input hit format

\begin{table}
\begin{tabular}{c c c c c} \hline
**SSW** & **A/C** & **octant** & **E/F** & **T/D/I** & **n** (Endcap T and D only) \\ \hline \multirow{4}{*}{Side} & 0..7, in & E=Endcap & T=Triplet & for T: n=0..2, in increasing \(\phi\) \\  & increasing \(\phi\) & F=Forward & D=Doublet pair & for D: n=0..5, in increasing \(\phi\) \\  & & & & I=Inner Doublet & for I: not used \\ \cline{2-10}  & & & S=Sector Logic \\ \hline \end{tabular}
\end{table}
Table 14: Location naming scheme for the star switches. There is one Sector Logic Star Switch per octant.

\begin{table}
\begin{tabular}{c c c} \hline
**ROD** & **A/C** & **octant** \\ \hline \multicolumn{2}{c}{Side} & 0.7, in increasing \(\phi\) \\ \hline \end{tabular}
\end{table}
Table 15: Location naming scheme for the RODsStrip numbering in the ROB input hit format:

**Strips for M-Forward, I-Endcap, and I-Forward**

the strips are numbered from 0 to 31, in increasing \(\phi\).
**Strip in M3-Endcap**

This is the pivot plane. There are four chambers along \(\eta\) in the module. The strips are numbered as 32\(\times\)chamber-number + strip-number-in-the-chamber, where chamber-number is 0 for E1, to 3 for E4 and strip-number-in-the-chamber is 0..31, in increasing \(\phi\).
**Strips in M1-Endcap and M2-Endcap**

These are non-pivot planes where each pair of strips in the \(\eta\) direction are OR'ed together. There are four (in he case of M1) or five (in the case of M2) pairs along \(\eta\). The strips are numbered as 32\(\times\)chamber-pair-number + strip-number-in-the-chamber, where the chamber-pair-number is 0 for E1, 1 for E1-E2, 2 for E2-E3, 3 or E3-E4 and 4 for E4-E5 and strip-number-in-the-chamber is 0..31, in increasing \(\phi\).

Other documents detail the data formats for the system upstream from the ROB input.

## 13 LHC unique barcode system

As described in [ref. 7], any piece of equipment of the ALTAS detector will be identified by a unique LHC-wide barcode identifier. The decision on which part of our equipment will be tagged in such a way (Units, cables, PSpacks,...) remains to be taken. As a first step, we show in Table 17 the system already implemented for the Units.

For example, the first unit of type 8 ever produced in Israel is tagged as: **20MTWEIU080001**

\begin{table}
\begin{tabular}{|l l|l|l|l|l|} \hline
**20** & **MT** & **Institute** & **U** & **Type** & **Serial Number** \\ \hline \begin{tabular}{l} Reserved code \\ for ATLAS \\ \end{tabular} & Reserved code & \begin{tabular}{l} WEI=Weizmann \\ for Muon TGC \\ \end{tabular} & 
\begin{tabular}{l} U=Unit \\ KEK,... \\ see [ref. 8] \\ \end{tabular} & U=Unit & 01..11 & 0001..9999 \\ \hline \end{tabular}
\end{table}
Table 17: LHC-wide barcode system 

## 14 Appendix: Chamber mirror symmetry

A vital constraint of the whole ATLAS system is that Endcap Side A and Endcap Side C be mirror images: the magnetic field is toroidal, and, in order not to bias CP studies, one wants the trajectory of a \(\mu^{+}\) in one endcap be the same as that of a \(\mu^{-}\) in the other one. Since the field non-uniformities produce bending in \(\phi\) as well, it implies that not only in \(\eta\), but also in \(\phi\), that the complete segmentation, readout chain, online processing be mirror images.

The smallest physical object to be assembled on the surface and mounted _in situ_ is a'set', an assembly of two units in \(\phi\) times 4 or 5 in \(\eta\). Because of construction and space constraints, the readout cables run along a common rail situated in the center of the set; two adjacent units at the same \(\eta\) in a set thus have wire ASD boards symmetrically arranged. Counting clockwise, an observer standing at the interaction point first sees the "Forward", then the "Backward" unit.

In the Forward region (\(1\,\eta\,!>\!1.6\)) all chambers on side C are Forward-type units while those on side A are Backward-type units.

The holes for the alignment system beam are always located close the side furthest from the read out (resistor side).

With this arrangement, one can see that opposite to any Forward unit stands a Backward one, but this is not enough: one has to make sure that the channel connections themselves are mirror images, i.e. that the electronic numbering of strips runs along the same global \(\phi\) for the two facing units. This is needed not two introduce biases from the clustering algorithms: when two neighbour strips, for example, are hit, the logic systematically selects the first (lower channel number) one; it is thus vital that the \(\phi\) directions, as given by the strip numbering, are mirror images, so that the strip numbers passed downstream to the sector logic correspond to mirror image coordinates.

One could decide that for side A, for example, one always reads clockwise, while for C one always reads anti-clockwise. But doing so would ruin the property that a unit of type Backward, for example, can be mounted on either endcap, since one would have to build "clockwise" and "anti-clockwise" Backward units. Apart from the extra complexity in managing the production chain, it might introduce a "time" bias: a production line produces batches of units of the exact same type, and, because of possible drifts of the physical properties of the various detector components, it is important that two units produced the same week can be mounted on two different endcaps.

The only solution remaining is that inside a set, the strip numbering always goes clockwise for one type (B or F) and anti-clockwise for the other (F or B); By convention, strip number one is always the one closest to the center rail of the set, i.e. Backward units are read clockwise and Forward ones are read anti-clockwise.

Going down to the very last details, this mirror image property is violated in two places which are believed to have negligible effect:

* **strip staggering:** to give a better strip granularity, each unit has two strip patterns, staggered in \(\phi\) by +1/4 and -1/4 of a strip width; again, to avoid extra complexity in the construction, the current arrangement is such that for Side A the strip pattern of the front detector in the unit will be staggered towards positive \(\phi\) and that of the back detector towards negative \(\phi\), and conversely for Side C.

* **wire supports:** for the same construction reason, the staggering of the internal wire supports, which is needed to minimize correlated inefficiencies, in not a perfect mirror image in Side A and C. For triplets, the staggering of the front plane (1) in A is that of the back plane (3) in C and vice versa. For doublets, the same is true for planes 1 and 2.

This can be seen in Figures 2 and 3. Note that in these figures, which show the units as seen from the interaction point, \(\phi\) runs from 1.

## References

* [1] ATLAS Muon Technical Design Report CERN/LHC 97-22, Chapter 3, p53-61; [http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/TDR/Web/TDR_chapters.html](http://atlasinfo.cern.ch/Atlas/GROUPS/MUON/TDR/Web/TDR_chapters.html)
* [2][http://cem.ch/ATLAS-TGC/design/amdb_simrec.tgc](http://cem.ch/ATLAS-TGC/design/amdb_simrec.tgc)
* [3][http://cem.ch/ATLAS-TGC/design/nho1.txt](http://cem.ch/ATLAS-TGC/design/nho1.txt)
* [4][http://home.cern.ch/muoudoc/software/Database/](http://home.cern.ch/muoudoc/software/Database/)
* [5] DS2401, silicon serial number, Dallas Semiconductor Corporation, see: [http://www.dalsemi.com/datasheets/pdfs/2401.pdf](http://www.dalsemi.com/datasheets/pdfs/2401.pdf)
* [6][http://cem.ch/ATLAS-TGC/talks/TGC_ROfmt.pdf](http://cem.ch/ATLAS-TGC/talks/TGC_ROfmt.pdf)
* [7] ATLAS Part Identification, G. Bachy _et al._**ATC-OQ-QA-2040**[http://atlasinfo.cern.ch/ATLAS/GROUPS/PRODUCTION_DATABASE/Documents.html](http://atlasinfo.cern.ch/ATLAS/GROUPS/PRODUCTION_DATABASE/Documents.html)
* [8] ATLAS Institute Codes, K. Pommes. **ATC-OQ-QA-2032**